{"version":3,"file":"static/webpack/static\\development\\pages\\faq\\home.js.a13e87c42b4f87d8968a.hot-update.js","sources":["webpack:///./pages/faq/home.js"],"sourcesContent":["import React, {Fragment} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HeaderFaq from \"../../hoc/Layout/Faq/HeaderFaq\";\r\nimport Header from \"../../hoc/Layout/About/Header\";\r\nimport Footer from \"../../hoc/Layout/About/Footer\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Link from '../../components/Link/Link';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {FAQ} from '../../utils/i18n'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\nimport styles from '../../static/css/pages/faq/home';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nclass Home extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n          faq:null,\r\n          alfredFaq: false,\r\n          search: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.setState({\r\n        faq:FAQ,\r\n        alfredFaq: false,\r\n      })\r\n    }\r\n\r\n    filteredFaq = () => {\r\n      var {alfredFaq, faq, search}=this.state;\r\n      var faqs=alfredFaq ? faq['alfred']:faq['client'];\r\n      if (search) {\r\n        search = search.toLowerCase();\r\n        const allFaqs={...faq['alfred'], ...faq['client']};\r\n        var res={};\r\n        Object.keys(allFaqs).forEach(cat => {\r\n            if (cat.toLowerCase().includes(search)) {\r\n              res[cat]=allFaqs[cat]\r\n            }\r\n            else allFaqs[cat].forEach( topic => {\r\n              if (topic.title.toLowerCase().includes(search) || topic.contents.toLowerCase().includes(search)) {\r\n                if (!res[cat]) {res[cat]=[]}\r\n                res[cat].push(topic)\r\n              }\r\n            });\r\n        });\r\n        faqs=res\r\n      }\r\n      return faqs\r\n    };\r\n\r\n    setAlfred = alfred => {\r\n      this.setState({alfredFaq: alfred})\r\n    };\r\n\r\n    onSearchChange = ev => {\r\n      this.setState({search: ev.target.value})\r\n    };\r\n\r\n    onSearchClear = () => {\r\n      this.setState({search: null})\r\n    };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    const {faq, alfredFaq, search} = this.state;\r\n\r\n    if (!faq) {\r\n      return null\r\n    }\r\n    const searching = Boolean(search);\r\n    const filteredFaqs = this.filteredFaq();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header/>\r\n        <Grid container className={classes.menuContainer}>\r\n          { searching ? null :\r\n            <Grid className={classes.logoContainer}>\r\n              <Grid style={{paddingRight: '25px'}} onClick={() => this.setAlfred(false)}>\r\n                <Grid className={classes.linkBloc}>\r\n                  <img title={'star'} alt={'star'} style={{margin: '0 auto', paddingBottom: '16px'}} src=\"/static/assets/faq/star.svg\" />\r\n                  <Typography className={classes.linkText} style={{fontWeight: alfredFaq ? 'normal' :'bold'}}>Je suis client</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid>\r\n              <Grid className={classes.linkBloc} onClick={() => this.setAlfred(true)}>\r\n                <img title={'ampoulelogo'} alt={'ampoulelogo'} style={{margin: '0 auto', width: '30px', paddingBottom: '10px'}} src=\"/static/assets/faq/amp.svg\" />\r\n                <Typography className={classes.linkText} style={{fontWeight: alfredFaq ? 'bold' :'normal'}}>Je suis Alfred</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            </Grid>\r\n          }\r\n          <Grid>\r\n            <Input\r\n              id=\"standard-with-placeholder\"\r\n              label=\"Recherche\"\r\n              placeholder=\"Recherche\"\r\n              style={{width: '100%', marginTop: 16, marginBottom: 8}}\r\n              type={\"text\"}\r\n              value={password}\r\n              onChange={this.onSearchChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={this.onSearchClear}\r\n                    disabled={!searching}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n          {\r\n            Object.keys(filteredFaqs).map( category => {\r\n              const items=filteredFaqs[category];\r\n              return (\r\n                <Accordion key={category}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\r\n                    <Typography>{category}</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <Grid container>\r\n                      {items.map( i => {\r\n                        return (\r\n                         <Accordion key={i.title}>\r\n                           <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\r\n                             {i.title}\r\n                           </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div dangerouslySetInnerHTML={{ __html: i.contents}} />\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                        )\r\n                      })}\r\n                      </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )\r\n            })\r\n          }\r\n          <Footer/>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAtCA;AAwCA;AAAA;AAAA;AACA;AACA;AA1CA;AA4CA;AAAA;AAAA;AACA;AACA;AA9CA;AAgDA;AAAA;AAAA;AACA;AACA;AAhDA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAoCA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAVA;AAwBA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAKA;AAKA;AACA;AA3IA;AACA;AA4IA;;;;A","sourceRoot":""}