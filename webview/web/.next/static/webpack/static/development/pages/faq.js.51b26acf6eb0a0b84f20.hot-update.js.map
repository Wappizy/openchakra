{"version":3,"file":"static/webpack/static\\development\\pages\\faq.js.51b26acf6eb0a0b84f20.hot-update.js","sources":["webpack:///./hoc/Layout/LayoutFaq.js","webpack:///./pages/faq.js"],"sourcesContent":["import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport styles from '../../static/css/components/Layout/LayoutFaq/LayoutFaq';\r\nimport Header from './About/Header';\r\nimport Footer from './About/Footer';\r\nimport Router from 'next/router';\r\n\r\n\r\nclass LayoutFaq extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.child = React.createRef();\r\n\r\n    this.state={\r\n      becomeAlfredPage: false,\r\n      search: ''\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(Router.pathname === '/footer/becomeAlfred'){\r\n      this.setState({becomeAlfredPage : true})\r\n    }\r\n  }\r\n\r\n  sendSearch = () =>{\r\n    let state = this.child.current.state;\r\n    this.setState({search: state.search}, () => this.props.onSearchChange());\r\n  };\r\n\r\n  callClearFunction = () =>{\r\n    this.setState({search: ''}, () => this.props.callClearFunction());\r\n  };\r\n\r\n\r\n  render(){\r\n    const{classes, index, children}= this.props;\r\n    const{becomeAlfredPage}= this.state;\r\n\r\n    return(\r\n      <Grid className={classes.mainContainerLayoutFaq}>\r\n        <Header ref={this.child} index={index} search={this.sendSearch} clearFuntion={this.callClearFunction}/>\r\n        <Grid className={becomeAlfredPage ? classes.becomeAlfredPageContainer : classes.childrenContainer}>\r\n          {children}\r\n        </Grid>\r\n        <Grid className={classes.footerContainerFaq}>\r\n          <Footer/>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles) (LayoutFaq);\r\n","import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {FAQ} from '../utils/i18n'\r\nimport styles from '../static/css/pages/faq';\r\nimport LayoutFaq from \"../hoc/Layout/LayoutFaq\";\r\nimport NeedMoreFaq from \"../hoc/Layout/Faq/NeedMoreFaq\";\r\n\r\nclass Home extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.child = React.createRef();\r\n    this.state={\r\n      faq:null,\r\n      alfredFaq: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      faq:FAQ,\r\n      alfredFaq: false,\r\n    })\r\n  }\r\n\r\n  filteredFaq = () => {\r\n\r\n    const matches = (search_arr, text) => {\r\n      return search_arr.every(s => text.toLowerCase().includes(s))\r\n    };\r\n\r\n    var {alfredFaq, faq, search}=this.state;\r\n    var faqs=alfredFaq ? faq['alfred']:faq['client'];\r\n    if (search) {\r\n      search = search.toLowerCase().split(' ').map(s => s.trim()).filter(s => s);\r\n      const allFaqs={...faq['alfred'], ...faq['client']};\r\n      var res={};\r\n      Object.keys(allFaqs).forEach(cat => {\r\n        if (cat.toLowerCase().includes(search)) {\r\n          res[cat]=allFaqs[cat]\r\n        }\r\n        else allFaqs[cat].forEach( topic => {\r\n          if (matches(search, topic.title) || matches(search, topic.contents)) {\r\n            if (!res[cat]) {res[cat]=[]}\r\n            res[cat].push(topic)\r\n          }\r\n        });\r\n      });\r\n      faqs=res\r\n    }\r\n    return faqs\r\n  };\r\n\r\n  setAlfred = alfred => {\r\n    this.setState({alfredFaq: alfred})\r\n  };\r\n\r\n  onSearchClear = () => {\r\n    this.setState({search: ''})\r\n  };\r\n\r\n  onSearchChange = () =>{\r\n    let state = this.child.current.state;\r\n    this.setState({search: state.search})\r\n    };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    const {faq, alfredFaq, search} = this.state;\r\n\r\n    if (!faq) {\r\n      return null\r\n    }\r\n    const searching = Boolean(search);\r\n    const filteredFaqs = this.filteredFaq();\r\n\r\n    return (\r\n      <LayoutFaq onSearchChange={this.onSearchChange} ref={this.child} callClearFunction={this.onSearchClear}>\r\n        <Grid style={{display: 'flex', flexDirection: 'column'}}>\r\n          <Grid container className={classes.menuContainer}>\r\n            { searching ? null :\r\n              <Grid className={classes.logoContainer}>\r\n                <Grid onClick={() => this.setAlfred(false)} className={classes.blockContainer}>\r\n                  <Grid className={classes.linkBloc}>\r\n                    <Grid>\r\n                      <img title={'star'} alt={'star'} width={50} height={50} src=\"/static/assets/faq/star.svg\" />\r\n                    </Grid>\r\n                    <Grid>\r\n                      <Typography className={classes.linkText} style={{fontWeight: alfredFaq ? 'normal' :'bold'}}>Je suis client</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid  className={classes.blockContainer}>\r\n                  <Grid className={classes.linkBloc} onClick={() => this.setAlfred(true)}>\r\n                    <Grid>\r\n                      <img title={'ampoulelogo'} alt={'ampoulelogo'} width={50} height={50} src=\"/static/assets/faq/amp.svg\" />\r\n                    </Grid>\r\n                    <Grid>\r\n                      <Typography className={classes.linkText} style={{fontWeight: alfredFaq ? 'bold' :'normal'}}>Je suis Alfred</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          </Grid>\r\n          <Grid style={{marginTop :'10vh'}}>\r\n            {\r\n              Object.keys(filteredFaqs).map( category => {\r\n                const items=filteredFaqs[category];\r\n                return (\r\n                  <Accordion key={category}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\r\n                      <Typography>{category}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container>\r\n                        {items.map( i => {\r\n                          return (\r\n                            <Accordion key={i.title}>\r\n                              <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\r\n                                {i.title}\r\n                              </AccordionSummary>\r\n                              <AccordionDetails>\r\n                                <div dangerouslySetInnerHTML={{ __html: i.contents}} />\r\n                              </AccordionDetails>\r\n                            </Accordion>\r\n                          )\r\n                        })}\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                )\r\n              })\r\n            }\r\n          </Grid>\r\n          <Grid style={{marginTop :'10vh'}}>\r\n            <NeedMoreFaq/>\r\n          </Grid>\r\n        </Grid>\r\n      </LayoutFaq>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAkBA;AACA;AAAA;AAAA;AACA;AACA;AArBA;AAuBA;AAAA;AAAA;AACA;AACA;AAvBA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AA5CA;AACA;AA6CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAkBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA3CA;AA6CA;AAAA;AAAA;AACA;AACA;AA/CA;AAiDA;AAAA;AAAA;AACA;AACA;AAnDA;AAqDA;AACA;AAAA;AAAA;AACA;AACA;AAtDA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AA0CA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAKA;AAGA;AAAA;AAAA;AAAA;AAMA;AACA;AAvIA;AACA;AAwIA;;;;A","sourceRoot":""}