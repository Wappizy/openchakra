{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.219c779bd0b20a367a25.hot-update.js","sources":["webpack:///./components/HomePage/BecomeAlfred/BecomeAlfred.js","webpack:///./components/LogIn/LogIn.js","webpack:///./components/Register/Register.js","webpack:///./components/Register/RegisterStyle.js","webpack:///./hoc/Layout/Footer/Footer.js","webpack:///./hoc/Layout/NavBar/NavBar.js","webpack:///./hoc/Layout/TrustAndSecurity/TrustAndSecurity.js","webpack:///./pages/index.js","webpack:///./static/css/pages/homePage/index.js"],"sourcesContent":["import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {BECOME_ALFRED} from '../../../utils/i18n';\r\nimport Link from '../../Link/Link'\r\n\r\nclass BecomeAlfred extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {style} = this.props;\r\n        return (\r\n            <Grid className={style.becomeAlfredMainContainer}>\r\n                <Grid className={style.becomeAlfredContainer}>\r\n                    <Grid>\r\n                        <h2 className={style.becomeAlfredTitle}>{BECOME_ALFRED.title}</h2>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <p className={style.becomeAlfredText}>{BECOME_ALFRED.text}</p>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Link href={'/footer/becomeAlfred'}>\r\n                            <Button variant={'contained'}\r\n                                    className={style.becomeAlfredButton}>{BECOME_ALFRED.button}</Button>\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid/>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BecomeAlfred;\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport styles from './LogInStyle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from 'next/link';\r\nimport Button from '@material-ui/core/Button';\r\nconst  {setAuthToken, setAxiosAuthentication}=require('../../utils/authentication')\r\nimport axios from 'axios';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport OAuth from '../OAuth/OAuth';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\nconst {PROVIDERS} = require('../../utils/consts');\r\nconst {ENABLE_GF_LOGIN} = require('../../config/config');\r\n\r\nclass LogIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {},\r\n      showPassword: false,\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    axios.post('/myAlfred/api/users/login', user)\r\n      .then(res => {\r\n        setAuthToken()\r\n        setAxiosAuthentication()\r\n        axios.put('/myAlfred/api/users/account/lastLogin')\r\n          .then(data => {\r\n            let path = localStorage.getItem('path');\r\n            this.props.login();\r\n          })\r\n          .catch(err => console.error(err));\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        if (err.response) {\r\n          this.setState({errors: err.response.data});\r\n        }\r\n      });\r\n  };\r\n\r\n   handleClickShowPassword = () => {\r\n    this.setState({ showPassword: !this.state.showPassword });\r\n  };\r\n\r\n  handleMouseDownPassword = (event) =>{\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const {classes, callRegister} = this.props;\r\n    const {errors, username, password, showPassword} = this.state;\r\n    return (\r\n      <Grid className={classes.fullContainer}>\r\n        <Grid style={{width: '100%'}}>\r\n          <Grid className={classes.newContainer}>\r\n            <Grid>\r\n              <h2 className={classes.titleRegister}>Connexion</h2>\r\n            </Grid>\r\n            {ENABLE_GF_LOGIN ?\r\n              <Grid className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.flexContainerPics}>\r\n                      <Grid style={{width: '100%'}}>\r\n                        {PROVIDERS.map(provider =>\r\n                          <OAuth\r\n                            login={true}\r\n                            provider={provider}\r\n                            key={provider}\r\n                          />,\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.flexContainerPics}>\r\n                      <Grid>\r\n                        <h3 style={{color: 'rgba(84,89,95,0.95)', fontWeight: 'bold', letterSpacing: -1}}>Ou</h3>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              :\r\n              null\r\n            }\r\n            <Grid className={classes.containerDialogContent}>\r\n              <form onSubmit={this.onSubmit} style={{marginBottom: 15}}>\r\n                <Grid className={classes.margin}>\r\n                  <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                    <Grid item>\r\n                      <MailOutlineIcon className={classes.colorIcon}/>\r\n                    </Grid>\r\n                    <Grid item className={classes.widthTextField}>\r\n                      <Input\r\n                        label=\"Email\"\r\n                        placeholder=\"Email\"\r\n                        style={{width: '100%', marginTop: 16, marginBottom: 8}}\r\n                        type=\"email\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={this.onChange}\r\n                        error={errors.username}\r\n                      />\r\n                      <em>{errors.username}</em>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid className={classes.margin}>\r\n                  <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                    <Grid item>\r\n                      <LockOpenOutlinedIcon className={classes.colorIcon}/>\r\n                    </Grid>\r\n                    <Grid item className={classes.widthTextField}>\r\n                      <Input\r\n                        id=\"standard-with-placeholder\"\r\n                        label=\"Mot de passe\"\r\n                        placeholder=\"Mot de passe\"\r\n                        style={{width: '100%', marginTop: 16, marginBottom: 8}}\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={this.onChange}\r\n                        error={errors.password}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={this.handleClickShowPassword}\r\n                              onMouseDown={this.handleMouseDownPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        }\r\n                      />\r\n                      <em>{errors.password}</em>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item style={{display: 'flex', justifyContent: 'center', marginTop: 30}}>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{width: '100%', color: 'white'}}>\r\n                    Connexion\r\n                  </Button>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n            <Grid item style={{display: 'flex', flexDirection: 'column', marginBottom: '10%'}}>\r\n              <Link href={'/forgotPassword'}><a color=\"primary\" style={{textDecoration: 'none', color: '#2FBCD3'}}>Mot\r\n                de passe oubli√© ?</a></Link>\r\n              <a color=\"primary\" onClick={callRegister}\r\n                 style={{textDecoration: 'none', color: '#2FBCD3', cursor: 'pointer'}}>Pas encore inscrit ?\r\n                Inscrivez-vous !</a>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(LogIn);\r\n","const {setAuthToken, setAxiosAuthentication}=require('../../utils/authentication')\r\nimport React from 'react';\r\nimport {toast} from 'react-toastify';\r\nimport {checkPass1, checkPass2} from '../../utils/passwords';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Typography} from '@material-ui/core';\r\nimport AlgoliaPlaces from 'algolia-places-react';\r\nimport {registerLocale} from 'react-datepicker';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport fr from 'date-fns/locale/fr';\r\nimport styles from './RegisterStyle';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from 'prop-types';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PhoneIphoneOutlinedIcon from '@material-ui/icons/PhoneIphoneOutlined';\r\nimport Router from 'next/router';\r\nimport Link from 'next/link';\r\n\r\nimport OAuth from '../OAuth/OAuth';\r\nimport Information from '../Information/Information';\r\nconst {getLoggedUserId}=require('../../utils/functions')\r\n\r\nvar parse = require('url-parse');\r\nconst {PROVIDERS} = require('../../utils/consts');\r\nconst {ENABLE_GF_LOGIN} = require('../../config/config');\r\nconst {isPhoneOk} = require('../../utils/sms');\r\n\r\n\r\nregisterLocale('fr', fr);\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const {inputRef, onChange, ...other} = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: '',\r\n      name: '',\r\n      birthday: new Date(),\r\n      email: '',\r\n      password: '',\r\n      password2: '',\r\n      address: '',\r\n      city: '',\r\n      zip_code: '',\r\n      country: '',\r\n      checked: false,\r\n      status1: {error: '', check: false},\r\n      status2: {error: '', check: false},\r\n      errors: {},\r\n      lat: '',\r\n      lng: '',\r\n      activeStep: 0,\r\n      file: null,\r\n      picture: '',\r\n      // Avatar link coming from Google or Facebook\r\n      avatar: null,\r\n      value: '',\r\n      phone: '',\r\n      phoneOk: false,\r\n      // Phone sendVerificationSMS\r\n      smsCodeOpen: false, // Show/hide SMS code modal\r\n      smsCode: '', // Typed SMS code\r\n      smsError: null,\r\n      phoneConfirmed: false,\r\n      serverError: false, // Si erreur serveur pour l''envoi du SMS, continuer quand m√™me\r\n      errorEmailType: '',\r\n      emailValidator: false,\r\n      firstPageValidator: true,\r\n      secondPageValidator: true,\r\n      errorExistEmail: false,\r\n      birthdayError: '',\r\n      cityError: '',\r\n    };\r\n    this.handleChecked = this.handleChecked.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let query = parse(window.location.href, true).query;\r\n    if (query.google_id) {\r\n      this.setState({\r\n        google_id: query.google_id,\r\n        email: query.email,\r\n        name: query.lastname,\r\n        firstname: query.firstname,\r\n        firstPageValidator: false,\r\n        picture: query.picture,\r\n        file: query.picture,\r\n        avatar: query.picture,\r\n      });\r\n    }\r\n    if (query.facebook_id) {\r\n      this.setState({\r\n        facebook_id: query.facebook_id,\r\n        email: query.email,\r\n        name: query.lastname,\r\n        firstname: query.firstname,\r\n        activeStep: 1,\r\n        firstPageValidator: false,\r\n        avatar: query.picture,\r\n      });\r\n    }\r\n    if (query.error) {\r\n      this.setState({errorExistEmail: true});\r\n    }\r\n    if (getLoggedUserId()) {\r\n      toast.warn('Vous √™tes d√©j√† inscrit');\r\n      Router.push('/');\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.activeStep !== prevState.activeStep) {\r\n      this.props.sendParentData(this.state.activeStep);\r\n    }\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({[e.target.name]: e.target.value}, () => this.validatorFirstStep());\r\n  };\r\n\r\n  onChangePhone(e) {\r\n    var {name, value} = e.target;\r\n    this.setState({[name]: value});\r\n    if (name === 'phone') {\r\n      const phoneOk = isPhoneOk(value);\r\n      if (phoneOk && value.startsWith('0')) {\r\n        value = '33' + value.substring(1);\r\n      }\r\n      this.setState({'phone': value, phoneOk: isPhoneOk(value)});\r\n    }\r\n  };\r\n\r\n  onChangePicture = e => {\r\n    this.setState({picture: e.target.files[0]});\r\n  };\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      file:\r\n        event.target.files[0] ? URL.createObjectURL(event.target.files[0]) : null,\r\n    });\r\n  }\r\n\r\n  onChangePassword = e => {\r\n    this.setState({\r\n      status1: checkPass1(this.state.password),\r\n      status2: checkPass2(this.state.password, this.state.password2),\r\n    }, () => this.validatorFirstStep());\r\n  };\r\n\r\n  onChangeAddress(result) {\r\n    if (result) {\r\n      const suggestion=result.suggestion\r\n      this.setState({\r\n        city: suggestion.city, address: suggestion.name, zip_code: suggestion.postcode, country: suggestion.country,\r\n        lat: suggestion.latlng.lat, lng: suggestion.latlng.lng,\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        city: null, address: null, zip_code: null, country: null,\r\n        lat: null, lng: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChecked() {\r\n    this.setState({checked: !this.state.checked}, () => this.validatorSecondStep());\r\n  };\r\n\r\n  sendSms = () => {\r\n    setAxiosAuthentication()\r\n    axios.post('/myAlfred/api/users/sendSMSVerification', {phone: this.state.phone})\r\n      .then(res => {\r\n        var txt = 'Le SMS a √©t√© envoy√©';\r\n        toast.info(txt);\r\n        this.setState({smsCodeOpen: true});\r\n      })\r\n      .catch(err => {\r\n        toast.error('Impossible d\\'envoyer le SMS');\r\n        this.setState({serverError: true});\r\n      });\r\n  };\r\n\r\n  checkSmsCode = () => {\r\n    setAxiosAuthentication()\r\n    axios.post('/myAlfred/api/users/checkSMSVerification', {sms_code: this.state.smsCode})\r\n      .then(res => {\r\n        if (res.data.sms_code_ok) {\r\n          toast.info('Votre num√©ro de t√©l√©phone est valid√©');\r\n          this.setState({smsCodeOpen: false, phoneConfirmed: true});\r\n        } else {\r\n          toast.error('Le code est incorrect');\r\n        }\r\n      })\r\n      .catch(err => toast.error('Erreur √† la v√©rification du code'));\r\n  };\r\n\r\n  onSubmit = () => {\r\n\r\n    const newUser = {\r\n      google_id: this.state.google_id,\r\n      facebook_id: this.state.facebook_id,\r\n      firstname: this.state.firstname,\r\n      name: this.state.name,\r\n      birthday: this.state.birthday,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n      address: this.state.address,\r\n      zip_code: this.state.zip_code,\r\n      city: this.state.city,\r\n      country: this.state.country,\r\n      lat: this.state.lat,\r\n      lng: this.state.lng,\r\n    };\r\n\r\n    const username = this.state.email;\r\n    const password = this.state.password;\r\n    const google_id = this.state.google_id;\r\n    const facebook_id = this.state.facebook_id;\r\n\r\n    this.setState({cityError: null})\r\n    this.setState({birthdayError: null})\r\n\r\n    axios\r\n      .post('/myAlfred/api/users/register', newUser)\r\n      .then(() => {\r\n        toast.info('Inscription r√©ussie');\r\n        axios.post('/myAlfred/api/users/login', {username, password, google_id, facebook_id})\r\n          .then(() => {\r\n            setAuthToken()\r\n            setAxiosAuthentication()\r\n          })\r\n          .catch()\r\n          .then(this.addPhoto).catch()\r\n          .then(this.setState({activeStep: this.state.activeStep + 1})).catch()\r\n          .then(this.submitPhone).catch();\r\n      })\r\n      .catch(err => {\r\n        const errors=err.response.data\r\n        const errKeys = Object.keys(errors)\r\n        this.setState({errors: err.response.data});\r\n        if (errKeys.includes('email')) {\r\n          this.setState({activeStep: 0});\r\n        }\r\n        if (errKeys.includes('address')) {\r\n          this.setState({cityError: errors.address, activeStep: 1});\r\n        }\r\n        if (errKeys.includes('birthday')) {\r\n          this.setState({birthdayError: errors.birthday, activeStep: 1});\r\n        }\r\n      });\r\n  };\r\n\r\n  addPhoto = () => {\r\n    setAxiosAuthentication()\r\n\r\n    if (this.state.picture !== '' || this.state.avatar !== '') {\r\n      const formData = new FormData();\r\n      formData.append('myImage', this.state.picture);\r\n      formData.append('avatar', this.state.avatar);\r\n      const config = {\r\n        headers: {\r\n          'content-type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      axios.post('/myAlfred/api/users/profile/picture', formData, config)\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n    /** else if (this.state.avatar !== '') {\r\n          axios.post(\"/myAlfred/api/users/profile/avatar\", { avatar: this.state.avatar})\r\n            .catch((error) => {\r\n              console.error(error)\r\n            })\r\n        } */\r\n  };\r\n\r\n\r\n  submitPhone = e => {\r\n\r\n    // Don't send empty phone number\r\n    if (!this.state.phone) {\r\n      return\r\n    }\r\n    if (!this.state.phoneConfirmed && !this.state.serverError) {\r\n      this.sendSms();\r\n    }\r\n\r\n    const newPhone = {\r\n      phone: this.state.phone,\r\n      phone_confirmed: this.state.phoneConfirmed,\r\n    };\r\n\r\n    setAxiosAuthentication()\r\n    axios\r\n      .put('/myAlfred/api/users/profile/phone', newPhone)\r\n      .then(res => {\r\n        toast.info('T√©l√©phone ajout√©');\r\n      })\r\n      .catch(err =>\r\n        console.error(err)\r\n      );\r\n  };\r\n\r\n  onChangeBirthdayDate = (e) => {\r\n    let day = new Date(this.state.birthday);\r\n    day.setDate(e.target.value);\r\n    this.setState({birthday: day});\r\n  };\r\n\r\n  onChangeBirthdayMonth = (e) => {\r\n    let month = new Date(this.state.birthday);\r\n    month.setMonth(e.target.value - 1);\r\n    this.setState({birthday: month});\r\n  };\r\n\r\n  onChangeBirthdayYear = (e) => {\r\n    let year = new Date(this.state.birthday);\r\n    year.setFullYear(e.target.value);\r\n    this.setState({birthday: year});\r\n  };\r\n\r\n  confirmLater = () => {\r\n    this.setState({smsCodeOpen: false});\r\n  };\r\n\r\n  onChangeEmail = (event) => {\r\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (event.target.value.match(regex)) {\r\n      this.setState({emailValidator: true, emailError: ''});\r\n    } else {\r\n      this.setState({emailValidator: false, emailError: 'Veuillez entrer une adresse email valide.'});\r\n    }\r\n    this.setState({email: event.target.value}, () => this.validatorFirstStep());\r\n  };\r\n\r\n  validatorFirstStep = () => {\r\n    if (this.state.errorEmailType === '' && this.state.email !== '' && this.state.emailValidator && this.state.firstname !== '' && this.state.name !== '' && this.state.status1.check && this.state.status2.check) {\r\n      this.setState({firstPageValidator: false});\r\n    } else {\r\n      this.setState({firstPageValidator: true});\r\n    }\r\n  };\r\n\r\n  validatorSecondStep = () => {\r\n    if (this.state.checked) {\r\n      this.setState({secondPageValidator: false});\r\n    } else {\r\n      this.setState({secondPageValidator: true});\r\n    }\r\n  };\r\n\r\n  renderSwitch(stepIndex, classes, errors) {\r\n\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <Grid container>\r\n            <Information\r\n              open={this.state.errorExistEmail}\r\n              onClose={() => this.setState({errorExistEmail: false})}\r\n              type='warning'\r\n              text={'Oups ! Un compte utilisant cette adresse mail existe d√©j√†'}\r\n            />\r\n            {!this.state.google_id && ENABLE_GF_LOGIN ?\r\n              <Grid className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.flexContainerPics}>\r\n                      <Grid item>\r\n                        <h3 style={{color: 'rgba(84,89,95,0.95)', fontWeight: 'bold', letterSpacing: -1}}>Avec</h3>\r\n                      </Grid>\r\n                      <Grid style={{width: '70%'}}>\r\n                        {PROVIDERS.map(provider =>\r\n                          <OAuth\r\n                            login={false}\r\n                            provider={provider}\r\n                            key={provider}\r\n                          />,\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.flexContainerPics}>\r\n                      <Grid>\r\n                        <h3 style={{color: 'rgba(84,89,95,0.95)', fontWeight: 'bold', letterSpacing: -1}}>Ou</h3>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid> : null\r\n            }\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid item>\r\n                  <MailOutlineIcon className={classes.colorIcon}/>\r\n                </Grid>\r\n                <Grid item className={classes.widthTextField}>\r\n                  <TextField\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Email\"\r\n                    margin=\"normal\"\r\n                    style={{width: '100%'}}\r\n                    type=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    error={this.state.emailError}\r\n                    helperText={this.state.emailError}\r\n                    disabled={!!this.state.google_id}\r\n                  />\r\n                  <em style={{color: 'red'}}>{errors.email}</em>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid item>\r\n                  <PersonOutlineIcon className={classes.colorIcon}/>\r\n                </Grid>\r\n                <Grid item className={classes.widthTextField}>\r\n                  <TextField\r\n                    id=\"standard-with-placeholder\"\r\n                    label=\"Pr√©nom\"\r\n                    placeholder=\"Pr√©nom\"\r\n                    margin=\"normal\"\r\n                    style={{width: '100%'}}\r\n                    type=\"text\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChange}\r\n                    error={errors.firstname}\r\n                  />\r\n                </Grid>\r\n                <em style={{color: 'red'}}>{errors.firstname}</em>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid item>\r\n                  <PersonOutlineIcon className={classes.colorIcon}/>\r\n                </Grid>\r\n                <Grid item className={classes.widthTextField}>\r\n                  <TextField\r\n                    label=\"Nom\"\r\n                    placeholder=\"Nom\"\r\n                    margin=\"normal\"\r\n                    style={{width: '100%'}}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                </Grid>\r\n                <em style={{color: 'red'}}>{errors.name}</em>\r\n              </Grid>\r\n            </Grid>\r\n            {!this.state.google_id ?\r\n              <Grid className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                      <Grid item>\r\n                        <LockOpenOutlinedIcon className={classes.colorIcon}/>\r\n                      </Grid>\r\n                      <Grid item className={classes.widthTextField}>\r\n                        <TextField\r\n                          label=\"Cr√©er un mot de passe\"\r\n                          placeholder=\"Cr√©er un mot de passe\"\r\n                          margin=\"normal\"\r\n                          style={{width: '100%'}}\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          value={this.state.password}\r\n                          onChange={this.onChange}\r\n                          onKeyUp={this.onChangePassword}\r\n                          error={this.state.status1.error}\r\n                          helperText={this.state.status1.error}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                      <Grid item>\r\n                        <LockOutlinedIcon className={classes.colorIcon}/>\r\n                      </Grid>\r\n                      <Grid item className={classes.widthTextField}>\r\n                        <TextField\r\n                          label=\"Confirmer mot de passe\"\r\n                          placeholder=\"Confirmer mot de passe\"\r\n                          margin=\"normal\"\r\n                          style={{width: '100%'}}\r\n                          type=\"password\"\r\n                          name=\"password2\"\r\n                          value={this.state.password2}\r\n                          onChange={this.onChange}\r\n                          onKeyUp={this.onChangePassword}\r\n                          error={this.state.status2.error}\r\n                          helperText={this.state.status2.error}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid> : null\r\n            }\r\n          </Grid>\r\n        );\r\n      case 1:\r\n        return (\r\n          <Grid container>\r\n            <Grid className={classes.margin}>\r\n            { true ? null  :\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <input accept=\"image/*\"\r\n                       className=\"input\"\r\n                       style={{display: 'none'}}\r\n                       id=\"icon-button-file\"\r\n                       type=\"file\"\r\n                       onChange={(event) => {\r\n                         this.handleChange(event);\r\n                         this.onChangePicture(event);\r\n                       }}\r\n                       name={'myImage'}\r\n                />\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    style={{backgroundImage: `url('${this.state.file}')`}}\r\n                    component=\"span\"\r\n                  >\r\n                    <PhotoCamera style={{fontSize: '2rem'}}/>\r\n                  </IconButton>\r\n                </label>\r\n              </Grid>\r\n            }\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid>\r\n                  <Typography className={classes.subtitle}>Adresse postale</Typography>\r\n                </Grid>\r\n                <Grid>\r\n                  <p className={classes.textStyle}>Votre adresse ne sera pas visible, mais nous l‚Äôutiliserons pour vous\r\n                    proposer\r\n                    ou proposer vos services aux utilisateurs ou Alfred proches de chez vous.</p>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid item style={{width: '100%'}}>\r\n                  <AlgoliaPlaces\r\n                    className={classes.textFieldAlgo}\r\n                    placeholder='Recherchez votre adresse'\r\n                    options={{\r\n                      appId: 'plKATRG826CP',\r\n                      apiKey: 'dc50194119e4c4736a7c57350e9f32ec',\r\n                      language: 'fr',\r\n                      countries: ['fr'],\r\n                      type: 'address',\r\n\r\n                    }}\r\n                    onChange={(suggestion) => this.onChangeAddress(suggestion)}\r\n                    onClear={() => this.onChangeAddress(null)}\r\n                  />\r\n                  <em style={{color: 'red'}}>{this.state.cityError}</em>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid>\r\n                  <Typography className={classes.subtitle}>Date de naissance</Typography>\r\n                </Grid>\r\n                <Grid>\r\n                  <p className={classes.textStyle}>Pour vous inscrire, vous devez eÃÇtre √¢geÃÅ d‚Äôau moins 16 ans. Les\r\n                    autres\r\n                    utilisateurs ne verront pas votre date de naissance.\r\n                  </p>\r\n                </Grid>\r\n                <Grid item className={classes.datenaissance} style={{display: 'flex', alignItems: 'center'}}>\r\n                  <Grid container style={{justifyContent: 'space-between', flexWrap: 'nowrap'}}>\r\n                    <Grid item style={{width: '30%'}}>\r\n                      <TextField\r\n                        label=\"Jour\"\r\n                        placeholder=\"Jour\"\r\n                        onChange={this.onChangeBirthdayDate}\r\n                        inputProps={{\r\n                          maxLength: 2,\r\n                        }}\r\n                        InputProps={{\r\n                          inputComponent: NumberFormatCustom,\r\n                        }}\r\n                        error={this.state.birthdayError}\r\n                        helperText={this.state.birthdayError}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item style={{width: '30%'}}>\r\n                      <TextField\r\n                        label=\"Mois\"\r\n                        placeholder=\"Mois\"\r\n                        onChange={this.onChangeBirthdayMonth}\r\n                        inputProps={{\r\n                          maxLength: 2,\r\n                        }}\r\n                        InputProps={{\r\n                          inputComponent: NumberFormatCustom,\r\n                        }}\r\n                        error={this.state.birthdayError}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item style={{width: '30%'}}>\r\n                      <TextField\r\n                        label=\"Ann√©e\"\r\n                        placeholder=\"Ann√©e\"\r\n                        onChange={this.onChangeBirthdayYear}\r\n                        inputProps={{\r\n                          maxLength: 4,\r\n                        }}\r\n                        InputProps={{\r\n                          inputComponent: NumberFormatCustom,\r\n                        }}\r\n                        error={this.state.birthdayError}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid className={classes.newContainer}>\r\n                  <Grid>\r\n                    <Typography className={classes.subtitle}>T√©l√©phone</Typography>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <p className={classes.textStyle}>L'ajout de votre num√©ro de t√©l√©phone permet aux membres My-Alfred\r\n                      de disposer d'un moyen pour vous contacter.\r\n                    </p>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                  <Grid item>\r\n                    <PhoneIphoneOutlinedIcon className={classes.colorIcon}/>\r\n                  </Grid>\r\n                  <Grid item style={{width: '70%'}}>\r\n                    <TextField\r\n                      id=\"standard-with-placeholder\"\r\n                      label=\"Num√©ro de t√©l√©phone\"\r\n                      placeholder=\"Num√©ro de t√©l√©phone\"\r\n                      margin=\"normal\"\r\n                      style={{width: '100%'}}\r\n                      type={'number'}\r\n                      name=\"phone\"\r\n                      value={this.state.phone}\r\n                      onChange={(e) => this.onChangePhone(e)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid>\r\n                  <Grid container style={{marginTop: 15, alignItems: 'center'}}>\r\n                    <Grid>\r\n                      <Checkbox\r\n                        checked={this.state.checked}\r\n                        onChange={this.handleChecked}\r\n                        value=\"checked\"\r\n                        color=\"primary\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid>\r\n                      <a href={'/cgu'} target=\"_blank\" style={{color: '#2FBCD3'}}>J‚Äôaccepte les conditions\r\n                        geÃÅneÃÅrales d‚Äôutilisation de My-Alfred.</a>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Grid container>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid>\r\n                  <h2 className={classes.titleRegister}>Inscription termin√©e</h2>\r\n                </Grid>\r\n                <Grid className={classes.newContainer}>\r\n                  <Grid container style={{display: 'flex', justifyContent: 'center', height: 100 /*safari*/}}>\r\n                    <img src='../../static/happy_castor.svg' style={{width: 100}} alt={'success'}/>\r\n                  </Grid>\r\n                  <Grid item style={{display: 'flex', justifyContent: 'center', marginTop: 20, textAlign: 'center'}}>\r\n                    <p>Inscription r√©ussie ! Vous pouvez maintenant proposer ou rechercher vos services sur My\r\n                      Alfred</p>\r\n                  </Grid>\r\n                  <Grid item className={classes.responsiveButton}>\r\n                    <Grid item style={{marginRight: '1%'}}>\r\n                      <Link href={'/search?search=1'}>\r\n                        <a style={{textDecoration: 'none'}}>\r\n                          <Button variant={'contained'} color={'primary'} style={{color: 'white'}}>Commencez √†\r\n                            explorer</Button>\r\n                        </a>\r\n                      </Link>\r\n                    </Grid>\r\n                    <Grid item className={classes.responsiveSecondaryButton}>\r\n                      <Link href={'/creaShop/creaShop'}>\r\n                        <a style={{textDecoration: 'none'}}>\r\n                          <Button variant={'contained'} color={'secondary'} style={{color: 'white'}}>Proposer mes\r\n                            services</Button>\r\n                        </a>\r\n                      </Link>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                  <Grid style={{marginTop: 20}}>\r\n                    <hr/>\r\n                    <Grid style={{marginTop: 20}}>\r\n                      <Link href={'/needHelp/needHelp'} target=\"_blank\">\r\n                        <a target=\"_blank\" style={{\r\n                          color: '#2FBCD3',\r\n                          textAlign: 'center',\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          textDecoration: 'none',\r\n                        }}>\r\n                          Besoin d'aide pour proposer vos services ? Prenez rendez-vous avec l'√©quipe My Alfred ici !\r\n                        </a>\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Dialog open={this.state.smsCodeOpen} aria-labelledby=\"form-dialog-title\">\r\n                  <DialogTitle id=\"form-dialog-title\">Confirmation du num√©ro de t√©l√©phone</DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>Saisissez le code re√ßu par SMS</DialogContentText>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Code\"\r\n                      type=\"number\"\r\n                      placeholder=\"0000\"\r\n                      maxLength=\"4\"\r\n                      value={this.state.smsCode}\r\n                      onChange={e => {\r\n                        this.setState({smsCode: e.target.value});\r\n                      }}\r\n                      fullWidth\r\n                      errors={this.state.smsError}\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={() => this.confirmLater()} color=\"primary\">\r\n                      Confirmer plus tard\r\n                    </Button>\r\n                    <Button\r\n                      disabled={this.state.smsCode.length !== 4}\r\n                      onClick={() => this.checkSmsCode()}\r\n                      color=\"primary\">\r\n                      Confirmer\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n    }\r\n  }\r\n\r\n  handleNext = (activeStep) => {\r\n    if (activeStep === 1) {\r\n      this.onSubmit();\r\n    } else {\r\n      this.setState({activeStep: this.state.activeStep + 1});\r\n    }\r\n  };\r\n\r\n\r\n  handleBack = () => {\r\n    this.setState({activeStep: this.state.activeStep - 1});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {classes, callLogin} = this.props;\r\n    const {errors, activeStep, firstPageValidator, secondPageValidator} = this.state;\r\n\r\n    return (\r\n      <Grid className={classes.fullContainer}>\r\n        <Grid>\r\n          <Grid className={classes.newContainer}>\r\n            {\r\n              activeStep === 0 ?\r\n                <Grid>\r\n                  <h2 className={classes.titleRegister}>Inscription</h2>\r\n                </Grid> : null\r\n            }\r\n            <Grid className={classes.containerSwitch}>\r\n              {this.renderSwitch(activeStep, classes, errors)}\r\n            </Grid>\r\n            {\r\n              activeStep < 2 ?\r\n                <Grid style={{marginTop: 10}}>\r\n                  <hr/>\r\n                  <Grid>\r\n                    <MobileStepper\r\n                      variant=\"progress\"\r\n                      steps={2}\r\n                      position=\"static\"\r\n                      activeStep={activeStep}\r\n                      className={classes.rootStepper}\r\n                      classes={{\r\n                        progress: classes.progress,\r\n                      }}\r\n                      nextButton={\r\n                        <Button size=\"small\" onClick={() => this.handleNext(activeStep)}\r\n                                disabled={activeStep === 0 ? firstPageValidator : secondPageValidator}>\r\n                          {activeStep === 0 ? 'Suivant' : 'Terminer'}\r\n                          <KeyboardArrowRight/>\r\n                        </Button>\r\n                      }\r\n                      backButton={\r\n                        <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\r\n                          <KeyboardArrowLeft/>\r\n                          Pr√©c√©dent\r\n                        </Button>\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid container className={classes.bottomContainer}>\r\n                    <Grid item>\r\n                      <a color={'primary'} onClick={callLogin} style={{color: '#2FBCD3', cursor: 'pointer'}}>Vous\r\n                        avez d√©j√† un compte My Alfred ?</a>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                </Grid> : null\r\n            }\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Register);\r\n","export default theme => ({\r\n  fullContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n  },\r\n  datenaissance: {\r\n    marginTop: 20,\r\n    width: '100%',\r\n  },\r\n  newContainer: {\r\n    padding: '5%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 10,\r\n    },\r\n  },\r\n  country: {\r\n    width: '100%',\r\n  },\r\n\r\n  birthday: {\r\n    height: 40,\r\n    fontSize: '0.9rem',\r\n  },\r\n  rootStepper: {\r\n    width: '100%',\r\n    flexGrow: 1,\r\n\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  textFieldAlgo: {\r\n    borderTop: 0,\r\n    borderLeft: 0,\r\n    borderRight: 0,\r\n\r\n  },\r\n  mainContainer: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n\r\n    },\r\n  },\r\n  signupContainer: {\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 200,\r\n    },\r\n\r\n  },\r\n  card: {\r\n    fontFamily: 'Helvetica',\r\n    width: 800,\r\n    marginTop: '100px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '90%',\r\n    },\r\n  },\r\n  banner: {\r\n    marginBottom: 25,\r\n    backgroundColor: '#2FBCD3',\r\n    height: 80,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]: {\r\n      textAlign: 'center',\r\n    },\r\n\r\n  },\r\n  title: {\r\n    fontFamily: 'Helvetica',\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 0,\r\n    paddingTop: 22,\r\n    letterSpacing: 1,\r\n  },\r\n  widthTextField: {\r\n    width: '70%',\r\n    whiteSpace: 'nowrap',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '80%',\r\n    },\r\n  },\r\n  bottomContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n  },\r\n  progress: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '25%',\r\n    },\r\n  },\r\n  titleRegister: {\r\n    textAlign: 'center',\r\n    margin: '0px auto 1.6rem',\r\n    fontSize: '1.6rem',\r\n    color: 'rgba(84,89,95,0.95)',\r\n    letterSpacing: -1,\r\n    fontWeight: 'bold',\r\n  },\r\n  containerSwitch: {\r\n    width: '100%',\r\n    height: '100%',\r\n    margin: '0px auto 1.6rem',\r\n  },\r\n  genericContainer: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n  },\r\n  genericContainerAndMargin: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 30,\r\n  },\r\n  colorIcon: {\r\n    color: 'rgba(84,89,95,0.95)',\r\n  },\r\n  button: {\r\n    width: 150,\r\n    height: 150,\r\n    backgroundColor: 'lightgray',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: '1.2rem',\r\n    width: '100%',\r\n    marginTop: 15,\r\n    textAlign: 'center',\r\n  },\r\n  textStyle: {\r\n    textAlign: 'center',\r\n  },\r\n  responsiveButton: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n  responsiveSecondaryButton: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginTop: '2%',\r\n    },\r\n  },\r\n  flexContainerPics: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n})\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '../../../components/Link/Link'\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport styles from '../../../static/css/components/Footer/Footer'\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <Grid className={classes.footerMainStyle}>\r\n                <Grid>\r\n                    <Grid container className={classes.footerMainContainer}>\r\n                        <Hidden only={['xs']}>\r\n                            <Grid item xl={3} lg={3} className={classes.footerSection}>\r\n                                <Grid>\r\n                                    <h3 className={classes.footerTitileSection}>√Ä propos</h3>\r\n                                </Grid>\r\n                                <Link href={'/footer/apropos'}>\r\n                                    <Grid style={{marginBottom: '2vh'}}>\r\n                                        <Typography className={classes.footerLink}>My Alfred</Typography>\r\n                                    </Grid>\r\n                                </Link>\r\n                                <Link href={'/footer/ourTeam'}>\r\n                                    <Grid style={{marginBottom: '2vh'}}>\r\n                                        <Typography className={classes.footerLink}>Notre √©quipe</Typography>\r\n                                    </Grid>\r\n                                </Link>\r\n                                <Link href={'/contact'}>\r\n                                    <Grid>\r\n                                        <Typography className={classes.footerLink}>Nous contacter</Typography>\r\n                                    </Grid>\r\n                                </Link>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Hidden only={['xs']}>\r\n                            <Grid item xl={3} lg={3} className={classes.footerSection}>\r\n                                <Grid>\r\n                                    <h3 className={classes.footerTitileSection}>Communaut√©</h3>\r\n                                </Grid>\r\n                                <Link href={'/footer/ourCommunity'}>\r\n                                    <Grid style={{marginBottom: '2vh'}}>\r\n                                        <Typography className={classes.footerLink}>Notre communaut√©</Typography>\r\n                                    </Grid>\r\n                                </Link>\r\n                                {/*<Link href={'/'}>*/}\r\n                                {/*    <Grid style={{marginBottom: '2vh'}}>*/}\r\n                                {/*        <Typography className={classes.footerLink}>Le blog</Typography>*/}\r\n                                {/*    </Grid>*/}\r\n                                {/*</Link>*/}\r\n                                {/*<Link href={'/'}>*/}\r\n                                {/*    <Grid>*/}\r\n                                {/*        <Typography className={classes.footerLink}>Inviter un ami</Typography>*/}\r\n                                {/*    </Grid>*/}\r\n                                {/*</Link>*/}\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Hidden only={['xs']}>\r\n                            <Grid item xl={3} lg={3} className={classes.footerSection}>\r\n                                <Grid>\r\n                                    <h3 className={classes.footerTitileSection}>Alfred</h3>\r\n                                </Grid>\r\n                                <Link href={'/footer/becomeAlfred'}>\r\n                                    <Grid style={{marginBottom: '2vh'}}>\r\n                                        <Typography className={classes.footerLink}>Devenir Alfred</Typography>\r\n                                    </Grid>\r\n                                </Link>\r\n                                {true ? null :\r\n                                    <Link href={'/'}>\r\n                                        <Grid>\r\n                                            <Typography className={classes.footerLink}>Centre de ressources</Typography>\r\n                                        </Grid>\r\n                                    </Link>}\r\n                            </Grid>\r\n                        </Hidden>\r\n                        <Grid item xl={3} lg={3} className={classes.footerSection}>\r\n                            <Grid>\r\n                                <h3 className={classes.footerTitileSection}>Assistance</h3>\r\n                            </Grid>\r\n                            <Link href={'/footer/addService'}>\r\n                                <Grid style={{marginBottom: '2vh'}}>\r\n                                    <Typography className={classes.footerLink}>R√©server un service</Typography>\r\n                                </Grid>\r\n                            </Link>\r\n                            <Link onClick={() => Tawk_API.maximize()}>\r\n                                <Grid style={{marginBottom: '2vh'}}>\r\n                                    <Typography className={classes.footerLink}>Parler √† un humain</Typography>\r\n                                </Grid>\r\n                            </Link>\r\n                            <Link href={'/faq'}>\r\n                                <Grid>\r\n                                    <Typography className={classes.footerLink}>FAQ</Typography>\r\n                                </Grid>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Hidden only={['xl', 'lg', 'md']}>\r\n                        <Grid className={classes.footerDividerContainer}>\r\n                            <Divider className={classes.footerDivider}/>\r\n                        </Grid>\r\n                    </Hidden>\r\n                    <Grid className={classes.footerSocialSection}>\r\n                        <Grid>\r\n                            <h3 className={classes.footerTitileSection}>R√©seaux sociaux</h3>\r\n                        </Grid>\r\n                        <Grid className={classes.footerSocialContainer}>\r\n                            <Grid>\r\n                                <FacebookIcon/>\r\n                            </Grid>\r\n                            <Grid>\r\n                                <InstagramIcon/>\r\n                            </Grid>\r\n                            <Grid>\r\n                                <LinkedInIcon/>\r\n                            </Grid>\r\n                            <Grid>\r\n                                <TwitterIcon/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid className={classes.footerDividerContainer}>\r\n                        <Divider className={classes.footerDivider}/>\r\n                    </Grid>\r\n                    <Grid className={classes.footerBrandContainer}>\r\n                        <Grid className={classes.footerBrandStyle}>\r\n                            <Grid className={classes.footerLawContainer}>\r\n                                <Typography className={classes.footerText}>¬© 2020 MY ALFRED Corporation. Tous droits\r\n                                    r√©serv√©s</Typography>\r\n                            </Grid>\r\n                            <Grid className={classes.footerRgpdButtons}>\r\n                                {true ? null :\r\n                                    <Grid>\r\n                                        <Typography className={classes.footerLink}>S√©curit√©</Typography>\r\n                                    </Grid>\r\n                                }\r\n                                <Grid className={classes.footerLinkInfoContainer}>\r\n                                    <Link href={'/footer/legalNotice'}>\r\n                                        <Typography className={classes.footerLink}>Informations l√©gales</Typography>\r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid>\r\n                                    <Typography className={classes.footerLink}>Confidentiali√©</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Footer);\r\n","const {setAxiosAuthentication}=require('../../../utils/authentication')\r\nimport React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nconst  {clearAuthenticationToken}=require('../../../utils/authentication')\r\nimport Router from 'next/router';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport LogIn from '../../../components/LogIn/LogIn';\r\nimport Register from '../../../components/Register/Register';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AlgoliaPlaces from 'algolia-places-react';\r\nimport {SEARCHBAR, NAVBAR_MENU} from '../../../utils/i18n';\r\nimport DatePicker from \"react-datepicker\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Link from '../../../components/Link/Link';\r\nimport axios from 'axios'\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport styles from '../../../static/css/components/NavBar/NavBar';\r\nimport {Typography} from '@material-ui/core';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport {DateRangePicker} from \"react-dates\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const {children, classes, onClose, ...other} = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon/>\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null,\r\n      setOpenLogin: false,\r\n      setOpenRegister: false,\r\n      user: null,\r\n      activeStep: 0,\r\n      keyword: '',\r\n      city: undefined,\r\n      gps: '',\r\n      dateSelected: '',\r\n      ifHomePage: false,\r\n      modalMobileSearchBarInput: false,\r\n      mobileStepSearch: 0,\r\n      ifSearchPage: false,\r\n      modalFilters: false,\r\n      individualSelected: false,\r\n      proSelected: false,\r\n      startDate: null,\r\n      endDate: null,\r\n      focusedInput: null,\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let query = Router.query;\r\n    if (Router.pathname === '/') {\r\n      this.setState({ifHomePage: true})\r\n    }\r\n    if (Router.pathname === '/search') {\r\n      this.setState({ifSearchPage: true})\r\n    }\r\n    if(query.login === 'true'){\r\n      this.handleOpenLogin()\r\n    }\r\n\r\n    setAxiosAuthentication()\r\n    axios.get('/myAlfred/api/users/current')\r\n      .then(res => {\r\n        var allAddresses={'main':res.data.billing_address};\r\n        res.data.service_address.forEach( addr => {\r\n          allAddresses[addr._id]=addr\r\n        });\r\n\r\n        this.setState({\r\n          user: res.data,\r\n          allAddresses: allAddresses\r\n        })\r\n      }).catch();\r\n\r\n    this.setState({selectedAddress: this.props.selectedAddress || 'main'});\r\n    this.setState({keyword: this.props.keyword || ''})\r\n  }\r\n\r\n  logout = () => {\r\n    clearAuthenticationToken()\r\n    localStorage.removeItem('path')\r\n    if (this.state.ifHomePage) {\r\n      window.location.reload(false)\r\n    }\r\n    else {\r\n      Router.push('/')\r\n    }\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({anchorEl: null});\r\n  };\r\n\r\n  handleOpenLogin = (e) => {\r\n    this.handleMenuClose();\r\n      this.setState({setOpenLogin: true, setOpenRegister: false});\r\n  };\r\n\r\n  handleCloseLogin = () => {\r\n    this.setState({setOpenLogin: false});\r\n  };\r\n\r\n  handleOpenRegister = (e) => {\r\n    this.handleMenuClose();\r\n      this.setState({setOpenRegister: true, setOpenLogin: false});\r\n  };\r\n\r\n  handleCloseRegister = () => {\r\n    if (this.state.activeStep === 2) {\r\n      this.setState({setOpenRegister: false}, () => this.componentDidMount());\r\n    } else {\r\n      this.setState({setOpenRegister: false});\r\n    }\r\n  };\r\n\r\n  needRefresh = () => {\r\n    this.setState({setOpenLogin: false});\r\n    const path=localStorage.getItem('path')\r\n    if (path) {\r\n      localStorage.removeItem('path');\r\n      Router.push(path)\r\n    }\r\n    else {\r\n      Router.push('/search?search=1');\r\n    }\r\n  };\r\n\r\n  getData = (e) => {\r\n    this.setState({activeStep: e});\r\n  };\r\n\r\n  onSuggestions = ({query}) => {\r\n    this.setState({city: query});\r\n  };\r\n\r\n  onChange = e => {\r\n    let {name, value} = e.target;\r\n    this.setState({[name]: value});\r\n    if (name === 'selectedAddress') {\r\n      if (value === 'addAddress') {\r\n        Router.push('/account/myAddresses?indexAccount=4');\r\n      } else {\r\n        this.setState({\r\n          gps: value === 'all' ? null : value === 'main' ? this.state.allAddresses['main'].gps : {\r\n            lat: this.state.allAddresses[value].lat,\r\n            lng: this.state.allAddresses[value].lng,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleOpenMenuItem = (event) => {\r\n    this.setState({anchorEl: event.currentTarget})\r\n  };\r\n\r\n  handleClosenMenuItem = () => {\r\n    this.setState({anchorEl: false})\r\n  };\r\n\r\n  findService = () => {\r\n    var queryParams = {search: 1};\r\n    if (this.state.keyword) {\r\n      queryParams['keyword'] = this.state.keyword;\r\n    }\r\n\r\n    if (this.state.city) {\r\n      queryParams['city'] = this.state.city;\r\n    }\r\n\r\n    if (this.state.gps) {\r\n      queryParams['gps'] = JSON.stringify(this.state.gps);\r\n    }\r\n\r\n    if (this.state.selectedAddress) {\r\n      queryParams['selectedAddress'] = this.state.selectedAddress\r\n    }\r\n    Router.push({pathname: '/search', query: queryParams});\r\n  };\r\n\r\n  onChangeCity({suggestion}) {\r\n    this.setState({gps: suggestion.latlng, city: suggestion.name});\r\n  };\r\n\r\n  statusFilterChanged = event => {\r\n        this.setState({[event.target.name]: event.target.checked, modalFilters: false}, () => this.props.filter());\r\n  };\r\n\r\n  onChangeInterval(startDate, endDate) {\r\n    if (startDate) {\r\n      startDate.hour(0).minute(0).second(0).millisecond(0);\r\n    }\r\n\r\n    if (endDate) {\r\n      endDate.hour(23).minute(59).second(59).millisecond(999);\r\n    }\r\n\r\n    this.setState({startDate: startDate, endDate: endDate});\r\n  }\r\n\r\n    handleModalSearchBarInput = () => {\r\n    this.setState({modalMobileSearchBarInput: true})\r\n  };\r\n\r\n    mobileSearchBarInput = (classes) => {\r\n      return (\r\n        <Grid className={this.state.ifHomePage ? classes.navbarSearchContainer : classes.navbarSearchContainerSearchP} onClick={this.handleModalSearchBarInput}>\r\n        <Paper classes={{root: this.state.ifHomePage ? classes.navbarSearch : classes.navbarSearchP}}>\r\n          <Grid>\r\n            <IconButton classes={{root: classes.iconButton}} aria-label=\"search\">\r\n              <SearchIcon/>\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid style={{marginLeft: '2vh'}}>\r\n            <Typography>Commencez votre recherche</Typography>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    )\r\n  };\r\n\r\n  modalMobileSearchBarInput = (classes) => {\r\n    return (\r\n      <SwipeableDrawer\r\n        anchor={'bottom'}\r\n        open={this.state.modalMobileSearchBarInput}\r\n        onOpen={() => this.setState({modalMobileSearchBarInput: true})}\r\n        onClose={() => this.setState({\r\n          modalMobileSearchBarInput: false,\r\n          mobileStepSearch: 0,\r\n          keyword: null,\r\n          city: undefined,\r\n          gps: ''\r\n        })}\r\n        className={classes.drawerStyle}\r\n      >\r\n        <Grid container style={{height: '100%'}}>\r\n          <Grid item style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n            <Grid>\r\n              <IconButton\r\n                aria-label=\"delete\"\r\n                onClick={() => this.setState({\r\n                  modalMobileSearchBarInput: false,\r\n                  mobileStepSearch: 0,\r\n                  keyword: null,\r\n                  city: undefined,\r\n                  gps: ''\r\n                })}>\r\n                <ClearIcon/>\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid>\r\n              <h3>{this.state.mobileStepSearch === 0 ? 'Votre Recherche' : this.state.mobileStepSearch === 1 ? 'O√π' : 'Dates'}</h3>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container spacing={3} style={{margin: 0}}>\r\n            <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\r\n              {\r\n                this.state.mobileStepSearch === 0 ?\r\n                  <TextField\r\n                    value={this.state.keyword}\r\n                    onChange={this.onChange}\r\n                    name={'keyword'}\r\n                    label={this.state.ifHomePage ? 'Quel service recherchez-vous ? ' : false}\r\n                    onKeyPress={(e) => {\r\n                      e.key === 'Enter' && e.preventDefault();\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    classes={{root: classes.modalMobileSearchBarInputTextField}}\r\n                  />\r\n                  :\r\n                  this.state.user ?\r\n                    <Grid>\r\n                      <FormControl variant=\"outlined\">\r\n                        <Select\r\n                          id=\"outlined-select-currency\"\r\n                          value={this.props.selectedAddress ? this.props.selectedAddress : 'main'}\r\n                          name={'selectedAddress'}\r\n                          onChange={(e) => {\r\n                            this.onChange(e);\r\n                          }}\r\n                          classes={{selectMenu: classes.fitlerMenuLogged}}\r\n                        >\r\n                          <MenuItem value={'main'} style={{whiteSpace: 'nowrap'}}>\r\n                            Adresse\r\n                            principale, {' ' + this.state.user.billing_address.address} {this.state.user.billing_address.zip_code},{this.state.user.billing_address.city}\r\n                          </MenuItem>\r\n                          {this.state.user.service_address.map((e, index) => (\r\n                            <MenuItem value={e._id} key={index}>\r\n                              {e.label + ', '} {' ' + e.address},{e.zip_code} {e.city}\r\n                            </MenuItem>\r\n                          ))}\r\n                          <MenuItem value={'all'}>\r\n                            Partout, Rechercher des Alfred partout\r\n                          </MenuItem>\r\n                          <MenuItem value={'addAddress'}>\r\n                            <Typography style={{color: '#2FBCD3', cursor: 'pointer'}}>\r\n                              Ajouter une adresse\r\n                            </Typography>\r\n                          </MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    :\r\n                    <TextField\r\n                      item\r\n                      xs={12}\r\n                      classes={{root: classes.modalMobileSearchBartTextFieldWhereP}}\r\n                      value={this.state.city}\r\n                      label={SEARCHBAR.where}\r\n                      variant={'outlined'}\r\n                      InputProps={{\r\n                        inputComponent: (inputRef) => {\r\n                          return (\r\n                            <AlgoliaPlaces\r\n                              {...inputRef}\r\n                              placeholder={''}\r\n                              className={classes.navbarAlgoliaPlace}\r\n                              options={{\r\n                                appId: 'plKATRG826CP',\r\n                                apiKey: 'dc50194119e4c4736a7c57350e9f32ec',\r\n                                language: 'fr',\r\n                                countries: ['fr'],\r\n                                type: 'city',\r\n                              }}\r\n                              onChange={(suggestion) => this.onChangeCity(suggestion)}\r\n                              onClear={() => this.setState({city: '', gps: ''})}\r\n\r\n                            />)\r\n                        },\r\n                        disableUnderline: true\r\n                      }}\r\n                    />\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Grid style={{width: '90%'}}>\r\n              <Button\r\n                onClick={() => this.state.mobileStepSearch === 0 ? this.setState({mobileStepSearch: this.state.mobileStepSearch + 1}) : this.findService()}\r\n                color={'primary'} classes={{root: classes.buttonNextRoot}}\r\n                variant={'contained'}>{this.state.mobileStepSearch === 0 ? 'Suivant' : 'Rechercher'}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </SwipeableDrawer>\r\n    )\r\n  };\r\n\r\n    mobileSearchBarInputSearchPage = (classes) => {\r\n        return (\r\n      <Grid className={classes.navbarSearchContainerSearchPage}>\r\n        <Paper classes={{root: classes.navbarSearch}}>\r\n          <Grid>\r\n            <IconButton classes={{root: classes.iconButton}} aria-label=\"search\" onClick={this.handleModalSearchBarInput}>\r\n              <SearchIcon/>\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid style={{\r\n            marginLeft: '2vh',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n            cursor: 'pointer'\r\n          }} onClick={this.handleModalSearchBarInput}>\r\n            <Typography style={{textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}>Commencez votre recherche</Typography>\r\n          </Grid>\r\n          <Grid style={{height: 30}}>\r\n            <Divider style={{width: 2}} orientation=\"vertical\"/>\r\n          </Grid>\r\n          <IconButton color=\"primary\" aria-label=\"directions\" onClick={() => this.setState({modalFilters: true})}>\r\n            <TuneIcon/>\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n    )\r\n  };\r\n\r\n    modalMobileFilter = (classes) => {\r\n      return (\r\n        <Dialog\r\n          onClose={() => this.setState({modalFilters: false})}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.state.modalFilters}\r\n          classes={{paper: classes.dialogNavbarMobileFilter}}\r\n        >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={() => this.setState({modalFilters: false})}>\r\n          Filtres\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid>\r\n            <Grid>\r\n              <Grid>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={this.state.proSelected}\r\n                      onChange={e => {\r\n                        this.statusFilterChanged(e);\r\n                      }}\r\n                      value={this.state.proSelected}\r\n                      color=\"primary\"\r\n                      name={'proSelected'}\r\n                    />\r\n                  }\r\n                  label=\"Pro\"\r\n                />\r\n              </Grid>\r\n              <Grid>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={this.state.individualSelected}\r\n                      onChange={e => {\r\n                        this.statusFilterChanged(e);\r\n                      }}\r\n                      value={this.state.individualSelected}\r\n                      color=\"primary\"\r\n                      name={'individualSelected'}\r\n                    />\r\n                  }\r\n                  label=\"Particulier\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid>\r\n              <Divider style={{width: '100%', marginTop: '2vh', marginBottom: '2vh'}}/>\r\n            </Grid>\r\n            <Grid>\r\n              <DateRangePicker\r\n                startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n                startDatePlaceholderText={'D√©but'}\r\n                endDatePlaceholderText={'Fin'}\r\n                startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n                endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n                endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n                onDatesChange={({startDate, endDate}) => this.onChangeInterval(startDate, endDate)} // PropTypes.func.isRequired,\r\n                focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                onFocusChange={focusedInput => this.setState({focusedInput})} // PropTypes.func.isRequired,\r\n                minimumNights={0}\r\n                numberOfMonths={1}\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            onClick={() => this.setState({modalFilters: false}, () => this.props.filter())}\r\n            color=\"primary\"\r\n          >\r\n            Afficher les r√©sultats\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  };\r\n\r\n  searchBarInput = (classes) => {\r\n\r\n    const logged = this.state.user !=null\r\n    return (\r\n      <Grid className={this.state.ifHomePage ? classes.navbarSearchContainer : classes.navbarSearchContainerSearchP}>\r\n      <Paper classes={{root: this.state.ifHomePage ? classes.navbarSearch : classes.navbarSearchP}}>\r\n        <Grid className={classes.navbarTextFieldService}>\r\n          <TextField\r\n            classes={{root: this.state.ifHomePage ? classes.navbarRootTextField : classes.navbarRootTextFieldP}}\r\n            placeholder={SEARCHBAR.what}\r\n            value={this.state.keyword}\r\n            onChange={this.onChange}\r\n            name={'keyword'}\r\n            label={this.state.ifHomePage ? SEARCHBAR.labelWhat : false}\r\n            onKeyPress={(e) => {\r\n              e.key === 'Enter' && e.preventDefault();\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{disableUnderline: true}}\r\n            style={{marginLeft: 20}}\r\n          />\r\n        </Grid>\r\n        <Grid>\r\n          <Divider className={classes.divider} orientation=\"vertical\"/>\r\n        </Grid>\r\n        {this.state.user ?\r\n          <Grid className={classes.navbarAddressContainer}>\r\n            <FormControl className={classes.navbarFormControlAddress}>\r\n              {this.state.ifHomePage ?\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                  L'Adresse\r\n                </InputLabel> : null\r\n              }\r\n              <Select\r\n                disableUnderline\r\n                id=\"outlined-select-currency\"\r\n                value={this.state.selectedAddress || 'main'}\r\n                name={'selectedAddress'}\r\n                onChange={(e) => {\r\n                  this.onChange(e);\r\n                }}\r\n                classes={{root: classes.selectRoot}}\r\n              >\r\n                <MenuItem value={'main'}>\r\n                  Adresse\r\n                  principale, {' ' + this.state.user.billing_address.address} {this.state.user.billing_address.zip_code},{this.state.user.billing_address.city}\r\n                </MenuItem>\r\n                {this.state.user.service_address.map((e, index) => (\r\n                  <MenuItem value={e._id} key={index}>\r\n                    {e.label + ', '} {' ' + e.address},{e.zip_code} {e.city}\r\n                  </MenuItem>\r\n                ))}\r\n                <MenuItem value={'all'}>\r\n                  Partout, Rechercher des Alfred partout\r\n                </MenuItem>\r\n                <MenuItem value={'addAddress'}>\r\n                  <Typography style={{color: '#2FBCD3', cursor: 'pointer'}}>\r\n                    Ajouter une adresse\r\n                  </Typography>\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          :\r\n          <Grid className={this.state.ifHomePage ? classes.navbarAlgoliaContent : classes.navbarAlgoliaContentP}>\r\n            <TextField\r\n              label={this.state.ifHomePage ? SEARCHBAR.labelWhere : false}\r\n              classes={{root: this.state.ifHomePage ? classes.navbarRootTextFieldWhere : classes.navbarRootTextFieldWhereP}}\r\n              InputLabelProps={{ shrink: true }}\r\n              value={this.state.city}\r\n              InputProps={{\r\n                inputComponent: (inputRef) => {\r\n                  return (\r\n                    <AlgoliaPlaces\r\n                      {...inputRef}\r\n                      placeholder={SEARCHBAR.where}\r\n                      className={classes.navbarAlgoliaPlace}\r\n                      options={{\r\n                        appId: 'plKATRG826CP',\r\n                        apiKey: 'dc50194119e4c4736a7c57350e9f32ec',\r\n                        language: 'fr',\r\n                        countries: ['fr'],\r\n                        type: 'city',\r\n                      }}\r\n                      onChange={(suggestion) => this.onChangeCity(suggestion)}\r\n                      onClear={() => this.setState({city: '', gps: null})}\r\n                    />)\r\n                },\r\n                disableUnderline: true\r\n              }}\r\n            />\r\n          </Grid>\r\n        }\r\n        {\r\n          logged === false ?\r\n            <Grid className={classes.navbarDatePickerMain}>\r\n              <Grid>\r\n                <Divider className={classes.divider} orientation=\"vertical\"/>\r\n              </Grid>\r\n              <Grid className={this.state.ifHomePage ? classes.navbarDatePickerContainer : classes.navbarDatePickerContainerP}>\r\n                <TextField\r\n                  label={this.state.ifHomePage ? SEARCHBAR.labelWhen : false}\r\n                  classes={{root: this.state.ifHomePage ? classes.navbarRootTextFieldWhen : classes.navbarRootTextFieldWhenP}}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    inputComponent: (inputRef) => {\r\n                      return (\r\n                        <DatePicker\r\n                          {...inputRef}\r\n                          selected={this.state.dateSelected}\r\n                          onChange={(date) => {\r\n                            this.setState({dateSelected: date});\r\n                            if (date === null) {\r\n                              this.setState({dateSelected: ''});\r\n                            }\r\n                          }}\r\n                          locale='fr'\r\n                          showMonthDropdown\r\n                          dateFormat=\"dd/MM/yyyy\"\r\n                          placeholderText={SEARCHBAR.when}\r\n                          minDate={new Date()}\r\n                          className={this.state.ifHomePage ? classes.inputDatePicker : classes.inputDatePickerP}\r\n                        />)\r\n                    },\r\n                    disableUnderline: true\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid> : null\r\n        }\r\n        <Grid>\r\n          <IconButton\r\n            classes={{root: classes.iconButton}}\r\n            aria-label=\"search\"\r\n            onClick={() => this.findService()}>\r\n            <SearchIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n    )\r\n  };\r\n\r\n  render() {\r\n    const {user, setOpenLogin, setOpenRegister, anchorEl, ifHomePage, modalMobileSearchBarInput, ifSearchPage, modalFilters} = this.state;\r\n    const {classes} = this.props;\r\n\r\n    const logged = user != null\r\n    const modalLogin = () => {\r\n      return (\r\n        <LogIn callRegister={this.handleOpenRegister} login={this.needRefresh}/>\r\n      );\r\n    };\r\n\r\n    const modalRegister = () => {\r\n      return (\r\n        <Register callLogin={this.handleOpenLogin} sendParentData={this.getData}/>\r\n      );\r\n    };\r\n\r\n\r\n        return (\r\n      <Grid className={this.state.ifHomePage ? classes.navbarMainSytle : classes.navbarMainSytleP}>\r\n        <AppBar position={'static'} className={this.state.ifHomePage ? classes.navbarAppBar : classes.navbarAppBarP}>\r\n          <Toolbar classes={{root: this.state.ifHomePage ? classes.navBartoolbar : classes.navBartoolbarP}}>\r\n            <Hidden only={['xs']}>\r\n              <Grid className={this.state.ifHomePage ? classes.navbarTopContainer : classes.navbarTopContainerP}>\r\n                <Grid className={ifHomePage ? classes.navbarLogoContainer : classes.navbarLogoContainerP } onClick={() => Router.push('/')}>\r\n                  <img alt={'logo_myAlfred'} title={'logo_myAlfred'} src={'../../../static/assets/icon/logo.svg'} className={classes.logoMyAlfred}  height={64} style={{filter: 'invert(1)'}}/>\r\n              </Grid>\r\n              {\r\n                ifHomePage ?\r\n                  <Grid className={ifHomePage ? classes.navabarHomepageMenu : classes.navabarHomepageMenuP}>\r\n                    <Tabs value={false} aria-label=\"simple tabs example\">\r\n                      <Link href={'/search?search=1'}>\r\n                        <Tab classes={{root: classes.navbarTabRoot}}\r\n                               label={NAVBAR_MENU.ourServices}/>\r\n                      </Link>\r\n                      { user ?\r\n                        user.is_alfred ?\r\n                          <Link href={`/profile/services?user=${user._id}&indexAccount=1`}>\r\n                            <Tab classes={{root: classes.navbarTabRoot}}\r\n                                   label={NAVBAR_MENU.myServices}/>\r\n                          </Link>\r\n                          :\r\n                          <Link href={'/creaShop/creaShop'}>\r\n                            <Tab classes={{root: classes.navbarTabRoot}}\r\n                                   label={NAVBAR_MENU.registerServices}/>\r\n                          </Link>\r\n                        :\r\n                        <Link onClick={this.handleOpenRegister}>\r\n                          <Tab classes={{root: classes.navbarTabRoot}}\r\n                                 label={NAVBAR_MENU.registerServices}/>\r\n                        </Link>\r\n                      }\r\n                      <Link href={'/contact'}>\r\n                        <Tab classes={{root: classes.navbarTabRoot}}\r\n                               label={NAVBAR_MENU.contactUs}/>\r\n                      </Link>\r\n                    </Tabs>\r\n                  </Grid> : this.searchBarInput(classes)\r\n              }\r\n              {\r\n                logged === true ?\r\n                  <Grid className={ifHomePage ? classes.navbarMenuBurgerContainer : classes.navbarMenuBurgerContainerP}>\r\n                    <IconButton\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleOpenMenuItem}\r\n                    >\r\n                      <MenuIcon style={{color: 'white'}}/>\r\n                    </IconButton>\r\n                    <Menu\r\n                      anchorEl={anchorEl}\r\n                      keepMounted\r\n                      open={Boolean(anchorEl)}\r\n                      onClose={this.handleClosenMenuItem}\r\n                      getContentAnchorEl={null}\r\n                      anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\r\n                      transformOrigin={{vertical: 'top', horizontal: 'center'}}\r\n                    >\r\n                    {user ?\r\n                      <Grid>\r\n                        <MenuItem>Bonjour {user.firstname} !</MenuItem>\r\n                        <Link href={`/profile/about?user=${user._id}`}>\r\n                          <MenuItem>Mon profil</MenuItem>\r\n                        </Link>\r\n                        <Link href={'/account/notifications'}>\r\n                          <MenuItem>Mes param√®tres</MenuItem>\r\n                        </Link>\r\n                        { user.is_alfred ?\r\n                          <Link href={`/profile/services?user=${user._id}&indexAccount=1`}>\r\n                            <MenuItem>Mes services</MenuItem>\r\n                          </Link>\r\n                          :\r\n                          <Link href={`/creaShop/creaShop`}>\r\n                            <MenuItem>Proposer mes services</MenuItem>\r\n                          </Link>\r\n                        }\r\n                        <Link href={`/profile/messages?user=${user._id}`}>\r\n                          <MenuItem>Mes messages</MenuItem>\r\n                        </Link>\r\n                        <Link href={`/reservations/reservations`}>\r\n                          <MenuItem>Mes r√©servations</MenuItem>\r\n                        </Link>\r\n                        {user.is_admin ?\r\n                          <Link href={`/dashboard/home`}>\r\n                            <MenuItem>Dashboard</MenuItem>\r\n                          </Link> : null\r\n                        }\r\n                        <MenuItem onClick={this.logout}>D√©connexion</MenuItem>\r\n                      </Grid>\r\n                      :\r\n                      null\r\n                    }\r\n                    </Menu>\r\n                  </Grid>\r\n                  :\r\n                    <Grid className={ifHomePage ? classes.navbarButtonContainer : classes.navbarButtonContainerP}>\r\n                    <Grid>\r\n                      <Button\r\n                        className={classes.navBarlogIn}\r\n                        onClick={this.handleOpenLogin}>\r\n                        {NAVBAR_MENU.logIn}\r\n                      </Button>\r\n                      <Dialog\r\n                        scroll={'paper'}\r\n                        aria-labelledby=\"scroll-dialog-title\"\r\n                        aria-describedby=\"scroll-dialog-description\"\r\n                        className={classes.navbarModal}\r\n                        open={setOpenLogin}\r\n                        onClose={this.handleCloseLogin}\r\n                        TransitionComponent={Transition}\r\n                        classes={{paperWidthSm: classes.navbarPaperWidth}}\r\n                        disableBackdropClick={true}\r\n                        disableEscapeKeyDown={true}\r\n                      >\r\n                        <DialogTitle id=\"customized-dialog-title\" onClose={this.handleCloseLogin}/>\r\n                        <DialogContent classes={{root: classes.navbarWidthLoginContent}}>\r\n                          <div className={classes.navbarPaper}>\r\n                            {modalLogin()}\r\n                          </div>\r\n                        </DialogContent>\r\n                      </Dialog>\r\n                    </Grid>\r\n                    <Grid className={classes.navbarRegisterContainer}>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        classes={{root: classes.navbarSignIn}}\r\n                        onClick={this.handleOpenRegister}>\r\n                        {NAVBAR_MENU.signIn}\r\n                      </Button>\r\n                      <Dialog\r\n                        scroll={'paper'}\r\n                        aria-labelledby=\"scroll-dialog-title\"\r\n                        aria-describedby=\"scroll-dialog-description\"\r\n                        className={classes.navbarModal}\r\n                        open={setOpenRegister}\r\n                        onClose={this.handleCloseRegister}\r\n                        TransitionComponent={Transition}\r\n                        disableBackdropClick={true}\r\n                        disableEscapeKeyDown={true}\r\n                      >\r\n                        <DialogTitle id=\"customized-dialog-title\" onClose={this.handleCloseRegister}/>\r\n                        <DialogContent dividers={false} className={classes.navbarMuidialogContent}>\r\n                          <div className={classes.navbarPaper}>\r\n                            {modalRegister()}\r\n                          </div>\r\n                        </DialogContent>\r\n                      </Dialog>\r\n                    </Grid>\r\n                  </Grid>\r\n              }\r\n            </Grid>\r\n              {\r\n                ifHomePage ? this.searchBarInput(classes) : null\r\n              }\r\n          </Hidden>\r\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\r\n            {ifHomePage ? this.mobileSearchBarInput(classes) : null}\r\n            {ifSearchPage ? this.mobileSearchBarInputSearchPage(classes) : null}\r\n          </Hidden>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {modalMobileSearchBarInput ? this.modalMobileSearchBarInput(classes) : null}\r\n        {modalFilters ? this.modalMobileFilter(classes) : null}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport TextsmsIcon from '@material-ui/icons/Textsms';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport styles from '../../../static/css/components/TrustAndSecurity/TrustAndSecurity';\r\n\r\nclass TrustAndSecurity extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      items:[\r\n        {\r\n          title:'R√©servation en instantan√©',\r\n          text: 'Avec un d√©lai de pr√©venance bien s√ªr ;)',\r\n          icon: <AlarmOnIcon fontSize=\"large\"/>\r\n        },\r\n        {\r\n          title:'Heureux ou rembours√©',\r\n          text: '√áa arrive √† tout le monde de se tromper',\r\n          icon: <InsertEmoticonIcon fontSize=\"large\"/>\r\n        },\r\n        {\r\n          title:'Paiement 100% s√©curis√©',\r\n          text: 'Par la Nasa et le Pentagone',\r\n          icon: <VerifiedUserIcon fontSize=\"large\"/>\r\n        },\r\n        {\r\n          title:'Notre √©quipe',\r\n          text: 'Toujours √† votre √©coute ',\r\n          icon: <TextsmsIcon fontSize=\"large\"/>\r\n        }\r\n        ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const{items} = this.state;\r\n    const{classes} = this.props;\r\n    return(\r\n      <Grid className={classes.trustAndSecurityMainContainer} >\r\n        {\r\n          items.map((res, index) => (\r\n            <Grid key={index} className={classes.trustAndSecurityContent}>\r\n              <Grid>\r\n                {res.icon}\r\n              </Grid>\r\n              <Grid style={{marginLeft: '3vh'}}>\r\n                <Grid>\r\n                  <Typography><strong>{res.title}</strong></Typography>\r\n                </Grid>\r\n                <Grid>\r\n                  <Typography>{res.text}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ))\r\n        }\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles (styles) (TrustAndSecurity);\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport Footer from '../hoc/Layout/Footer/Footer';\r\nimport BecomeAlfred from '../components/HomePage/BecomeAlfred/BecomeAlfred';\r\nimport Router from 'next/router';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InfoBar from '../components/InfoBar/InfoBar';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport styles from '../static/css/pages/homePage/index';\r\nimport NavBar from '../hoc/Layout/NavBar/NavBar';\r\nimport BannerPresentation from '../components/HomePage/BannerPresentation/BannerPresentation';\r\nimport CategoryTopic from '../components/HomePage/Category/CategoryTopic';\r\nimport OurAlfred from \"../components/HomePage/OurAlfred/OurAlfred\";\r\nimport HowItWorks from \"../components/HomePage/HowItWorks/HowItWorks\";\r\nimport NewsLetter from \"../components/HomePage/NewsLetter/NewsLetter\";\r\nimport MobileNavbar from \"../hoc/Layout/NavBar/MobileNavbar\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport TrustAndSecurity from \"../hoc/Layout/TrustAndSecurity/TrustAndSecurity\";\r\nimport {Divider} from \"@material-ui/core\";\r\nconst {getLoggedUserId}=require('../utils/functions')\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      category:{},\r\n      alfred:{},\r\n      logged: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (getLoggedUserId()) {\r\n      this.setState({logged: true})\r\n    }\r\n    axios.get('/myAlfred/api/category/all')\r\n      .then(res => {\r\n        let category = res.data;\r\n        this.setState({category: category});\r\n      }).catch(err => console.error(err));\r\n\r\n    axios.get('/myAlfred/api/serviceUser/home')\r\n      .then(response => {\r\n        let alfred = response.data;\r\n        this.setState({alfred: alfred});\r\n      }).catch(err => console.error(err));\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {category, alfred, logged, user} = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Helmet>\r\n          <title>Services r√©mun√©r√©s entre particuliers - My Alfred </title>\r\n          <meta property=\"description\"\r\n                content=\"Des milliers de services r√©f√©renc√©s ! Consultez les offres de service r√©mun√©r√©s de milliers de particuliers avec My Alfred, premi√®re application d‚Äôoffres de services entre particuliers. Rendre service en √©tant r√©mun√©r√© autour de chez soi n‚Äôa jamais √©t√© aussi simple\"/>\r\n        </Helmet>\r\n        <Grid>\r\n          <Grid>\r\n            <InfoBar style={classes}/>\r\n          </Grid>\r\n          <Grid container className={classes.navbarAndBannerContainer}>\r\n            <Grid className={classes.navbarAndBannerBackground}>\r\n                <Grid className={classes.navbarComponentPosition}>\r\n                  <NavBar/>\r\n                </Grid>\r\n              <Grid className={classes.bannerPresentationContainer}>\r\n                <Grid className={classes.bannerSize}>\r\n                  <BannerPresentation/>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.mainContainerStyle}>\r\n            <Grid className={classes.generalWidthContainer}>\r\n              <CategoryTopic category={category}/>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.howItWorksComponent}>\r\n            <Grid className={classes.generalWidthContainer}>\r\n              <HowItWorks/>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.mainContainerStyle}>\r\n            <Grid className={classes.generalWidthContainer}>\r\n              <OurAlfred alfred={alfred}/>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.becomeAlfredComponent}>\r\n            <Grid className={classes.generalWidthContainer}>\r\n              <BecomeAlfred style={classes}/>\r\n            </Grid>\r\n          </Grid>\r\n          <Hidden only={['xs', 'sm']}>\r\n            <Grid container className={classes.mainNewsLetterStyle}>\r\n              <Grid className={classes.generalWidthContainerNewsLtter}>\r\n                <NewsLetter/>\r\n              </Grid>\r\n            </Grid>\r\n          </Hidden>\r\n          <Grid>\r\n            <Divider/>\r\n          </Grid>\r\n          <Grid className={classes.trustAndSecurityContainer}>\r\n            <Grid className={classes.trustAndSecurityComponent}>\r\n              <TrustAndSecurity/>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.mainContainerStyleFooter}>\r\n            <Grid className={classes.generalWidthFooter}>\r\n              <Footer/>\r\n            </Grid>\r\n          </Grid>\r\n          <Hidden only={['xl','lg', 'md', 'sm']}>\r\n            <Grid style={{position: 'fixed', bottom: '3%', display: 'flex', justifyContent: 'center', width: '100%', zIndex: 1}}>\r\n              <Grid style={{width: '100%'}}>\r\n                <MobileNavbar currentIndex={0}/>\r\n              </Grid>\r\n            </Grid>\r\n          </Hidden>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Home);\r\n","export default theme => ({\r\n    generalWidthContainer: {\r\n        width: '60%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '80%'\r\n        }\r\n    },\r\n    generalWidthContainerNewsLtter: {\r\n        width: '60%',\r\n        [theme.breakpoints.down('lg')]: {\r\n            width: '80%'\r\n        }\r\n    },\r\n    bannerSize: {\r\n        width: '60%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '80%'\r\n        }\r\n    },\r\n    infoBarMainStyle: {\r\n        backgroundColor: theme.palette.backgroundGrey.main,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    infoBarColorText: {\r\n        color: theme.palette.lightBlack.main,\r\n        fontSize: theme.typography.infoBar.fontSize,\r\n        lineHeight: theme.typography.infoBar.lineHeight,\r\n        fontFamily: theme.typography.infoBar.fontFamily,\r\n        margin: 0,\r\n        [theme.breakpoints.down('xs')]: {\r\n            textAlign: 'center'\r\n        }\r\n    },\r\n    showmoreContainer: {\r\n        marginLeft: 5,\r\n    },\r\n    navbarInput: {\r\n        borderBottom: 'inherit',\r\n        '&::placeholder': {\r\n            opacity: '0.55',\r\n            color: theme.palette.placeHolder.main,\r\n        }\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n    bannerPresentationContainerIllustration: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '60%'\r\n    },\r\n    navbarAndBannerContainer: {\r\n        justifyContent: 'center',\r\n        height: '85vh',\r\n        backgroundImage: 'url(../../assets/img/homePage/illuHeader.png)',\r\n        backgroundColor: 'rgba(207,223,252,1)',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat'\r\n    },\r\n    navbarAndBannerBackground: {\r\n        width: '100%',\r\n    },\r\n    navbarComponentPosition: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        marginTop: '2%'\r\n    },\r\n\r\n    bannerPresentationContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: '10vh'\r\n    },\r\n    mainContainerStyle: {\r\n        justifyContent: 'center',\r\n        marginTop: '10vh',\r\n        marginBottom: '10vh'\r\n    },\r\n    mainNewsLetterStyle: {\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    becomeAlfredMainContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        padding: theme.padding.homePage.section.padding\r\n    },\r\n    becomeAlfredContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    becomeAlfredButton: {\r\n        color: theme.palette.primary.main,\r\n        fontWeight: theme.typography.blackButton.fontWeight,\r\n        fontFamily: theme.typography.blackButton.fontFamily,\r\n        backgroundColor: theme.palette.white.main,\r\n        borderRadius: theme.border.blackButton.borderRadius,\r\n        padding: theme.padding.blackButton.padding,\r\n    },\r\n    resaServiceButton: {\r\n        color: '#F8CF61',\r\n        fontWeight: theme.typography.blackButton.fontWeight,\r\n        fontFamily: theme.typography.blackButton.fontFamily,\r\n        backgroundColor: theme.palette.white.main,\r\n        borderRadius: theme.border.blackButton.borderRadius,\r\n        padding: theme.padding.blackButton.padding,\r\n    },\r\n    becomeAlfredTitle: {\r\n        color: theme.palette.white.main,\r\n        fontFamily: theme.typography.subTitle.fontFamily,\r\n        fontWeight: theme.typography.subTitle.fontWeight,\r\n        margin: theme.typography.subTitle.margin,\r\n    },\r\n    becomeAlfredText: {\r\n        fontFamily: theme.typography.text.fontFamily,\r\n        color: theme.palette.white.main,\r\n        fontWeight: theme.typography.text.fontWeight,\r\n        fontSize: theme.typography.text.fontSize\r\n    },\r\n    becomeAlfredComponent: {\r\n        justifyContent: 'center',\r\n        marginTop: '2%',\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    howItWorksComponent: {\r\n        justifyContent: 'center',\r\n        marginTop: '2%',\r\n        backgroundColor: theme.palette.yellow.main\r\n    },\r\n\r\n    ResaServiceMainContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        padding: '3%'\r\n    },\r\n\r\n\r\n    generalWidthFooter: {\r\n        width: '90%'\r\n    },\r\n    trustAndSecurityContainer: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: '5vh',\r\n            marginBottom: '5vh',\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    trustAndSecurityComponent: {\r\n        padding: '2vh',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginTop: '5vh',\r\n            marginBottom: '5vh',\r\n            width: '100%',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            margin: 0,\r\n            width: '90%',\r\n        }\r\n    },\r\n    mainContainerStyleFooter: {\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgba(228, 228, 228, 8)'\r\n    },\r\n    categoryCardRoot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    cardPreviewMainStyle: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    infoBarLinkContainer: {\r\n        paddingTop: theme.padding.infoBar.paddingTop,\r\n        paddingBottom: theme.padding.infoBar.paddingBottom,\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column'\r\n        }\r\n    },\r\n    infoBarPicsContainer: {\r\n        width: 15,\r\n        height: 15,\r\n        marginRight: 5\r\n    },\r\n\r\n    shomoreLink: {\r\n        color: theme.palette.link.main,\r\n        fontSize: theme.typography.infoBar.fontSize,\r\n        lineHeight: theme.typography.infoBar.lineHeight,\r\n        fontFamily: theme.typography.infoBar.fontFamily,\r\n        fontWeight: theme.typography.infoBar.fontWeight\r\n    },\r\n\r\n    menuHeaderActive: {\r\n        '&:active': {\r\n            color: '#84A5E0',\r\n            borderBottom: '#84A5E0'\r\n        }\r\n    }\r\n})\r\n"],"mappings":"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A;AACA;AACA;AACA;AAdA;AAiBA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA/NA;AAiOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAMA;AAEA;AACA;AACA;AACA;;;;;;;AAMA;AACA;AAzPA;AA6PA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAGA;AACA;AAIA;AACA;AApRA;AAsRA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA1RA;AA4RA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAhSA;AAkSA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAtSA;AAwSA;AAAA;AAAA;AACA;AACA;AA1SA;AA4SA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApTA;AAsTA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA5TA;AA8TA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AApUA;AAqvBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA3vBA;AA8vBA;AAAA;AAAA;AACA;AACA;AA9vBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AADA;AAIA;AACA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA2LA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;A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;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAHA;AA5JA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AA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AACA;AAlBA;AALA;AA8BA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AApBA;AANA;AAkCA;AAAA;AAAA;AACA;AACA;AAHA;AAUA;AACA;AAtkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAsBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAuGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAwZA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAQA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAPA;AAYA;AAAA;AAGA;AAAA;AAIA;AAAA;AAIA;AAAA;AAIA;AAAA;AAGA;AAAA;AAIA;AAAA;AAIA;AAAA;AAQA;AAAA;AAGA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAVA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAaA;AAAA;AAUA;AACA;AAnwBA;AACA;AAowBA;;;;;;;;;;;;ACx0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAjBA;AAwBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAaA;AACA;AAtDA;AACA;AAuDA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AADA;AAKA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAQA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AACA;AA1GA;AACA;AA2GA;;;;;;;;;;;;;;;ACnIA;AAAA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAPA;AAYA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAFA;AADA;AA/MA;;;;A","sourceRoot":""}