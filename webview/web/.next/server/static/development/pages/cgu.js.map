{"version":3,"file":"static\\development\\pages\\cgu.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/InfoBar/InfoBar.js","webpack:///./components/Information/Information.js","webpack:///./components/Information/InformationStyle.js","webpack:///./components/Link/Link.js","webpack:///./components/LogIn/LogIn.js","webpack:///./components/LogIn/LogInStyle.js","webpack:///./components/OAuth/OAuth.js","webpack:///./components/OAuth/OAuthStyle.js","webpack:///./components/Register/Register.js","webpack:///./components/Register/RegisterStyle.js","webpack:///./components/ScrollMenu/ScrollMenu.js","webpack:///./config/config.js","webpack:///./hoc/Layout/Footer/Footer.js","webpack:///./hoc/Layout/Layout.js","webpack:///./hoc/Layout/NavBar/NavBar.js","webpack:///./hoc/Layout/TrustAndSecurity/TrustAndSecurity.js","webpack:///./mode.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/typeof.js","webpack:///./node_modules/next/dist/client/link.js","webpack:///./node_modules/next/link.js","webpack:///./pages/cgu.js","webpack:///./server/validation/is-empty.js","webpack:///./static/css/components/Footer/Footer.js","webpack:///./static/css/components/InfoBar/InfoBar.js","webpack:///./static/css/components/NavBar/NavBar.js","webpack:///./static/css/components/ScrollMenu/ScrollMenu.js","webpack:///./static/css/components/TrustAndSecurity/TrustAndSecurity.js","webpack:///./static/css/pages/layout/layoutStyle.js","webpack:///./utils/authentication.js","webpack:///./utils/consts.js","webpack:///./utils/functions.js","webpack:///./utils/i18n.js","webpack:///./utils/passwords.js","webpack:///./utils/sms.js","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Checkbox\"","webpack:///external \"@material-ui/core/Dialog\"","webpack:///external \"@material-ui/core/DialogActions\"","webpack:///external \"@material-ui/core/DialogContent\"","webpack:///external \"@material-ui/core/DialogContentText\"","webpack:///external \"@material-ui/core/DialogTitle\"","webpack:///external \"@material-ui/core/Divider\"","webpack:///external \"@material-ui/core/FormControl\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/Hidden\"","webpack:///external \"@material-ui/core/IconButton\"","webpack:///external \"@material-ui/core/Input\"","webpack:///external \"@material-ui/core/InputAdornment\"","webpack:///external \"@material-ui/core/InputLabel\"","webpack:///external \"@material-ui/core/Menu\"","webpack:///external \"@material-ui/core/MenuItem\"","webpack:///external \"@material-ui/core/MobileStepper\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/Select\"","webpack:///external \"@material-ui/core/Slide\"","webpack:///external \"@material-ui/core/SwipeableDrawer\"","webpack:///external \"@material-ui/core/Switch\"","webpack:///external \"@material-ui/core/Tab\"","webpack:///external \"@material-ui/core/Tabs\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/core/styles/withStyles\"","webpack:///external \"@material-ui/icons/AlarmOn\"","webpack:///external \"@material-ui/icons/Clear\"","webpack:///external \"@material-ui/icons/Close\"","webpack:///external \"@material-ui/icons/Facebook\"","webpack:///external \"@material-ui/icons/InsertEmoticon\"","webpack:///external \"@material-ui/icons/Instagram\"","webpack:///external \"@material-ui/icons/KeyboardArrowLeft\"","webpack:///external \"@material-ui/icons/KeyboardArrowRight\"","webpack:///external \"@material-ui/icons/LinkedIn\"","webpack:///external \"@material-ui/icons/LockOpenOutlined\"","webpack:///external \"@material-ui/icons/LockOutlined\"","webpack:///external \"@material-ui/icons/MailOutline\"","webpack:///external \"@material-ui/icons/Menu\"","webpack:///external \"@material-ui/icons/PersonOutline\"","webpack:///external \"@material-ui/icons/PhoneIphoneOutlined\"","webpack:///external \"@material-ui/icons/PhotoCamera\"","webpack:///external \"@material-ui/icons/Search\"","webpack:///external \"@material-ui/icons/Textsms\"","webpack:///external \"@material-ui/icons/Tune\"","webpack:///external \"@material-ui/icons/Twitter\"","webpack:///external \"@material-ui/icons/VerifiedUser\"","webpack:///external \"@material-ui/icons/Visibility\"","webpack:///external \"@material-ui/icons/VisibilityOff\"","webpack:///external \"algolia-places-react\"","webpack:///external \"axios\"","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/object/create\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"crypto\"","webpack:///external \"date-fns/locale/fr\"","webpack:///external \"geolib/es/convertDistance\"","webpack:///external \"geolib/es/getDistance\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mangopay2-nodejs-sdk/lib/models/KycDocumentStatus\"","webpack:///external \"moment\"","webpack:///external \"next-server/dist/lib/utils\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"prop-types-exact\"","webpack:///external \"querystring\"","webpack:///external \"react\"","webpack:///external \"react-cookies\"","webpack:///external \"react-datepicker\"","webpack:///external \"react-dates\"","webpack:///external \"react-number-format\"","webpack:///external \"react-social-login-buttons\"","webpack:///external \"react-toastify\"","webpack:///external \"url\"","webpack:///external \"url-parse\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {INFOBAR_MESSAGE} from '../../utils/i18n';\r\nimport Link from 'next/link';\r\nimport {Typography} from '@material-ui/core';\r\nimport styles from '../../static/css/components/InfoBar/InfoBar'\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n\r\nclass InfoBar extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n  render(){\r\n    const {classes} = this.props;\r\n\r\n    return(\r\n      <Grid container className={classes.infoBarMainStyle}>\r\n        <Grid item className={classes.infoBarLinkContainer}>\r\n          <Grid className={classes.infoBarPicsContainer}>\r\n            <img src={'/static/assets/img/warning.svg'} alt={'warning'} title={'warning'} width={'100%'} height={'100%'}/>\r\n          </Grid>\r\n          <Grid>\r\n            <Typography className={classes.infoBarColorText}>{INFOBAR_MESSAGE.message}</Typography>\r\n          </Grid>\r\n          <Grid item className={classes.showmoreContainer}>\r\n            <Link href={\"#\"}>\r\n              <a href={\"#\"} className={classes.shomoreLink}>{INFOBAR_MESSAGE.showMore}</a>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(InfoBar);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './InformationStyle';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nclass Information extends React.Component {\r\n\r\n  /**\r\n   props:\r\n   - open : true/false\r\n   - onClose : callback when closing\r\n   - text : text or html\r\n   - type : 'info' or 'warning'\r\n   */\r\n  render() {\r\n    const {classes, open} = this.props;\r\n    const type = this.props.type ? this.props.type : 'info';\r\n\r\n    if (!open) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Dialog aria-labelledby=\"simple-dialog-title\" open={this.props.open} onClose={this.props.onClose}\r\n              classes={{paper: classes.paperOverride}}>\r\n        <DialogTitle id=\"alert-dialog-title\">{this.props.type ? 'Oups !' : 'Info'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\" className={classes.textContentDiAlog}\r\n                             dangerouslySetInnerHTML={{__html: this.props.text}}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.onClose} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Information);\r\n","export default theme => ({\r\n  paperOverride: {\r\n    backgroundImage: 'url(../../static/assets/img/warning.svg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  textContentDiAlog: {\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n  },\r\n})\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Router from 'next/router';\r\nimport withStyles from \"@material-ui/core\";\r\n\r\nconst handler = (href) => Router.push(href);\r\n\r\nconst Link = ({\r\n                  className, children, href, ...rest\r\n              } = {}) => (\r\n    <a style={{cursor: 'pointer'}} onClick={() => handler(href)} className={className} {...rest}>\r\n        {children}\r\n    </a>\r\n);\r\n\r\nLink.propTypes = {\r\n    className: PropTypes.string,\r\n    href: PropTypes.oneOfType([\r\n        PropTypes.object,\r\n        PropTypes.string\r\n    ]),\r\n    children: PropTypes.node\r\n}\r\n\r\nexport default Link","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport styles from './LogInStyle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from 'next/link';\r\nimport Button from '@material-ui/core/Button';\r\nconst  {setAuthToken, setAxiosAuthentication}=require('../../utils/authentication')\r\nimport axios from 'axios';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport OAuth from '../OAuth/OAuth';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\nconst {PROVIDERS} = require('../../utils/consts');\r\nconst {ENABLE_GF_LOGIN} = require('../../config/config');\r\n\r\nclass LogIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {},\r\n      showPassword: false,\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    axios.post('/myAlfred/api/users/login', user)\r\n      .then(res => {\r\n        setAuthToken()\r\n        setAxiosAuthentication()\r\n        axios.put('/myAlfred/api/users/account/lastLogin')\r\n          .then(data => {\r\n            let path = localStorage.getItem('path');\r\n            this.props.login();\r\n          })\r\n          .catch(err => console.error(err));\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        if (err.response) {\r\n          this.setState({errors: err.response.data});\r\n        }\r\n      });\r\n  };\r\n\r\n   handleClickShowPassword = () => {\r\n    this.setState({ showPassword: !this.state.showPassword });\r\n  };\r\n\r\n  handleMouseDownPassword = (event) =>{\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const {classes, callRegister} = this.props;\r\n    const {errors, username, password, showPassword} = this.state;\r\n    return (\r\n      <Grid className={classes.fullContainer}>\r\n        <Grid style={{width: '100%'}}>\r\n          <Grid className={classes.newContainer}>\r\n            <Grid>\r\n              <h2 className={classes.titleRegister}>Connexion</h2>\r\n            </Grid>\r\n            {ENABLE_GF_LOGIN ?\r\n              <Grid className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.flexContainerPics}>\r\n                      <Grid style={{width: '100%'}}>\r\n                        {PROVIDERS.map(provider =>\r\n                          <OAuth\r\n                            login={true}\r\n                            provider={provider}\r\n                            key={provider}\r\n                          />,\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.flexContainerPics}>\r\n                      <Grid>\r\n                        <h3 style={{color: 'rgba(84,89,95,0.95)', fontWeight: 'bold', letterSpacing: -1}}>Ou</h3>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              :\r\n              null\r\n            }\r\n            <Grid className={classes.containerDialogContent}>\r\n              <form onSubmit={this.onSubmit} style={{marginBottom: 15}}>\r\n                <Grid className={classes.margin}>\r\n                  <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                    <Grid item>\r\n                      <MailOutlineIcon className={classes.colorIcon}/>\r\n                    </Grid>\r\n                    <Grid item className={classes.widthTextField}>\r\n                      <Input\r\n                        label=\"Email\"\r\n                        placeholder=\"Email\"\r\n                        style={{width: '100%', marginTop: 16, marginBottom: 8}}\r\n                        type=\"email\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={this.onChange}\r\n                        error={errors.username}\r\n                      />\r\n                      <em>{errors.username}</em>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid className={classes.margin}>\r\n                  <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                    <Grid item>\r\n                      <LockOpenOutlinedIcon className={classes.colorIcon}/>\r\n                    </Grid>\r\n                    <Grid item className={classes.widthTextField}>\r\n                      <Input\r\n                        id=\"standard-with-placeholder\"\r\n                        label=\"Mot de passe\"\r\n                        placeholder=\"Mot de passe\"\r\n                        style={{width: '100%', marginTop: 16, marginBottom: 8}}\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={this.onChange}\r\n                        error={errors.password}\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={this.handleClickShowPassword}\r\n                              onMouseDown={this.handleMouseDownPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        }\r\n                      />\r\n                      <em>{errors.password}</em>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item style={{display: 'flex', justifyContent: 'center', marginTop: 30}}>\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{width: '100%', color: 'white'}}>\r\n                    Connexion\r\n                  </Button>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n            <Grid item style={{display: 'flex', flexDirection: 'column', marginBottom: '10%'}}>\r\n              <Link href={'/forgotPassword'}><a color=\"primary\" style={{textDecoration: 'none', color: '#2FBCD3'}}>Mot\r\n                de passe oublié ?</a></Link>\r\n              <a color=\"primary\" onClick={callRegister}\r\n                 style={{textDecoration: 'none', color: '#2FBCD3', cursor: 'pointer'}}>Pas encore inscrit ?\r\n                Inscrivez-vous !</a>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(LogIn);\r\n","export default theme => ({\r\n  fullContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n  },\r\n  loginContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  cardContant: {\r\n    flexDirection: 'column',\r\n  },\r\n  linkText: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n    fontSize: 12,\r\n  },\r\n\r\n  [theme.breakpoints.between('sm', 'xl')]: {\r\n    secondContainer: {\r\n      width: '60%',\r\n      height: '100vh',\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    secondContainer: {\r\n      display: 'none',\r\n    },\r\n    hrStyle: {\r\n      display: 'none',\r\n    },\r\n    fullContainer: {\r\n      flexDirection: 'column',\r\n    },\r\n    loginContainer: {\r\n      width: 'inherit',\r\n    },\r\n  },\r\n  hrStyle: {\r\n    borderWidth: 0.5,\r\n    color: 'lightgray',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  genericContainer: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n  },\r\n  colorIcon: {\r\n    color: 'rgba(84,89,95,0.95)',\r\n  },\r\n  widthTextField: {\r\n    width: '70%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '80%',\r\n    },\r\n  },\r\n  newContainer: {\r\n    padding: '5%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 10,\r\n    },\r\n  },\r\n  containerDialogContent: {\r\n    width: '100%',\r\n    height: '100%',\r\n    marginBottom: '1.6rem',\r\n    marginTop: '-1.6rem',\r\n  },\r\n  titleRegister: {\r\n    textAlign: 'center',\r\n    margin: '0px auto 1.6rem',\r\n    fontSize: '1.6rem',\r\n    color: 'rgba(84,89,95,0.95)',\r\n    letterSpacing: -1,\r\n    fontWeight: 'bold',\r\n  },\r\n  flexContainerPics: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n})\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Router from 'next/router';\r\nimport {FacebookLoginButton, GoogleLoginButton} from 'react-social-login-buttons';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styles from './OAuthStyle';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nclass OAuth extends Component {\r\n\r\n  components = {\r\n    google: GoogleLoginButton,\r\n    facebook: FacebookLoginButton,\r\n  };\r\n\r\n  startAuth = () => {\r\n    const {provider} = this.props;\r\n    Router.push(`/myAlfred/api/authentication/${provider}`);\r\n  };\r\n\r\n  render() {\r\n    const {provider, login} = this.props;\r\n    const {classes} = this.props;\r\n    const ProviderLoginButton = this.components[provider];\r\n\r\n    console.log(provider, 'provider');\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid container className={classes.contentOauth} onClick={this.startAuth}>\r\n          <Grid style={{margin: 10}}>\r\n            <img src={`/static/assets/img/${provider}.png`} alt={provider} title={provider} width={20}/>\r\n          </Grid>\r\n          <Grid>\r\n            <Divider orientation=\"vertical\" flexItem/>\r\n          </Grid>\r\n          <Grid>\r\n            <p style={{\r\n              color: 'rgba(0, 0, 0, 0.54)',\r\n              fontSize: '1rem',\r\n              fontFamily: 'Helvetica',\r\n              fontWeight: 400,\r\n              lineHeight: 1,\r\n            }}\r\n            >\r\n              {login ? `Connexion ${provider}` : `Inscription ${provider}`}\r\n            </p>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nOAuth.propTypes = {\r\n  provider: PropTypes.string.isRequired,\r\n  // Login : true => connect, false : register\r\n  login: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(OAuth);\r\n","export default theme => ({\r\n  contentOauth: {\r\n    display: 'flex',\r\n    border: '1px solid rgba(0, 0, 0, 0.2)',\r\n    borderRadius: 35,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n  },\r\n})\r\n","const {setAuthToken, setAxiosAuthentication}=require('../../utils/authentication')\r\nimport React from 'react';\r\nimport {toast} from 'react-toastify';\r\nimport {checkPass1, checkPass2} from '../../utils/passwords';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Typography} from '@material-ui/core';\r\nimport AlgoliaPlaces from 'algolia-places-react';\r\nimport {registerLocale} from 'react-datepicker';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport fr from 'date-fns/locale/fr';\r\nimport styles from './RegisterStyle';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from 'prop-types';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PhoneIphoneOutlinedIcon from '@material-ui/icons/PhoneIphoneOutlined';\r\nimport Router from 'next/router';\r\nimport Link from 'next/link';\r\n\r\nimport OAuth from '../OAuth/OAuth';\r\nimport Information from '../Information/Information';\r\nconst {getLoggedUserId}=require('../../utils/functions')\r\n\r\nvar parse = require('url-parse');\r\nconst {PROVIDERS} = require('../../utils/consts');\r\nconst {ENABLE_GF_LOGIN} = require('../../config/config');\r\nconst {isPhoneOk} = require('../../utils/sms');\r\n\r\n\r\nregisterLocale('fr', fr);\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const {inputRef, onChange, ...other} = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Register extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: '',\r\n      name: '',\r\n      birthday: new Date(),\r\n      email: '',\r\n      password: '',\r\n      password2: '',\r\n      address: '',\r\n      city: '',\r\n      zip_code: '',\r\n      country: '',\r\n      checked: false,\r\n      status1: {error: '', check: false},\r\n      status2: {error: '', check: false},\r\n      errors: {},\r\n      lat: '',\r\n      lng: '',\r\n      activeStep: 2,\r\n      file: null,\r\n      picture: '',\r\n      // Avatar link coming from Google or Facebook\r\n      avatar: null,\r\n      value: '',\r\n      phone: '',\r\n      phoneOk: false,\r\n      // Phone sendVerificationSMS\r\n      smsCodeOpen: false, // Show/hide SMS code modal\r\n      smsCode: '', // Typed SMS code\r\n      smsError: null,\r\n      phoneConfirmed: false,\r\n      serverError: false, // Si erreur serveur pour l''envoi du SMS, continuer quand même\r\n      errorEmailType: '',\r\n      emailValidator: false,\r\n      firstPageValidator: true,\r\n      secondPageValidator: true,\r\n      errorExistEmail: false,\r\n      birthdayError: '',\r\n      cityError: '',\r\n    };\r\n    this.handleChecked = this.handleChecked.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let query = parse(window.location.href, true).query;\r\n    if (query.google_id) {\r\n      this.setState({\r\n        google_id: query.google_id,\r\n        email: query.email,\r\n        name: query.lastname,\r\n        firstname: query.firstname,\r\n        firstPageValidator: false,\r\n        picture: query.picture,\r\n        file: query.picture,\r\n        avatar: query.picture,\r\n      });\r\n    }\r\n    if (query.facebook_id) {\r\n      this.setState({\r\n        facebook_id: query.facebook_id,\r\n        email: query.email,\r\n        name: query.lastname,\r\n        firstname: query.firstname,\r\n        activeStep: 1,\r\n        firstPageValidator: false,\r\n        avatar: query.picture,\r\n      });\r\n    }\r\n    if (query.error) {\r\n      this.setState({errorExistEmail: true});\r\n    }\r\n    if (getLoggedUserId()) {\r\n      toast.warn('Vous êtes déjà inscrit');\r\n      Router.push('/');\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.activeStep !== prevState.activeStep) {\r\n      this.props.sendParentData(this.state.activeStep);\r\n    }\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({[e.target.name]: e.target.value}, () => this.validatorFirstStep());\r\n  };\r\n\r\n  onChangePhone(e) {\r\n    var {name, value} = e.target;\r\n    this.setState({[name]: value});\r\n    if (name === 'phone') {\r\n      const phoneOk = isPhoneOk(value);\r\n      if (phoneOk && value.startsWith('0')) {\r\n        value = '33' + value.substring(1);\r\n      }\r\n      this.setState({'phone': value, phoneOk: isPhoneOk(value)});\r\n    }\r\n  };\r\n\r\n  onChangePicture = e => {\r\n    this.setState({picture: e.target.files[0]});\r\n  };\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      file:\r\n        event.target.files[0] ? URL.createObjectURL(event.target.files[0]) : null,\r\n    });\r\n  }\r\n\r\n  onChangePassword = e => {\r\n    this.setState({\r\n      status1: checkPass1(this.state.password),\r\n      status2: checkPass2(this.state.password, this.state.password2),\r\n    }, () => this.validatorFirstStep());\r\n  };\r\n\r\n  onChangeAddress(result) {\r\n    if (result) {\r\n      const suggestion=result.suggestion\r\n      this.setState({\r\n        city: suggestion.city, address: suggestion.name, zip_code: suggestion.postcode, country: suggestion.country,\r\n        lat: suggestion.latlng.lat, lng: suggestion.latlng.lng,\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        city: null, address: null, zip_code: null, country: null,\r\n        lat: null, lng: null,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChecked() {\r\n    this.setState({checked: !this.state.checked}, () => this.validatorSecondStep());\r\n  };\r\n\r\n  sendSms = () => {\r\n    setAxiosAuthentication()\r\n    axios.post('/myAlfred/api/users/sendSMSVerification', {phone: this.state.phone})\r\n      .then(res => {\r\n        var txt = 'Le SMS a été envoyé';\r\n        toast.info(txt);\r\n        this.setState({smsCodeOpen: true});\r\n      })\r\n      .catch(err => {\r\n        toast.error('Impossible d\\'envoyer le SMS');\r\n        this.setState({serverError: true});\r\n      });\r\n  };\r\n\r\n  checkSmsCode = () => {\r\n    setAxiosAuthentication()\r\n    axios.post('/myAlfred/api/users/checkSMSVerification', {sms_code: this.state.smsCode})\r\n      .then(res => {\r\n        if (res.data.sms_code_ok) {\r\n          toast.info('Votre numéro de téléphone est validé');\r\n          this.setState({smsCodeOpen: false, phoneConfirmed: true});\r\n        } else {\r\n          toast.error('Le code est incorrect');\r\n        }\r\n      })\r\n      .catch(err => toast.error('Erreur à la vérification du code'));\r\n  };\r\n\r\n  onSubmit = () => {\r\n\r\n    const newUser = {\r\n      google_id: this.state.google_id,\r\n      facebook_id: this.state.facebook_id,\r\n      firstname: this.state.firstname,\r\n      name: this.state.name,\r\n      birthday: this.state.birthday,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n      address: this.state.address,\r\n      zip_code: this.state.zip_code,\r\n      city: this.state.city,\r\n      country: this.state.country,\r\n      lat: this.state.lat,\r\n      lng: this.state.lng,\r\n    };\r\n\r\n    const username = this.state.email;\r\n    const password = this.state.password;\r\n    const google_id = this.state.google_id;\r\n    const facebook_id = this.state.facebook_id;\r\n\r\n    this.setState({cityError: null})\r\n    this.setState({birthdayError: null})\r\n\r\n    axios\r\n      .post('/myAlfred/api/users/register', newUser)\r\n      .then(() => {\r\n        toast.info('Inscription réussie');\r\n        axios.post('/myAlfred/api/users/login', {username, password, google_id, facebook_id})\r\n          .then(() => {\r\n            setAuthToken()\r\n            setAxiosAuthentication()\r\n          })\r\n          .catch()\r\n          .then(this.addPhoto).catch()\r\n          .then(this.setState({activeStep: this.state.activeStep + 1})).catch()\r\n          .then(this.submitPhone).catch();\r\n      })\r\n      .catch(err => {\r\n        const errors=err.response.data\r\n        const errKeys = Object.keys(errors)\r\n        this.setState({errors: err.response.data});\r\n        if (errKeys.includes('email')) {\r\n          this.setState({activeStep: 0});\r\n        }\r\n        if (errKeys.includes('address')) {\r\n          this.setState({cityError: errors.address, activeStep: 1});\r\n        }\r\n        if (errKeys.includes('birthday')) {\r\n          this.setState({birthdayError: errors.birthday, activeStep: 1});\r\n        }\r\n      });\r\n  };\r\n\r\n  addPhoto = () => {\r\n    setAxiosAuthentication()\r\n\r\n    if (this.state.picture !== '' || this.state.avatar !== '') {\r\n      const formData = new FormData();\r\n      formData.append('myImage', this.state.picture);\r\n      formData.append('avatar', this.state.avatar);\r\n      const config = {\r\n        headers: {\r\n          'content-type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      axios.post('/myAlfred/api/users/profile/picture', formData, config)\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n    /** else if (this.state.avatar !== '') {\r\n          axios.post(\"/myAlfred/api/users/profile/avatar\", { avatar: this.state.avatar})\r\n            .catch((error) => {\r\n              console.error(error)\r\n            })\r\n        } */\r\n  };\r\n\r\n\r\n  submitPhone = e => {\r\n\r\n    // Don't send empty phone number\r\n    if (!this.state.phone) {\r\n      return\r\n    }\r\n    if (!this.state.phoneConfirmed && !this.state.serverError) {\r\n      this.sendSms();\r\n    }\r\n\r\n    const newPhone = {\r\n      phone: this.state.phone,\r\n      phone_confirmed: this.state.phoneConfirmed,\r\n    };\r\n\r\n    setAxiosAuthentication()\r\n    axios\r\n      .put('/myAlfred/api/users/profile/phone', newPhone)\r\n      .then(res => {\r\n        toast.info('Téléphone ajouté');\r\n      })\r\n      .catch(err =>\r\n        console.error(err)\r\n      );\r\n  };\r\n\r\n  onChangeBirthdayDate = (e) => {\r\n    let day = new Date(this.state.birthday);\r\n    day.setDate(e.target.value);\r\n    this.setState({birthday: day});\r\n  };\r\n\r\n  onChangeBirthdayMonth = (e) => {\r\n    let month = new Date(this.state.birthday);\r\n    month.setMonth(e.target.value - 1);\r\n    this.setState({birthday: month});\r\n  };\r\n\r\n  onChangeBirthdayYear = (e) => {\r\n    let year = new Date(this.state.birthday);\r\n    year.setFullYear(e.target.value);\r\n    this.setState({birthday: year});\r\n  };\r\n\r\n  confirmLater = () => {\r\n    this.setState({smsCodeOpen: false});\r\n  };\r\n\r\n  onChangeEmail = (event) => {\r\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (event.target.value.match(regex)) {\r\n      this.setState({emailValidator: true, emailError: ''});\r\n    } else {\r\n      this.setState({emailValidator: false, emailError: 'Veuillez entrer une adresse email valide.'});\r\n    }\r\n    this.setState({email: event.target.value}, () => this.validatorFirstStep());\r\n  };\r\n\r\n  validatorFirstStep = () => {\r\n    if (this.state.errorEmailType === '' && this.state.email !== '' && this.state.emailValidator && this.state.firstname !== '' && this.state.name !== '' && this.state.status1.check && this.state.status2.check) {\r\n      this.setState({firstPageValidator: false});\r\n    } else {\r\n      this.setState({firstPageValidator: true});\r\n    }\r\n  };\r\n\r\n  validatorSecondStep = () => {\r\n    if (this.state.checked) {\r\n      this.setState({secondPageValidator: false});\r\n    } else {\r\n      this.setState({secondPageValidator: true});\r\n    }\r\n  };\r\n\r\n  renderSwitch(stepIndex, classes, errors) {\r\n\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <Grid container>\r\n            <Information\r\n              open={this.state.errorExistEmail}\r\n              onClose={() => this.setState({errorExistEmail: false})}\r\n              type='warning'\r\n              text={'Oups ! Un compte utilisant cette adresse mail existe déjà'}\r\n            />\r\n            {!this.state.google_id && ENABLE_GF_LOGIN ?\r\n              <Grid className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.flexContainerPics}>\r\n                      <Grid item>\r\n                        <h3 style={{color: 'rgba(84,89,95,0.95)', fontWeight: 'bold', letterSpacing: -1}}>Avec</h3>\r\n                      </Grid>\r\n                      <Grid style={{width: '70%'}}>\r\n                        {PROVIDERS.map(provider =>\r\n                          <OAuth\r\n                            login={false}\r\n                            provider={provider}\r\n                            key={provider}\r\n                          />,\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.flexContainerPics}>\r\n                      <Grid>\r\n                        <h3 style={{color: 'rgba(84,89,95,0.95)', fontWeight: 'bold', letterSpacing: -1}}>Ou</h3>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid> : null\r\n            }\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid item>\r\n                  <MailOutlineIcon className={classes.colorIcon}/>\r\n                </Grid>\r\n                <Grid item className={classes.widthTextField}>\r\n                  <TextField\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Email\"\r\n                    margin=\"normal\"\r\n                    style={{width: '100%'}}\r\n                    type=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    error={this.state.emailError}\r\n                    helperText={this.state.emailError}\r\n                    disabled={!!this.state.google_id}\r\n                  />\r\n                  <em style={{color: 'red'}}>{errors.email}</em>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid item>\r\n                  <PersonOutlineIcon className={classes.colorIcon}/>\r\n                </Grid>\r\n                <Grid item className={classes.widthTextField}>\r\n                  <TextField\r\n                    id=\"standard-with-placeholder\"\r\n                    label=\"Prénom\"\r\n                    placeholder=\"Prénom\"\r\n                    margin=\"normal\"\r\n                    style={{width: '100%'}}\r\n                    type=\"text\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChange}\r\n                    error={errors.firstname}\r\n                  />\r\n                </Grid>\r\n                <em style={{color: 'red'}}>{errors.firstname}</em>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid item>\r\n                  <PersonOutlineIcon className={classes.colorIcon}/>\r\n                </Grid>\r\n                <Grid item className={classes.widthTextField}>\r\n                  <TextField\r\n                    label=\"Nom\"\r\n                    placeholder=\"Nom\"\r\n                    margin=\"normal\"\r\n                    style={{width: '100%'}}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                </Grid>\r\n                <em style={{color: 'red'}}>{errors.name}</em>\r\n              </Grid>\r\n            </Grid>\r\n            {!this.state.google_id ?\r\n              <Grid className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                      <Grid item>\r\n                        <LockOpenOutlinedIcon className={classes.colorIcon}/>\r\n                      </Grid>\r\n                      <Grid item className={classes.widthTextField}>\r\n                        <TextField\r\n                          label=\"Créer un mot de passe\"\r\n                          placeholder=\"Créer un mot de passe\"\r\n                          margin=\"normal\"\r\n                          style={{width: '100%'}}\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          value={this.state.password}\r\n                          onChange={this.onChange}\r\n                          onKeyUp={this.onChangePassword}\r\n                          error={this.state.status1.error}\r\n                          helperText={this.state.status1.error}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid className={classes.margin}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                      <Grid item>\r\n                        <LockOutlinedIcon className={classes.colorIcon}/>\r\n                      </Grid>\r\n                      <Grid item className={classes.widthTextField}>\r\n                        <TextField\r\n                          label=\"Confirmer mot de passe\"\r\n                          placeholder=\"Confirmer mot de passe\"\r\n                          margin=\"normal\"\r\n                          style={{width: '100%'}}\r\n                          type=\"password\"\r\n                          name=\"password2\"\r\n                          value={this.state.password2}\r\n                          onChange={this.onChange}\r\n                          onKeyUp={this.onChangePassword}\r\n                          error={this.state.status2.error}\r\n                          helperText={this.state.status2.error}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid> : null\r\n            }\r\n          </Grid>\r\n        );\r\n      case 1:\r\n        return (\r\n          <Grid container>\r\n            <Grid className={classes.margin}>\r\n            { true ? null  :\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <input accept=\"image/*\"\r\n                       className=\"input\"\r\n                       style={{display: 'none'}}\r\n                       id=\"icon-button-file\"\r\n                       type=\"file\"\r\n                       onChange={(event) => {\r\n                         this.handleChange(event);\r\n                         this.onChangePicture(event);\r\n                       }}\r\n                       name={'myImage'}\r\n                />\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    style={{backgroundImage: `url('${this.state.file}')`}}\r\n                    component=\"span\"\r\n                  >\r\n                    <PhotoCamera style={{fontSize: '2rem'}}/>\r\n                  </IconButton>\r\n                </label>\r\n              </Grid>\r\n            }\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid>\r\n                  <Typography className={classes.subtitle}>Adresse postale</Typography>\r\n                </Grid>\r\n                <Grid>\r\n                  <Typography className={classes.textStyle}>Votre adresse ne sera pas visible, mais nous l’utiliserons pour vous\r\n                    proposer\r\n                    ou proposer vos services aux utilisateurs ou Alfred proches de chez vous.</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid item style={{width: '100%'}}>\r\n                  <AlgoliaPlaces\r\n                    className={classes.textFieldAlgo}\r\n                    placeholder='Recherchez votre adresse'\r\n                    options={{\r\n                      appId: 'plKATRG826CP',\r\n                      apiKey: 'dc50194119e4c4736a7c57350e9f32ec',\r\n                      language: 'fr',\r\n                      countries: ['fr'],\r\n                      type: 'address',\r\n\r\n                    }}\r\n                    onChange={(suggestion) => this.onChangeAddress(suggestion)}\r\n                    onClear={() => this.onChangeAddress(null)}\r\n                  />\r\n                  <em style={{color: 'red'}}>{this.state.cityError}</em>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid>\r\n                  <Typography className={classes.subtitle}>Date de naissance</Typography>\r\n                </Grid>\r\n                <Grid>\r\n                  <Typography className={classes.textStyle}>Pour vous inscrire, vous devez être âgé d’au moins 16 ans. Les\r\n                    autres\r\n                    utilisateurs ne verront pas votre date de naissance.\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item className={classes.datenaissance} style={{display: 'flex', alignItems: 'center'}}>\r\n                  <Grid container style={{justifyContent: 'space-between', flexWrap: 'nowrap'}}>\r\n                    <Grid item style={{width: '30%'}}>\r\n                      <TextField\r\n                        label=\"Jour\"\r\n                        placeholder=\"Jour\"\r\n                        onChange={this.onChangeBirthdayDate}\r\n                        inputProps={{\r\n                          maxLength: 2,\r\n                        }}\r\n                        InputProps={{\r\n                          inputComponent: NumberFormatCustom,\r\n                        }}\r\n                        error={this.state.birthdayError}\r\n                        helperText={this.state.birthdayError}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item style={{width: '30%'}}>\r\n                      <TextField\r\n                        label=\"Mois\"\r\n                        placeholder=\"Mois\"\r\n                        onChange={this.onChangeBirthdayMonth}\r\n                        inputProps={{\r\n                          maxLength: 2,\r\n                        }}\r\n                        InputProps={{\r\n                          inputComponent: NumberFormatCustom,\r\n                        }}\r\n                        error={this.state.birthdayError}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item style={{width: '30%'}}>\r\n                      <TextField\r\n                        label=\"Année\"\r\n                        placeholder=\"Année\"\r\n                        onChange={this.onChangeBirthdayYear}\r\n                        inputProps={{\r\n                          maxLength: 4,\r\n                        }}\r\n                        InputProps={{\r\n                          inputComponent: NumberFormatCustom,\r\n                        }}\r\n                        error={this.state.birthdayError}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid className={classes.newContainer}>\r\n                  <Grid>\r\n                    <Typography className={classes.subtitle}>Téléphone</Typography>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Typography className={classes.textStyle}>L'ajout de votre numéro de téléphone permet aux membres My-Alfred\r\n                      de disposer d'un moyen pour vous contacter.\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                  <Grid item>\r\n                    <PhoneIphoneOutlinedIcon className={classes.colorIcon}/>\r\n                  </Grid>\r\n                  <Grid item style={{width: '70%'}}>\r\n                    <TextField\r\n                      id=\"standard-with-placeholder\"\r\n                      label=\"Numéro de téléphone\"\r\n                      placeholder=\"Numéro de téléphone\"\r\n                      margin=\"normal\"\r\n                      style={{width: '100%'}}\r\n                      type={'number'}\r\n                      name=\"phone\"\r\n                      value={this.state.phone}\r\n                      onChange={(e) => this.onChangePhone(e)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid>\r\n                  <Grid container style={{marginTop: 15, alignItems: 'center'}}>\r\n                    <Grid>\r\n                      <Checkbox\r\n                        checked={this.state.checked}\r\n                        onChange={this.handleChecked}\r\n                        value=\"checked\"\r\n                        color=\"primary\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid>\r\n                      <a href={'/cgu'} target=\"_blank\" style={{color: '#2FBCD3'}}>J’accepte les conditions\r\n                        générales d’utilisation de My-Alfred.</a>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Grid container>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Grid>\r\n                  <h2 className={classes.titleRegister}>Inscription terminée</h2>\r\n                </Grid>\r\n                <Grid className={classes.newContainer}>\r\n                  <Grid item style={{display: 'flex', justifyContent: 'center', marginTop: 20, textAlign: 'center'}}>\r\n                    <Typography>Inscription réussie ! Vous pouvez maintenant proposer ou rechercher vos services sur My\r\n                      Alfred</Typography>\r\n                  </Grid>\r\n                  <Grid item className={classes.responsiveButton}>\r\n                    <Grid item style={{marginRight: '1%'}}>\r\n                      <Link href={'/search?search=1'}>\r\n                        <a style={{textDecoration: 'none'}}>\r\n                          <Button variant={'contained'} color={'primary'} style={{color: 'white', textTransform: 'initial'}}>Commencez à\r\n                            explorer</Button>\r\n                        </a>\r\n                      </Link>\r\n                    </Grid>\r\n                    <Grid item className={classes.responsiveSecondaryButton}>\r\n                      <Link href={'/creaShop/creaShop'}>\r\n                        <a style={{textDecoration: 'none'}}>\r\n                          <Button variant={'contained'} color={'secondary'} style={{color: 'white', textTransform: 'initial'}}>Proposer mes\r\n                            services</Button>\r\n                        </a>\r\n                      </Link>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                  <Grid style={{marginTop: 20}}>\r\n                    <hr/>\r\n                    <Grid style={{marginTop: 20}}>\r\n                      <Link href={'/needHelp/needHelp'} target=\"_blank\">\r\n                        <a target=\"_blank\" style={{\r\n                          color: '#2FBCD3',\r\n                          textAlign: 'center',\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          textDecoration: 'none',\r\n                        }}>\r\n                          Besoin d'aide pour proposer vos services ? Prenez rendez-vous avec l'équipe My Alfred ici !\r\n                        </a>\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\" className={classes.genericContainer}>\r\n                <Dialog open={this.state.smsCodeOpen} aria-labelledby=\"form-dialog-title\">\r\n                  <DialogTitle id=\"form-dialog-title\">Confirmation du numéro de téléphone</DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>Saisissez le code reçu par SMS</DialogContentText>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Code\"\r\n                      type=\"number\"\r\n                      placeholder=\"0000\"\r\n                      maxLength=\"4\"\r\n                      value={this.state.smsCode}\r\n                      onChange={e => {\r\n                        this.setState({smsCode: e.target.value});\r\n                      }}\r\n                      fullWidth\r\n                      errors={this.state.smsError}\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={() => this.confirmLater()} color=\"primary\">\r\n                      Confirmer plus tard\r\n                    </Button>\r\n                    <Button\r\n                      disabled={this.state.smsCode.length !== 4}\r\n                      onClick={() => this.checkSmsCode()}\r\n                      color=\"primary\">\r\n                      Confirmer\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n    }\r\n  }\r\n\r\n  handleNext = (activeStep) => {\r\n    if (activeStep === 1) {\r\n      this.onSubmit();\r\n    } else {\r\n      this.setState({activeStep: this.state.activeStep + 1});\r\n    }\r\n  };\r\n\r\n\r\n  handleBack = () => {\r\n    this.setState({activeStep: this.state.activeStep - 1});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {classes, callLogin} = this.props;\r\n    const {errors, activeStep, firstPageValidator, secondPageValidator} = this.state;\r\n\r\n    return (\r\n      <Grid className={classes.fullContainer}>\r\n        <Grid>\r\n          <Grid className={classes.newContainer}>\r\n            {\r\n              activeStep === 0 ?\r\n                <Grid>\r\n                  <h2 className={classes.titleRegister}>Inscription</h2>\r\n                </Grid> : null\r\n            }\r\n            <Grid className={classes.containerSwitch}>\r\n              {this.renderSwitch(activeStep, classes, errors)}\r\n            </Grid>\r\n            {\r\n              activeStep < 2 ?\r\n                <Grid style={{marginTop: 10}}>\r\n                  <hr/>\r\n                  <Grid>\r\n                    <MobileStepper\r\n                      variant=\"progress\"\r\n                      steps={2}\r\n                      position=\"static\"\r\n                      activeStep={activeStep}\r\n                      className={classes.rootStepper}\r\n                      classes={{\r\n                        progress: classes.progress,\r\n                      }}\r\n                      nextButton={\r\n                        <Button size=\"small\" onClick={() => this.handleNext(activeStep)}\r\n                                disabled={activeStep === 0 ? firstPageValidator : secondPageValidator}>\r\n                          {activeStep === 0 ? 'Suivant' : 'Terminer'}\r\n                          <KeyboardArrowRight/>\r\n                        </Button>\r\n                      }\r\n                      backButton={\r\n                        <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\r\n                          <KeyboardArrowLeft/>\r\n                          Précédent\r\n                        </Button>\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid container className={classes.bottomContainer}>\r\n                    <Grid item>\r\n                      <a color={'primary'} onClick={callLogin} style={{color: '#2FBCD3', cursor: 'pointer'}}>Vous\r\n                        avez déjà un compte My Alfred ?</a>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                </Grid> : null\r\n            }\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Register);\r\n","export default theme => ({\r\n  fullContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n  },\r\n  datenaissance: {\r\n    marginTop: 20,\r\n    width: '100%',\r\n  },\r\n  newContainer: {\r\n    padding: '5%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 10,\r\n    },\r\n  },\r\n  country: {\r\n    width: '100%',\r\n  },\r\n\r\n  birthday: {\r\n    height: 40,\r\n    fontSize: '0.9rem',\r\n  },\r\n  rootStepper: {\r\n    width: '100%',\r\n    flexGrow: 1,\r\n\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  textFieldAlgo: {\r\n    borderTop: 0,\r\n    borderLeft: 0,\r\n    borderRight: 0,\r\n\r\n  },\r\n  mainContainer: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n\r\n    },\r\n  },\r\n  signupContainer: {\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 200,\r\n    },\r\n\r\n  },\r\n  card: {\r\n    fontFamily: 'Helvetica',\r\n    width: 800,\r\n    marginTop: '100px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '90%',\r\n    },\r\n  },\r\n  banner: {\r\n    marginBottom: 25,\r\n    backgroundColor: '#2FBCD3',\r\n    height: 80,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]: {\r\n      textAlign: 'center',\r\n    },\r\n\r\n  },\r\n  title: {\r\n    fontFamily: 'Helvetica',\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 0,\r\n    paddingTop: 22,\r\n    letterSpacing: 1,\r\n  },\r\n  widthTextField: {\r\n    width: '70%',\r\n    whiteSpace: 'nowrap',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '80%',\r\n    },\r\n  },\r\n  bottomContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n  },\r\n  progress: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '25%',\r\n    },\r\n  },\r\n  titleRegister: {\r\n    textAlign: 'center',\r\n    margin: '0px auto 1.6rem',\r\n    fontSize: '1.6rem',\r\n    color: 'rgba(84,89,95,0.95)',\r\n    letterSpacing: -1,\r\n    fontWeight: 'bold',\r\n  },\r\n  containerSwitch: {\r\n    width: '100%',\r\n    height: '100%',\r\n    margin: '0px auto 1.6rem',\r\n  },\r\n  genericContainer: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n  },\r\n  genericContainerAndMargin: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 30,\r\n  },\r\n  colorIcon: {\r\n    color: 'rgba(84,89,95,0.95)',\r\n  },\r\n  button: {\r\n    width: 150,\r\n    height: 150,\r\n    backgroundColor: 'lightgray',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: '1.2rem',\r\n    width: '100%',\r\n    marginTop: 15,\r\n    textAlign: 'center',\r\n  },\r\n  textStyle: {\r\n    textAlign: 'center',\r\n  },\r\n  responsiveButton: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n  responsiveSecondaryButton: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginTop: '2%',\r\n    },\r\n  },\r\n  flexContainerPics: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n})\r\n","import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Link from 'next/link';\r\nimport styles from '../../static/css/components/ScrollMenu/ScrollMenu';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport querystring from 'querystring';\r\nimport Router from 'next/router';\r\n\r\n\r\nfunction a11yProps(index, res) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nclass ScrollMenu extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      value: props.indexCat ? parseInt(props.indexCat) : 0,\r\n    }\r\n  }\r\n\r\n  controllerUrl = (url) =>{\r\n    Router.push(url)\r\n  };\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({value: newValue})\r\n  };\r\n\r\n  render() {\r\n    const{classes, categories, gps, mode, extraParams} = this.props;\r\n    const{value} = this.state;\r\n\r\n  return(\r\n    <Grid style={{maxWidth: '100%'}}>\r\n      <Grid>\r\n        <Tabs\r\n          orientation=\"horizontal\"\r\n          variant=\"scrollable\"\r\n          value={value}\r\n          onChange={this.handleChange}\r\n          aria-label=\"scrollable force tabs\"\r\n          scrollButtons=\"on\"\r\n          classes={{indicator: classes.scrollMenuIndicator}}\r\n        >\r\n          {\r\n            categories ?\r\n              categories.map((res, index) =>\r\n              {\r\n\r\n                let url = mode === 'account' ? '/account' + res.url  + '?' + querystring.stringify({indexAccount: index})\r\n                          :\r\n                          mode === 'profile' ? '/profile' + res.url  + '?' + querystring.stringify({...extraParams, indexAccount: index})\r\n                          :\r\n                          mode === 'faq' ? res.url + '?' + 'indexFaq=' + index\r\n                          :\r\n                          '/search?search=1&category=' + res._id + (gps ? '&gps=' + JSON.stringify(gps) : '') + '&indexCat=' + index;\r\n                return(\r\n                  <Tab key={index} label={res.label} className={classes.scrollMenuTab} {...a11yProps(index)} onClick={()=>this.controllerUrl(url)}/>\r\n                )\r\n              }\r\n              ) : null\r\n          }\r\n        </Tabs>\r\n      </Grid>\r\n    </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ScrollMenu);\r\n","const {MODES, FACEBOOK_PROVIDER, GOOGLE_PROVIDER, LOCAL_HOST, AMAZON_HOST}=require('../utils/consts')\r\nconst {MODE}=require('../mode')\r\n\r\nconst get_mode = () => {\r\n  if (!Object.values(MODES).includes(MODE)) {\r\n    console.error(`Incorrect startup mode ${MODE}, expecting ${Object.values(MODES)}`)\r\n    process.exit(-1)\r\n  }\r\n  return MODE\r\n}\r\n\r\nconst is_production = () => {\r\n  return get_mode()==MODES.PRODUCTION\r\n}\r\n\r\nconst is_validation = () => {\r\n  return get_mode()==MODES.VALIDATION\r\n}\r\n\r\nconst is_development = () => {\r\n  return get_mode()==MODES.DEVELOPMENT || get_mode()==MODES.DEVELOPMENT_NOSSL\r\n}\r\n\r\nconst is_development_nossl = () => {\r\n  return get_mode()==MODES.DEVELOPMENT_NOSSL\r\n}\r\n\r\nconst appName = 'myalfred';\r\n\r\nconst DATABASE_PRODUCTION='test-myAlfred'\r\nconst DATABASE_TEST='test-myAlfred-V2'\r\n\r\nconst databaseName = MODE==MODES.PRODUCTION ? DATABASE_PRODUCTION : DATABASE_TEST\r\nconst serverPort = process.env.PORT || 3122;\r\n\r\nconst SERVER_PROD = is_production() || is_development()\r\n\r\nconst ENABLE_MAILING = is_production()\r\n\r\nconst source = require('./client_id.json');\r\n\r\nconst get_host_url = () => {\r\n  const protocol='https'\r\n  const hostname=is_development() ? LOCAL_HOST : AMAZON_HOST\r\n  const port=is_validation() ? ':3122' : ''\r\n  const host_url=`${protocol}://${hostname}${port}/`\r\n  return host_url\r\n}\r\n\r\nconst MANGOPAY_CONFIG_PROD = {\r\n clientId: 'myalfredprod',\r\n clientApiKey: 'j8R8fLZmUderNNp27siCqMAJ3y7Bv7BB82trfGuhqSKcYpEZ91',\r\n baseUrl: 'https://api.mangopay.com',\r\n}\r\n\r\nconst MANGOPAY_CONFIG_TEST = {\r\n clientId: 'testmyalfredv2',\r\n clientApiKey: 'cSNrzHm5YRaQxTdZVqWxWAnyYDphvg2hzBVdgTiAOLmgxvF2oN',\r\n logClass: () => {\r\n },\r\n}\r\n\r\nconst MANGOPAY_CONFIG = is_production() ? MANGOPAY_CONFIG_PROD : MANGOPAY_CONFIG_TEST\r\n\r\nconst completeConfig = {\r\n\r\n  default: {\r\n    appName,\r\n    serverPort,\r\n    databaseUrl: process.env.MONGODB_URI || `mongodb://localhost/${databaseName}`,\r\n    jsonOptions: {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  },\r\n\r\n  development: {\r\n    appUrl: `http://localhost:${serverPort}`,\r\n  },\r\n\r\n  production: {\r\n    appUrl: `http://localhost:${serverPort}`,\r\n  },\r\n\r\n};\r\n\r\nconst mailConfig = {\r\n  user: 'sebastien.auvray@my-alfred.io',\r\n  clientId: source.web.client_id,\r\n  clientSecret: source.web.client_secret,\r\n  refreshToken: '1//040qqd968fTUmCgYIARAAGAQSNwF-L9Iry-KzNeNu-Eg4YJGYtS9_zn5K4rnt7hxvcsPvh69BEUwhoqslW3oAETeYWLWBxo8zKtk',\r\n  accessToken: 'ya29.Il-7B9vPQ9meRKDhLu1cARHVXyGEiGiIidmgeLCB7LLszjByPxRVWJ8mw_u2AQh5ZXeUiXgPyAX9H-KjgXX7pwArP6Bp_TC1OrMR-fOFAMITK0OuOPWKjk11Z0AUhP4dxw',\r\n};\r\n\r\nconst computeUrl = (req) => {\r\n  return 'https://' + req.headers.host;\r\n};\r\n\r\nconst SIRET = {\r\n  token: 'ca27811b-126c-35db-aaf0-49aea431706e',\r\n  siretUrl: 'https://api.insee.fr/entreprises/sirene/V3/siret',\r\n  sirenUrl: 'https://api.insee.fr/entreprises/sirene/V3/siren',\r\n};\r\n\r\n// Enable.disable Google & Facebook login\r\nconst ENABLE_GF_LOGIN = false;\r\n\r\nconst PROVIDERS = ENABLE_GF_LOGIN ? [GOOGLE_PROVIDER, FACEBOOK_PROVIDER] : [];\r\n\r\nconst displayConfig = () => {\r\n  console.log(`Configuration is:\\n\\\r\n  \\tMode:${get_mode()}\\n\\\r\n  \\tDatabase:${databaseName}\\n\\\r\n  \\tServer prod:${SERVER_PROD}\\n\\\r\n  \\tServer port:${SERVER_PROD ? '80/443':'3122'}\\n\\\r\n  \\tHost URL:${get_host_url()}\\n\\\r\n  \\tSendInBlue actif:${ENABLE_MAILING}\\n\\\r\n  \\tMangopay clientId:${MANGOPAY_CONFIG.clientId}\\\r\n  `)\r\n}\r\n\r\n// Public API\r\nmodule.exports = {\r\n  databaseName: databaseName,\r\n  config: {...completeConfig.default, ...completeConfig[process.env.NODE_ENV]},\r\n  completeConfig,\r\n  mailConfig,\r\n  computeUrl,\r\n  SIRET,\r\n  ENABLE_GF_LOGIN,\r\n  GOOGLE_PROVIDER, FACEBOOK_PROVIDER, PROVIDERS,\r\n  is_production, is_validation, is_development, is_development_nossl, SERVER_PROD,\r\n  get_host_url, MANGOPAY_CONFIG, displayConfig,\r\n  ENABLE_MAILING\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '../../../components/Link/Link'\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport styles from '../../../static/css/components/Footer/Footer'\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nclass Footer extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <Grid className={classes.footerMainStyle}>\r\n        <Grid>\r\n          <Grid container className={classes.footerMainContainer}>\r\n            <Hidden only={['xs']}>\r\n              <Grid item xl={3} lg={3} className={classes.footerSection}>\r\n                <Grid>\r\n                  <h3 className={classes.footerTitileSection}>À propos</h3>\r\n                </Grid>\r\n                <Link href={'/footer/apropos?indexFaq=0'}>\r\n                  <Grid style={{marginBottom: '2vh'}}>\r\n                      <Typography className={classes.footerLink}>My Alfred</Typography>\r\n                    </Grid>\r\n                  </Link>\r\n                  <Link href={'/footer/ourTeam?indexFaq=2'}>\r\n                    <Grid style={{marginBottom: '2vh'}}>\r\n                      <Typography className={classes.footerLink}>Notre équipe</Typography>\r\n                    </Grid>\r\n                  </Link>\r\n                  <Link href={'/contact'}>\r\n                    <Grid>\r\n                      <Typography className={classes.footerLink}>Nous contacter</Typography>\r\n                    </Grid>\r\n                  </Link>\r\n                </Grid>\r\n              </Hidden>\r\n              <Hidden only={['xs']}>\r\n                <Grid item xl={3} lg={3} className={classes.footerSection}>\r\n                  <Grid>\r\n                    <h3 className={classes.footerTitileSection}>Communauté</h3>\r\n                  </Grid>\r\n                  <Link href={'/footer/ourCommunity?indexFaq=1'}>\r\n                    <Grid style={{marginBottom: '2vh'}}>\r\n                      <Typography className={classes.footerLink}>Notre communauté</Typography>\r\n                    </Grid>\r\n                  </Link>\r\n                    {/*<Link href={'/'}>*/}\r\n                    {/*    <Grid style={{marginBottom: '2vh'}}>*/}\r\n                    {/*        <Typography className={classes.footerLink}>Le blog</Typography>*/}\r\n                    {/*    </Grid>*/}\r\n                    {/*</Link>*/}\r\n                    {/*<Link href={'/'}>*/}\r\n                    {/*    <Grid>*/}\r\n                    {/*        <Typography className={classes.footerLink}>Inviter un ami</Typography>*/}\r\n                    {/*    </Grid>*/}\r\n                    {/*</Link>*/}\r\n                </Grid>\r\n              </Hidden>\r\n              <Hidden only={['xs']}>\r\n                <Grid item xl={3} lg={3} className={classes.footerSection}>\r\n                  <Grid>\r\n                    <h3 className={classes.footerTitileSection}>Alfred</h3>\r\n                  </Grid>\r\n                    <Link href={'/footer/becomeAlfred'}>\r\n                      <Grid style={{marginBottom: '2vh'}}>\r\n                        <Typography className={classes.footerLink}>Devenir Alfred</Typography>\r\n                      </Grid>\r\n                    </Link>\r\n                    {true ? null :\r\n                      <Link href={'/'}>\r\n                        <Grid>\r\n                          <Typography className={classes.footerLink}>Centre de ressources</Typography>\r\n                        </Grid>\r\n                      </Link>\r\n                    }\r\n                  </Grid>\r\n              </Hidden>\r\n              <Grid item xl={3} lg={3} className={classes.footerSection}>\r\n                <Grid>\r\n                  <h3 className={classes.footerTitileSection}>Assistance</h3>\r\n                </Grid>\r\n                  <Link href={'/footer/addService'}>\r\n                    <Grid style={{marginBottom: '2vh'}}>\r\n                      <Typography className={classes.footerLink}>Réserver un service</Typography>\r\n                    </Grid>\r\n                  </Link>\r\n                  <Link onClick={() => Tawk_API.maximize()}>\r\n                    <Grid style={{marginBottom: '2vh'}}>\r\n                      <Typography className={classes.footerLink}>Parler à un humain</Typography>\r\n                    </Grid>\r\n                  </Link>\r\n                  <Link href={'/faq'}>\r\n                    <Grid>\r\n                      <Typography className={classes.footerLink}>FAQ</Typography>\r\n                    </Grid>\r\n                  </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Hidden only={['xl', 'lg', 'md']}>\r\n              <Grid className={classes.footerDividerContainer}>\r\n                <Divider className={classes.footerDivider}/>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid className={classes.footerSocialSection}>\r\n              <Grid>\r\n                <h3 className={classes.footerTitileSection}>Réseaux sociaux</h3>\r\n              </Grid>\r\n                <Grid className={classes.footerSocialContainer}>\r\n                  <Grid>\r\n                    <FacebookIcon/>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <InstagramIcon/>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <LinkedInIcon/>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <TwitterIcon/>\r\n                  </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.footerDividerContainer}>\r\n                <Divider className={classes.footerDivider}/>\r\n            </Grid>\r\n            <Grid className={classes.footerBrandContainer}>\r\n              <Grid className={classes.footerBrandStyle}>\r\n                <Grid className={classes.footerLawContainer}>\r\n                  <Typography className={classes.footerText}>\r\n                    © 2020 MY ALFRED Corporation. Tous droits réservés\r\n                  </Typography>\r\n                </Grid>\r\n                  <Grid className={classes.footerRgpdButtons}>\r\n                    {true ? null :\r\n                      <Grid>\r\n                        <Typography className={classes.footerLink}>Sécurité</Typography>\r\n                      </Grid>\r\n                    }\r\n                      <Grid className={classes.footerLinkInfoContainer}>\r\n                        <Link href={'/cgu'}>\r\n                          <Typography className={classes.footerLink}>Informations légales</Typography>\r\n                        </Link>\r\n                      </Grid>\r\n                      <Grid>\r\n                        <Typography className={classes.footerLink}>Confidentialié</Typography>\r\n                      </Grid>\r\n                  </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Footer);\r\n","const {setAxiosAuthentication}=require('../../utils/authentication')\r\nimport React, {Fragment} from 'react';\r\nimport NavBar from './NavBar/NavBar';\r\nimport Footer from './Footer/Footer';\r\n\r\nimport styles from '../../static/css/pages/layout/layoutStyle'\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InfoBar from \"../../components/InfoBar/InfoBar\";\r\nimport ScrollMenu from '../../components/ScrollMenu/ScrollMenu'\r\nimport axios from \"axios\";\r\nimport TrustAndSecurity from \"./TrustAndSecurity/TrustAndSecurity\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nconst {getLoggedUserId}=require('../../utils/functions')\r\n\r\nclass Layout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      logged: false,\r\n      categories: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setAxiosAuthentication()\r\n    axios.get('/myAlfred/api/category/all/sort').then(res => {\r\n      let cat = res.data;\r\n      this.setState({categories: cat})\r\n    }).catch(err => { console.error(err)})\r\n    if (getLoggedUserId()) {\r\n      this.setState({logged: true});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {children, selectedAddress, classes, gps, indexCat, keyword} = this.props;\r\n    const {logged, categories} = this.state;\r\n\r\n    return (\r\n      <Grid>\r\n        <InfoBar/>\r\n        <NavBar selectedAddress={selectedAddress} keyword={keyword} key={this.logged}/>\r\n        <Grid>\r\n          <Grid className={classes.layoutScrollMenu}>\r\n            <ScrollMenu categories={categories} gps={gps} indexCat={indexCat} mode={false}/>\r\n          </Grid>\r\n          <Grid className={classes.filterMenuDivierContainer}>\r\n            <Divider className={classes.filterMenuDividerStyle}/>\r\n          </Grid>\r\n        </Grid>\r\n        {children}\r\n        <Grid className={classes.mainContainerStyleFooter}>\r\n          <Divider style={{width: '100%'}}/>\r\n          <Grid style={{width: '90%'}}>\r\n            <TrustAndSecurity/>\r\n          </Grid>\r\n          <Grid className={classes.generalWidthFooter} >\r\n            <Grid style={{width: '85%'}}>\r\n              <Footer/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Layout);\r\n","const {setAxiosAuthentication}=require('../../../utils/authentication')\r\nimport React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nconst  {clearAuthenticationToken}=require('../../../utils/authentication')\r\nimport Router from 'next/router';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport LogIn from '../../../components/LogIn/LogIn';\r\nimport Register from '../../../components/Register/Register';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AlgoliaPlaces from 'algolia-places-react';\r\nimport {SEARCHBAR, NAVBAR_MENU} from '../../../utils/i18n';\r\nimport DatePicker from \"react-datepicker\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Link from '../../../components/Link/Link';\r\nimport axios from 'axios'\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport styles from '../../../static/css/components/NavBar/NavBar';\r\nimport {Typography} from '@material-ui/core';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport {DateRangePicker} from \"react-dates\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const {children, classes, onClose, ...other} = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon/>\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null,\r\n      setOpenLogin: false,\r\n      setOpenRegister: false,\r\n      user: null,\r\n      activeStep: 0,\r\n      keyword: '',\r\n      city: undefined,\r\n      gps: '',\r\n      dateSelected: '',\r\n      ifHomePage: false,\r\n      modalMobileSearchBarInput: false,\r\n      mobileStepSearch: 0,\r\n      ifSearchPage: false,\r\n      modalFilters: false,\r\n      individualSelected: false,\r\n      proSelected: false,\r\n      startDate: null,\r\n      endDate: null,\r\n      focusedInput: null,\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let query = Router.query;\r\n    if (Router.pathname === '/') {\r\n      this.setState({ifHomePage: true})\r\n    }\r\n    if (Router.pathname === '/search') {\r\n      this.setState({ifSearchPage: true})\r\n    }\r\n    if(query.login === 'true'){\r\n      this.handleOpenLogin()\r\n    }\r\n\r\n    setAxiosAuthentication()\r\n    axios.get('/myAlfred/api/users/current')\r\n      .then(res => {\r\n        var allAddresses={'main':res.data.billing_address};\r\n        res.data.service_address.forEach( addr => {\r\n          allAddresses[addr._id]=addr\r\n        });\r\n\r\n        this.setState({\r\n          user: res.data,\r\n          allAddresses: allAddresses\r\n        })\r\n      }).catch();\r\n\r\n    this.setState({selectedAddress: this.props.selectedAddress || 'main'});\r\n    this.setState({keyword: this.props.keyword || ''})\r\n  }\r\n\r\n  logout = () => {\r\n    clearAuthenticationToken()\r\n    localStorage.removeItem('path')\r\n    if (this.state.ifHomePage) {\r\n      window.location.reload(false)\r\n    }\r\n    else {\r\n      Router.push('/')\r\n    }\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({anchorEl: null});\r\n  };\r\n\r\n  handleOpenLogin = (e) => {\r\n    this.handleMenuClose();\r\n      this.setState({setOpenLogin: true, setOpenRegister: false});\r\n  };\r\n\r\n  handleCloseLogin = () => {\r\n    this.setState({setOpenLogin: false});\r\n  };\r\n\r\n  handleOpenRegister = (e) => {\r\n    this.handleMenuClose();\r\n      this.setState({setOpenRegister: true, setOpenLogin: false});\r\n  };\r\n\r\n  handleCloseRegister = () => {\r\n    if (this.state.activeStep === 2) {\r\n      this.setState({setOpenRegister: false}, () => this.componentDidMount());\r\n    } else {\r\n      this.setState({setOpenRegister: false});\r\n    }\r\n  };\r\n\r\n  needRefresh = () => {\r\n    this.setState({setOpenLogin: false});\r\n    const path=localStorage.getItem('path')\r\n    if (path) {\r\n      localStorage.removeItem('path');\r\n      Router.push(path)\r\n    }\r\n    else {\r\n      Router.push('/search?search=1');\r\n    }\r\n  };\r\n\r\n  getData = (e) => {\r\n    this.setState({activeStep: e});\r\n  };\r\n\r\n  onSuggestions = ({query}) => {\r\n    this.setState({city: query});\r\n  };\r\n\r\n  onChange = e => {\r\n    let {name, value} = e.target;\r\n    this.setState({[name]: value});\r\n    if (name === 'selectedAddress') {\r\n      if (value === 'addAddress') {\r\n        Router.push('/account/myAddresses?indexAccount=4');\r\n      } else {\r\n        this.setState({\r\n          gps: value === 'all' ? null : value === 'main' ? this.state.allAddresses['main'].gps : {\r\n            lat: this.state.allAddresses[value].lat,\r\n            lng: this.state.allAddresses[value].lng,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleOpenMenuItem = (event) => {\r\n    this.setState({anchorEl: event.currentTarget})\r\n  };\r\n\r\n  handleClosenMenuItem = () => {\r\n    this.setState({anchorEl: false})\r\n  };\r\n\r\n  findService = () => {\r\n    var queryParams = {search: 1};\r\n    if (this.state.keyword) {\r\n      queryParams['keyword'] = this.state.keyword;\r\n    }\r\n\r\n    if (this.state.city) {\r\n      queryParams['city'] = this.state.city;\r\n    }\r\n\r\n    if (this.state.gps) {\r\n      queryParams['gps'] = JSON.stringify(this.state.gps);\r\n    }\r\n\r\n    if (this.state.selectedAddress) {\r\n      queryParams['selectedAddress'] = this.state.selectedAddress\r\n    }\r\n    Router.push({pathname: '/search', query: queryParams});\r\n  };\r\n\r\n  onChangeCity({suggestion}) {\r\n    this.setState({gps: suggestion.latlng, city: suggestion.name});\r\n  };\r\n\r\n  statusFilterChanged = event => {\r\n        this.setState({[event.target.name]: event.target.checked, modalFilters: false}, () => this.props.filter());\r\n  };\r\n\r\n  onChangeInterval(startDate, endDate) {\r\n    if (startDate) {\r\n      startDate.hour(0).minute(0).second(0).millisecond(0);\r\n    }\r\n\r\n    if (endDate) {\r\n      endDate.hour(23).minute(59).second(59).millisecond(999);\r\n    }\r\n\r\n    this.setState({startDate: startDate, endDate: endDate});\r\n  }\r\n\r\n    handleModalSearchBarInput = () => {\r\n    this.setState({modalMobileSearchBarInput: true})\r\n  };\r\n\r\n    mobileSearchBarInput = (classes) => {\r\n      return (\r\n        <Grid className={this.state.ifHomePage ? classes.navbarSearchContainer : classes.navbarSearchContainerSearchP} onClick={this.handleModalSearchBarInput}>\r\n        <Paper classes={{root: this.state.ifHomePage ? classes.navbarSearch : classes.navbarSearchP}}>\r\n          <Grid>\r\n            <IconButton classes={{root: classes.iconButton}} aria-label=\"search\">\r\n              <SearchIcon/>\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid style={{marginLeft: '2vh'}}>\r\n            <Typography>Commencez votre recherche</Typography>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    )\r\n  };\r\n\r\n  modalMobileSearchBarInput = (classes) => {\r\n    return (\r\n      <SwipeableDrawer\r\n        anchor={'bottom'}\r\n        open={this.state.modalMobileSearchBarInput}\r\n        onOpen={() => this.setState({modalMobileSearchBarInput: true})}\r\n        onClose={() => this.setState({\r\n          modalMobileSearchBarInput: false,\r\n          mobileStepSearch: 0,\r\n          keyword: null,\r\n          city: undefined,\r\n          gps: ''\r\n        })}\r\n        className={classes.drawerStyle}\r\n      >\r\n        <Grid container style={{height: '100%'}}>\r\n          <Grid item style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n            <Grid>\r\n              <IconButton\r\n                aria-label=\"delete\"\r\n                onClick={() => this.setState({\r\n                  modalMobileSearchBarInput: false,\r\n                  mobileStepSearch: 0,\r\n                  keyword: null,\r\n                  city: undefined,\r\n                  gps: ''\r\n                })}>\r\n                <ClearIcon/>\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid>\r\n              <h3>{this.state.mobileStepSearch === 0 ? 'Votre Recherche' : this.state.mobileStepSearch === 1 ? 'Où' : 'Dates'}</h3>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container spacing={3} style={{margin: 0}}>\r\n            <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\r\n              {\r\n                this.state.mobileStepSearch === 0 ?\r\n                  <TextField\r\n                    value={this.state.keyword}\r\n                    onChange={this.onChange}\r\n                    name={'keyword'}\r\n                    label={this.state.ifHomePage ? 'Quel service recherchez-vous ? ' : false}\r\n                    onKeyPress={(e) => {\r\n                      e.key === 'Enter' && e.preventDefault();\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    classes={{root: classes.modalMobileSearchBarInputTextField}}\r\n                  />\r\n                  :\r\n                  this.state.user ?\r\n                    <Grid>\r\n                      <FormControl variant=\"outlined\">\r\n                        <Select\r\n                          id=\"outlined-select-currency\"\r\n                          value={this.props.selectedAddress ? this.props.selectedAddress : 'main'}\r\n                          name={'selectedAddress'}\r\n                          onChange={(e) => {\r\n                            this.onChange(e);\r\n                          }}\r\n                          classes={{selectMenu: classes.fitlerMenuLogged}}\r\n                        >\r\n                          <MenuItem value={'main'} style={{whiteSpace: 'nowrap'}}>\r\n                            Adresse\r\n                            principale, {' ' + this.state.user.billing_address.address} {this.state.user.billing_address.zip_code},{this.state.user.billing_address.city}\r\n                          </MenuItem>\r\n                          {this.state.user.service_address.map((e, index) => (\r\n                            <MenuItem value={e._id} key={index}>\r\n                              {e.label + ', '} {' ' + e.address},{e.zip_code} {e.city}\r\n                            </MenuItem>\r\n                          ))}\r\n                          <MenuItem value={'all'}>\r\n                            Partout, Rechercher des Alfred partout\r\n                          </MenuItem>\r\n                          <MenuItem value={'addAddress'}>\r\n                            <Typography style={{color: '#2FBCD3', cursor: 'pointer'}}>\r\n                              Ajouter une adresse\r\n                            </Typography>\r\n                          </MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    :\r\n                    <TextField\r\n                      item\r\n                      xs={12}\r\n                      classes={{root: classes.modalMobileSearchBartTextFieldWhereP}}\r\n                      value={this.state.city}\r\n                      label={SEARCHBAR.where}\r\n                      variant={'outlined'}\r\n                      InputProps={{\r\n                        inputComponent: (inputRef) => {\r\n                          return (\r\n                            <AlgoliaPlaces\r\n                              {...inputRef}\r\n                              placeholder={''}\r\n                              className={classes.navbarAlgoliaPlace}\r\n                              options={{\r\n                                appId: 'plKATRG826CP',\r\n                                apiKey: 'dc50194119e4c4736a7c57350e9f32ec',\r\n                                language: 'fr',\r\n                                countries: ['fr'],\r\n                                type: 'city',\r\n                              }}\r\n                              onChange={(suggestion) => this.onChangeCity(suggestion)}\r\n                              onClear={() => this.setState({city: '', gps: ''})}\r\n\r\n                            />)\r\n                        },\r\n                        disableUnderline: true\r\n                      }}\r\n                    />\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Grid style={{width: '90%'}}>\r\n              <Button\r\n                onClick={() => this.state.mobileStepSearch === 0 ? this.setState({mobileStepSearch: this.state.mobileStepSearch + 1}) : this.findService()}\r\n                color={'primary'} classes={{root: classes.buttonNextRoot}}\r\n                variant={'contained'}>{this.state.mobileStepSearch === 0 ? 'Suivant' : 'Rechercher'}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </SwipeableDrawer>\r\n    )\r\n  };\r\n\r\n    mobileSearchBarInputSearchPage = (classes) => {\r\n        return (\r\n      <Grid className={classes.navbarSearchContainerSearchPage}>\r\n        <Paper classes={{root: classes.navbarSearch}}>\r\n          <Grid>\r\n            <IconButton classes={{root: classes.iconButton}} aria-label=\"search\" onClick={this.handleModalSearchBarInput}>\r\n              <SearchIcon/>\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid style={{\r\n            marginLeft: '2vh',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n            cursor: 'pointer'\r\n          }} onClick={this.handleModalSearchBarInput}>\r\n            <Typography style={{textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}>Commencez votre recherche</Typography>\r\n          </Grid>\r\n          <Grid style={{height: 30}}>\r\n            <Divider style={{width: 2}} orientation=\"vertical\"/>\r\n          </Grid>\r\n          <IconButton color=\"primary\" aria-label=\"directions\" onClick={() => this.setState({modalFilters: true})}>\r\n            <TuneIcon/>\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n    )\r\n  };\r\n\r\n    modalMobileFilter = (classes) => {\r\n      return (\r\n        <Dialog\r\n          onClose={() => this.setState({modalFilters: false})}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.state.modalFilters}\r\n          classes={{paper: classes.dialogNavbarMobileFilter}}\r\n        >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={() => this.setState({modalFilters: false})}>\r\n          Filtres\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid>\r\n            <Grid>\r\n              <Grid>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={this.state.proSelected}\r\n                      onChange={e => {\r\n                        this.statusFilterChanged(e);\r\n                      }}\r\n                      value={this.state.proSelected}\r\n                      color=\"primary\"\r\n                      name={'proSelected'}\r\n                    />\r\n                  }\r\n                  label=\"Pro\"\r\n                />\r\n              </Grid>\r\n              <Grid>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={this.state.individualSelected}\r\n                      onChange={e => {\r\n                        this.statusFilterChanged(e);\r\n                      }}\r\n                      value={this.state.individualSelected}\r\n                      color=\"primary\"\r\n                      name={'individualSelected'}\r\n                    />\r\n                  }\r\n                  label=\"Particulier\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid>\r\n              <Divider style={{width: '100%', marginTop: '2vh', marginBottom: '2vh'}}/>\r\n            </Grid>\r\n            <Grid>\r\n              <DateRangePicker\r\n                startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n                startDatePlaceholderText={'Début'}\r\n                endDatePlaceholderText={'Fin'}\r\n                startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n                endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n                endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n                onDatesChange={({startDate, endDate}) => this.onChangeInterval(startDate, endDate)} // PropTypes.func.isRequired,\r\n                focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                onFocusChange={focusedInput => this.setState({focusedInput})} // PropTypes.func.isRequired,\r\n                minimumNights={0}\r\n                numberOfMonths={1}\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            onClick={() => this.setState({modalFilters: false}, () => this.props.filter())}\r\n            color=\"primary\"\r\n          >\r\n            Afficher les résultats\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  };\r\n\r\n  searchBarInput = (classes) => {\r\n\r\n    const logged = this.state.user !=null\r\n    return (\r\n      <Grid className={this.state.ifHomePage ? classes.navbarSearchContainer : classes.navbarSearchContainerSearchP}>\r\n      <Paper classes={{root: this.state.ifHomePage ? classes.navbarSearch : classes.navbarSearchP}}>\r\n        <Grid className={classes.navbarTextFieldService}>\r\n          <TextField\r\n            classes={{root: this.state.ifHomePage ? classes.navbarRootTextField : classes.navbarRootTextFieldP}}\r\n            placeholder={SEARCHBAR.what}\r\n            value={this.state.keyword}\r\n            onChange={this.onChange}\r\n            name={'keyword'}\r\n            label={this.state.ifHomePage ? SEARCHBAR.labelWhat : false}\r\n            onKeyPress={(e) => {\r\n              e.key === 'Enter' && e.preventDefault();\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{disableUnderline: true}}\r\n            style={{marginLeft: 20}}\r\n          />\r\n        </Grid>\r\n        <Grid>\r\n          <Divider className={classes.divider} orientation=\"vertical\"/>\r\n        </Grid>\r\n        {this.state.user ?\r\n          <Grid className={classes.navbarAddressContainer}>\r\n            <FormControl className={classes.navbarFormControlAddress}>\r\n              {this.state.ifHomePage ?\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                  L'Adresse\r\n                </InputLabel> : null\r\n              }\r\n              <Select\r\n                disableUnderline\r\n                id=\"outlined-select-currency\"\r\n                value={this.state.selectedAddress || 'main'}\r\n                name={'selectedAddress'}\r\n                onChange={(e) => {\r\n                  this.onChange(e);\r\n                }}\r\n                classes={{root: classes.selectRoot}}\r\n              >\r\n                <MenuItem value={'main'}>\r\n                  Adresse\r\n                  principale, {' ' + this.state.user.billing_address.address} {this.state.user.billing_address.zip_code},{this.state.user.billing_address.city}\r\n                </MenuItem>\r\n                {this.state.user.service_address.map((e, index) => (\r\n                  <MenuItem value={e._id} key={index}>\r\n                    {e.label + ', '} {' ' + e.address},{e.zip_code} {e.city}\r\n                  </MenuItem>\r\n                ))}\r\n                <MenuItem value={'all'}>\r\n                  Partout, Rechercher des Alfred partout\r\n                </MenuItem>\r\n                <MenuItem value={'addAddress'}>\r\n                  <Typography style={{color: '#2FBCD3', cursor: 'pointer'}}>\r\n                    Ajouter une adresse\r\n                  </Typography>\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          :\r\n          <Grid className={this.state.ifHomePage ? classes.navbarAlgoliaContent : classes.navbarAlgoliaContentP}>\r\n            <TextField\r\n              label={this.state.ifHomePage ? SEARCHBAR.labelWhere : false}\r\n              classes={{root: this.state.ifHomePage ? classes.navbarRootTextFieldWhere : classes.navbarRootTextFieldWhereP}}\r\n              InputLabelProps={{ shrink: true }}\r\n              value={this.state.city}\r\n              InputProps={{\r\n                inputComponent: (inputRef) => {\r\n                  return (\r\n                    <AlgoliaPlaces\r\n                      {...inputRef}\r\n                      placeholder={SEARCHBAR.where}\r\n                      className={classes.navbarAlgoliaPlace}\r\n                      options={{\r\n                        appId: 'plKATRG826CP',\r\n                        apiKey: 'dc50194119e4c4736a7c57350e9f32ec',\r\n                        language: 'fr',\r\n                        countries: ['fr'],\r\n                        type: 'city',\r\n                      }}\r\n                      onChange={(suggestion) => this.onChangeCity(suggestion)}\r\n                      onClear={() => this.setState({city: '', gps: null})}\r\n                    />)\r\n                },\r\n                disableUnderline: true\r\n              }}\r\n            />\r\n          </Grid>\r\n        }\r\n        {\r\n          logged === false ?\r\n            <Grid className={classes.navbarDatePickerMain}>\r\n              <Grid>\r\n                <Divider className={classes.divider} orientation=\"vertical\"/>\r\n              </Grid>\r\n              <Grid className={this.state.ifHomePage ? classes.navbarDatePickerContainer : classes.navbarDatePickerContainerP}>\r\n                <TextField\r\n                  label={this.state.ifHomePage ? SEARCHBAR.labelWhen : false}\r\n                  classes={{root: this.state.ifHomePage ? classes.navbarRootTextFieldWhen : classes.navbarRootTextFieldWhenP}}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    inputComponent: (inputRef) => {\r\n                      return (\r\n                        <DatePicker\r\n                          {...inputRef}\r\n                          selected={this.state.dateSelected}\r\n                          onChange={(date) => {\r\n                            this.setState({dateSelected: date});\r\n                            if (date === null) {\r\n                              this.setState({dateSelected: ''});\r\n                            }\r\n                          }}\r\n                          locale='fr'\r\n                          showMonthDropdown\r\n                          dateFormat=\"dd/MM/yyyy\"\r\n                          placeholderText={SEARCHBAR.when}\r\n                          minDate={new Date()}\r\n                          className={this.state.ifHomePage ? classes.inputDatePicker : classes.inputDatePickerP}\r\n                        />)\r\n                    },\r\n                    disableUnderline: true\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid> : null\r\n        }\r\n        <Grid>\r\n          <IconButton\r\n            classes={{root: classes.iconButton}}\r\n            aria-label=\"search\"\r\n            onClick={() => this.findService()}>\r\n            <SearchIcon/>\r\n          </IconButton>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n    )\r\n  };\r\n\r\n  render() {\r\n    const {user, setOpenLogin, setOpenRegister, anchorEl, ifHomePage, modalMobileSearchBarInput, ifSearchPage, modalFilters} = this.state;\r\n    const {classes} = this.props;\r\n\r\n    const logged = user != null\r\n    const modalLogin = () => {\r\n      return (\r\n        <LogIn callRegister={this.handleOpenRegister} login={this.needRefresh}/>\r\n      );\r\n    };\r\n\r\n    const modalRegister = () => {\r\n      return (\r\n        <Register callLogin={this.handleOpenLogin} sendParentData={this.getData}/>\r\n      );\r\n    };\r\n\r\n\r\n        return (\r\n      <Grid className={this.state.ifHomePage ? classes.navbarMainSytle : classes.navbarMainSytleP}>\r\n        <AppBar position={'static'} className={this.state.ifHomePage ? classes.navbarAppBar : classes.navbarAppBarP}>\r\n          <Toolbar classes={{root: this.state.ifHomePage ? classes.navBartoolbar : classes.navBartoolbarP}}>\r\n            <Hidden only={['xs']}>\r\n              <Grid className={this.state.ifHomePage ? classes.navbarTopContainer : classes.navbarTopContainerP}>\r\n                <Grid className={ifHomePage ? classes.navbarLogoContainer : classes.navbarLogoContainerP } onClick={() => Router.push('/')}>\r\n                  <img alt={'logo_myAlfred'} title={'logo_myAlfred'} src={'../../../static/assets/icon/logo.svg'} className={classes.logoMyAlfred}  height={64} style={{filter: 'invert(1)'}}/>\r\n              </Grid>\r\n              {\r\n                ifHomePage ?\r\n                  <Grid className={ifHomePage ? classes.navabarHomepageMenu : classes.navabarHomepageMenuP}>\r\n                    <Tabs value={false} aria-label=\"simple tabs example\">\r\n                      <Link href={'/search?search=1'}>\r\n                        <Tab classes={{root: classes.navbarTabRoot}}\r\n                               label={NAVBAR_MENU.ourServices}/>\r\n                      </Link>\r\n                      { user ?\r\n                        user.is_alfred ?\r\n                          <Link href={`/profile/services?user=${user._id}&indexAccount=1`}>\r\n                            <Tab classes={{root: classes.navbarTabRoot}}\r\n                                   label={NAVBAR_MENU.myServices}/>\r\n                          </Link>\r\n                          :\r\n                          <Link href={'/creaShop/creaShop'}>\r\n                            <Tab classes={{root: classes.navbarTabRoot}}\r\n                                   label={NAVBAR_MENU.registerServices}/>\r\n                          </Link>\r\n                        :\r\n                        <Link onClick={this.handleOpenRegister}>\r\n                          <Tab classes={{root: classes.navbarTabRoot}}\r\n                                 label={NAVBAR_MENU.registerServices}/>\r\n                        </Link>\r\n                      }\r\n                      <Link href={'/contact'}>\r\n                        <Tab classes={{root: classes.navbarTabRoot}}\r\n                               label={NAVBAR_MENU.contactUs}/>\r\n                      </Link>\r\n                    </Tabs>\r\n                  </Grid> : this.searchBarInput(classes)\r\n              }\r\n              {\r\n                logged === true ?\r\n                  <Grid className={ifHomePage ? classes.navbarMenuBurgerContainer : classes.navbarMenuBurgerContainerP}>\r\n                    <IconButton\r\n                      aria-label=\"open drawer\"\r\n                      onClick={this.handleOpenMenuItem}\r\n                    >\r\n                      <MenuIcon style={{color: 'white'}}/>\r\n                    </IconButton>\r\n                    <Menu\r\n                      anchorEl={anchorEl}\r\n                      keepMounted\r\n                      open={Boolean(anchorEl)}\r\n                      onClose={this.handleClosenMenuItem}\r\n                      getContentAnchorEl={null}\r\n                      anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\r\n                      transformOrigin={{vertical: 'top', horizontal: 'center'}}\r\n                    >\r\n                    {user ?\r\n                      <Grid>\r\n                        <MenuItem>Bonjour {user.firstname} !</MenuItem>\r\n                        <Link href={`/profile/about?user=${user._id}`}>\r\n                          <MenuItem>Mon profil</MenuItem>\r\n                        </Link>\r\n                        <Link href={'/account/notifications'}>\r\n                          <MenuItem>Mes paramètres</MenuItem>\r\n                        </Link>\r\n                        { user.is_alfred ?\r\n                          <Link href={`/profile/services?user=${user._id}&indexAccount=1`}>\r\n                            <MenuItem>Mes services</MenuItem>\r\n                          </Link>\r\n                          :\r\n                          <Link href={`/creaShop/creaShop`}>\r\n                            <MenuItem>Proposer mes services</MenuItem>\r\n                          </Link>\r\n                        }\r\n                        <Link href={`/profile/messages?user=${user._id}`}>\r\n                          <MenuItem>Mes messages</MenuItem>\r\n                        </Link>\r\n                        <Link href={`/reservations/reservations`}>\r\n                          <MenuItem>Mes réservations</MenuItem>\r\n                        </Link>\r\n                        {user.is_admin ?\r\n                          <Link href={`/dashboard/home`}>\r\n                            <MenuItem>Dashboard</MenuItem>\r\n                          </Link> : null\r\n                        }\r\n                        <MenuItem onClick={this.logout}>Déconnexion</MenuItem>\r\n                      </Grid>\r\n                      :\r\n                      null\r\n                    }\r\n                    </Menu>\r\n                  </Grid>\r\n                  :\r\n                    <Grid className={ifHomePage ? classes.navbarButtonContainer : classes.navbarButtonContainerP}>\r\n                    <Grid>\r\n                      <Button\r\n                        className={classes.navBarlogIn}\r\n                        onClick={this.handleOpenLogin}>\r\n                        {NAVBAR_MENU.logIn}\r\n                      </Button>\r\n                      <Dialog\r\n                        scroll={'paper'}\r\n                        aria-labelledby=\"scroll-dialog-title\"\r\n                        aria-describedby=\"scroll-dialog-description\"\r\n                        className={classes.navbarModal}\r\n                        open={setOpenLogin}\r\n                        onClose={this.handleCloseLogin}\r\n                        TransitionComponent={Transition}\r\n                        classes={{paperWidthSm: classes.navbarPaperWidth}}\r\n                        disableBackdropClick={true}\r\n                        disableEscapeKeyDown={true}\r\n                      >\r\n                        <DialogTitle id=\"customized-dialog-title\" onClose={this.handleCloseLogin}/>\r\n                        <DialogContent classes={{root: classes.navbarWidthLoginContent}}>\r\n                          <div className={classes.navbarPaper}>\r\n                            {modalLogin()}\r\n                          </div>\r\n                        </DialogContent>\r\n                      </Dialog>\r\n                    </Grid>\r\n                    <Grid className={classes.navbarRegisterContainer}>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        classes={{root: classes.navbarSignIn}}\r\n                        onClick={this.handleOpenRegister}>\r\n                        {NAVBAR_MENU.signIn}\r\n                      </Button>\r\n                      <Dialog\r\n                        scroll={'paper'}\r\n                        aria-labelledby=\"scroll-dialog-title\"\r\n                        aria-describedby=\"scroll-dialog-description\"\r\n                        className={classes.navbarModal}\r\n                        open={setOpenRegister}\r\n                        onClose={this.handleCloseRegister}\r\n                        TransitionComponent={Transition}\r\n                        disableBackdropClick={true}\r\n                        disableEscapeKeyDown={true}\r\n                      >\r\n                        <DialogTitle id=\"customized-dialog-title\" onClose={this.handleCloseRegister}/>\r\n                        <DialogContent dividers={false} className={classes.navbarMuidialogContent}>\r\n                          <div className={classes.navbarPaper}>\r\n                            {modalRegister()}\r\n                          </div>\r\n                        </DialogContent>\r\n                      </Dialog>\r\n                    </Grid>\r\n                  </Grid>\r\n              }\r\n            </Grid>\r\n              {\r\n                ifHomePage ? this.searchBarInput(classes) : null\r\n              }\r\n          </Hidden>\r\n          <Hidden only={['sm', 'md', 'lg', 'xl']}>\r\n            {ifHomePage ? this.mobileSearchBarInput(classes) : null}\r\n            {ifSearchPage ? this.mobileSearchBarInputSearchPage(classes) : null}\r\n          </Hidden>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {modalMobileSearchBarInput ? this.modalMobileSearchBarInput(classes) : null}\r\n        {modalFilters ? this.modalMobileFilter(classes) : null}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AlarmOnIcon from '@material-ui/icons/AlarmOn';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport TextsmsIcon from '@material-ui/icons/Textsms';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport styles from '../../../static/css/components/TrustAndSecurity/TrustAndSecurity';\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nclass TrustAndSecurity extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      items:[\r\n        {\r\n          title:'Réservation en instantané',\r\n          text: 'Avec un délai de prévenance bien sûr ;)',\r\n          icon: <AlarmOnIcon fontSize=\"large\"/>\r\n        },\r\n        {\r\n          title:'Heureux ou remboursé',\r\n          text: 'Ça arrive à tout le monde de se tromper',\r\n          icon: <InsertEmoticonIcon fontSize=\"large\"/>\r\n        },\r\n        {\r\n          title:'Paiement 100% sécurisé',\r\n          text: 'Par la Nasa et le Pentagone',\r\n          icon: <VerifiedUserIcon fontSize=\"large\"/>\r\n        },\r\n        {\r\n          title:'Notre équipe',\r\n          text: 'Toujours à votre écoute ',\r\n          icon: <TextsmsIcon fontSize=\"large\"/>\r\n        }\r\n        ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const{items} = this.state;\r\n    const{classes} = this.props;\r\n    return(\r\n      <Grid className={classes.trustAndSecurityMainContainer} >\r\n        {\r\n          items.map((res, index) => (\r\n            <Grid key={index} className={classes.trustAndSecurityContent}>\r\n              <Hidden only={['xs']}>\r\n                <Grid>\r\n                  {res.icon}\r\n                </Grid>\r\n              </Hidden>\r\n              <Grid style={{marginLeft: '3vh'}}>\r\n                <Grid>\r\n                  <Typography><strong>{res.title}</strong></Typography>\r\n                </Grid>\r\n                <Grid>\r\n                  <Typography>{res.text}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ))\r\n        }\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles (styles) (TrustAndSecurity);\r\n","const MODE='development';\r\n\r\nmodule.exports = { MODE };\r\n","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _Object$getPrototypeOf = require(\"../core-js/object/get-prototype-of\");\n\nvar _Object$setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nfunction _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var _Object$create = require(\"../core-js/object/create\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","var _Object$setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nfunction _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var _Symbol$iterator = require(\"../core-js/symbol/iterator\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","\"use strict\";\n/* global __NEXT_DATA__ */\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inherits\"));\n\nvar __importStar = void 0 && (void 0).__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar url_1 = require(\"url\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\n\nvar router_1 = __importStar(require(\"next/router\"));\n\nvar utils_1 = require(\"next-server/dist/lib/utils\");\n\nfunction isLocal(href) {\n  var url = url_1.parse(href, false, true);\n  var origin = url_1.parse(utils_1.getLocationOrigin(), false, true);\n  return !url.host || url.protocol === origin.protocol && url.host === origin.host;\n}\n\nfunction memoizedFormatUrl(formatFunc) {\n  var lastHref = null;\n  var lastAs = null;\n  var lastResult = null;\n  return function (href, as) {\n    if (href === lastHref && as === lastAs) {\n      return lastResult;\n    }\n\n    var result = formatFunc(href, as);\n    lastHref = href;\n    lastAs = as;\n    lastResult = result;\n    return result;\n  };\n}\n\nfunction formatUrl(url) {\n  return url && typeof url === 'object' ? utils_1.formatWithValidation(url) : url;\n}\n\nvar Link =\n/*#__PURE__*/\nfunction (_react_1$Component) {\n  (0, _inherits2.default)(Link, _react_1$Component);\n\n  function Link() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Link);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Link).apply(this, arguments)); // The function is memoized so that no extra lifecycles are needed\n    // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n\n    _this.formatUrls = memoizedFormatUrl(function (href, asHref) {\n      return {\n        href: formatUrl(href),\n        as: formatUrl(asHref, true)\n      };\n    });\n\n    _this.linkClicked = function (e) {\n      var _e$currentTarget = e.currentTarget,\n          nodeName = _e$currentTarget.nodeName,\n          target = _e$currentTarget.target;\n\n      if (nodeName === 'A' && (target && target !== '_self' || e.metaKey || e.ctrlKey || e.shiftKey || e.nativeEvent && e.nativeEvent.which === 2)) {\n        // ignore click for new tab / new window behavior\n        return;\n      }\n\n      var _this$formatUrls = _this.formatUrls(_this.props.href, _this.props.as),\n          href = _this$formatUrls.href,\n          as = _this$formatUrls.as;\n\n      if (!isLocal(href)) {\n        // ignore click if it's outside our scope\n        return;\n      }\n\n      var pathname = window.location.pathname;\n      href = url_1.resolve(pathname, href);\n      as = as ? url_1.resolve(pathname, as) : href;\n      e.preventDefault(); //  avoid scroll for urls with anchor refs\n\n      var scroll = _this.props.scroll;\n\n      if (scroll == null) {\n        scroll = as.indexOf('#') < 0;\n      } // replace state instead of push if prop is present\n\n\n      router_1.default[_this.props.replace ? 'replace' : 'push'](href, as, {\n        shallow: _this.props.shallow\n      }).then(function (success) {\n        if (!success) return;\n\n        if (scroll) {\n          window.scrollTo(0, 0);\n          document.body.focus();\n        }\n      }).catch(function (err) {\n        if (_this.props.onError) _this.props.onError(err);\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Link, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.prefetch();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if ((0, _stringify.default)(this.props.href) !== (0, _stringify.default)(prevProps.href)) {\n        this.prefetch();\n      }\n    }\n  }, {\n    key: \"prefetch\",\n    value: function prefetch() {\n      if (!this.props.prefetch) return;\n      if (typeof window === 'undefined') return; // Prefetch the JSON page if asked (only in the client)\n\n      var pathname = window.location.pathname;\n\n      var _this$formatUrls2 = this.formatUrls(this.props.href, this.props.as),\n          parsedHref = _this$formatUrls2.href;\n\n      var href = url_1.resolve(pathname, parsedHref);\n      router_1.default.prefetch(href);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var children = this.props.children;\n\n      var _this$formatUrls3 = this.formatUrls(this.props.href, this.props.as),\n          href = _this$formatUrls3.href,\n          as = _this$formatUrls3.as; // Deprecated. Warning shown by propType check. If the childen provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n\n\n      if (typeof children === 'string') {\n        children = react_1.default.createElement(\"a\", null, children);\n      } // This will return the first child, if multiple are provided it will throw an error\n\n\n      var child = react_1.Children.only(children);\n      var props = {\n        onClick: function onClick(e) {\n          if (child.props && typeof child.props.onClick === 'function') {\n            child.props.onClick(e);\n          }\n\n          if (!e.defaultPrevented) {\n            _this2.linkClicked(e);\n          }\n        }\n      }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n      // defined, we specify the current 'href', so that repetition is not needed by the user\n\n      if (this.props.passHref || child.type === 'a' && !('href' in child.props)) {\n        props.href = as || href;\n      } // Add the ending slash to the paths. So, we can serve the\n      // \"<page>/index.html\" directly.\n\n\n      if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n        if (props.href && typeof __NEXT_DATA__ !== 'undefined' && __NEXT_DATA__.nextExport) {\n          props.href = router_1.Router._rewriteUrlForNextExport(props.href);\n        }\n      }\n\n      return react_1.default.cloneElement(child, props);\n    }\n  }]);\n  return Link;\n}(react_1.Component);\n\nif (process.env.NODE_ENV === 'development') {\n  var warn = utils_1.execOnce(console.error); // This module gets removed by webpack.IgnorePlugin\n\n  var exact = require('prop-types-exact');\n\n  Link.propTypes = exact({\n    href: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]).isRequired,\n    as: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]),\n    prefetch: prop_types_1.default.bool,\n    replace: prop_types_1.default.bool,\n    shallow: prop_types_1.default.bool,\n    passHref: prop_types_1.default.bool,\n    scroll: prop_types_1.default.bool,\n    children: prop_types_1.default.oneOfType([prop_types_1.default.element, function (props, propName) {\n      var value = props[propName];\n\n      if (typeof value === 'string') {\n        warn(\"Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>\");\n      }\n\n      return null;\n    }]).isRequired\n  });\n}\n\nexports.default = Link;","module.exports = require('./dist/client/link')\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Layout from '../hoc/Layout/Layout';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from 'next/link';\r\n\r\nconst styles = theme => ({\r\n  hideed: {\r\n    padding: '0 300px',\r\n    marginTop: '10vh',\r\n    marginBottom: '10vh',\r\n    textAlign: 'justify',\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '0 20px',\r\n    },\r\n  },\r\n  a: {\r\n    textDecoration: 'none',\r\n    color: '#84A5E0',\r\n  },\r\n});\r\n\r\nclass CguPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n\r\n\r\n    return (\r\n      <Layout>\r\n        <Grid container className={classes.hideed}>\r\n          <Grid item xs={12} style={{textAlign: 'center', marginBottom: 50}}>\r\n            <h2>Conditions générales d'utilisation et de service de My-Alfred</h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>1 – Préambule</h3>\r\n            <p>Merci d’utiliser la place de marché dénommée My-Alfred (ci-après désignée la « Place de\r\n              marché My-Alfred\r\n              »), spécialisée dans la mise en relation de particuliers et de professionnels, propriété́ de\r\n              la société́\r\n              My-Alfred, société́ par actions simplifiée au capital de 40.000 euros, immatriculée au\r\n              Registre du\r\n              commerce et des sociétés de Rouen sous le numéro SIREN 850 148 867, ayant son siège social\r\n              42 Rampe\r\n              Bouvreuil – 76000 Rouen (ci-après « My-Alfred »).</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>2 – Définitions</h3>\r\n            <p>2.1 Les termes « My-Alfred », « nous », « nos » utilisés dans les présentes Conditions\r\n              générales\r\n              d'utilisation et de service de My-Alfred, renvoient à la société par actions simplifiées\r\n              My-Alfred. </p>\r\n            <p>2.2 La Place de marché My-Alfred est une place de marché en ligne permettant à des\r\n              utilisateurs inscrits,\r\n              ci-après désignés les « Membres Utilisateurs », de consommer des services proposés par des\r\n              utilisateurs\r\n              inscrits ayant constitué une boutique de services, la « Boutique de services », ci-après\r\n              désignés les «\r\n              Membres Alfred ». L’ensemble des Membres Alfred et des Membres Utilisateurs seront\r\n              collectivement désignés\r\n              les « Membres ».</p>\r\n            <p>2.3 Chaque « Boutique de services » est constituée d’une ou plusieurs annonces de services,\r\n              ci-après\r\n              désignées les « Services de la boutique ».\r\n              Chaque Service de la boutique peut être paramétré selon plusieurs critères :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                <br/>• Chaque Service est constitué d’une ou plusieurs prestations proposées dans le\r\n                cadre du service,\r\n                ci-après désignées les « Prestations de service ». La typologie des Prestations de\r\n                services est proposée\r\n                par la Place de marché My-Alfred Un Membre Alfred peut demander un ajout de prestation\r\n                de service à tout\r\n                moment qui donnera lieu à une modération des équipes My-Alfred. Le Membre Alfred fixe\r\n                seul les\r\n                caractéristiques de ses Prestations de service, ses tarifs, son mode de rémunération\r\n                ainsi que des\r\n                éventuelles options liées à ses Prestations de service. Par exemple, une Boutique de\r\n                services pourra\r\n                comprendre des Services de manucure et de coiffure. Le Service de coiffure pourra être\r\n                décomposé en\r\n                Prestations de service telles que la couleur, la coupe, etc.\r\n                <br/>• Pour chaque Prestation de service, le Membre Alfred pourra choisir le matériel\r\n                qu’il souhaite\r\n                mettre à disposition dans le cadre de la réalisation de sa Prestation de service.\r\n                L’ensemble des\r\n                fournitures et du matériel est ci-après désigné le « Matériel ».\r\n                <br/>• Pour chaque Prestation de service, le Membre Alfred pourra personnaliser ses\r\n                conditions de\r\n                réservation, à savoir son minimum de réservation, son délai de prévenance, son périmètre\r\n                d’intervention\r\n                etc. L’ensemble de ces conditions seront désignées les « Conditions de réservation ».\r\n              </div>\r\n            </p>\r\n            <p>2.4 La Place de marché My-Alfred se décline autour d’un site web et d’applications mobiles,\r\n              ci-après\r\n              collectivement désignés les « Interfaces en ligne ». Elle est constituée de différents\r\n              services offerts\r\n              par la Place de marché My-Alfred, ci-après désignés les « Services My-Alfred ». </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>3 – Inscription & acceptation des CGUS</h3>\r\n            <p>3.1 Pour devenir Membre de la Place de marché My-Alfred, les particuliers doivent être des\r\n              personnes\r\n              physiques âgées d’au minimum 18 ans ou, s’ils sont âgés entre 16 et 18 ans, autorisés par\r\n              leurs\r\n              représentants légaux. Il peut également s’agir d’une personne morale dûment constituée et en\r\n              règle selon\r\n              les lois du pays dans lequel la personne morale est établie, ayant la pleine capacité de\r\n              contracter et de\r\n              s’engager aux termes des présentes.\r\n              Vous devez, par ailleurs, accepter les présentes Conditions générales d'utilisation et de\r\n              service. </p>\r\n            <p>3.2 Les Conditions générales d'utilisation et de service de la Place de marché My-Alfred\r\n              (ci-après\r\n              désignées « CGUS ») présentent l’ensemble des droits, obligations et engagements des Membres\r\n              et de\r\n              My-Alfred (ci-après désignés collectivement les « Parties »). En vous inscrivant via les\r\n              Interfaces en\r\n              ligne de My-Alfred, vous acceptez irrévocablement l’intégralité de nos CGUS et vous devez\r\n              vous y\r\n              conformer. Ainsi, les CGUS vous lient juridiquement à My-Alfred. Toute notre équipe se tient\r\n              à votre\r\n              disposition pour répondre à vos questions concernant les CGUS.</p>\r\n            <p>3.3 L’utilisation ou le téléchargement de l’application My-Alfred à partir de l’Apple Store\r\n              d’Apple\r\n              nécessite d’accepter le contrat de licence utilisateur final de l’Application sous licence\r\n              d’Apple.</p>\r\n            <p>3.4 Les CGUS sont applicables dès l’inscription d’un Membre jusqu’à sa résiliation. Pour\r\n              résilier ce\r\n              contrat, les Membres pourront, à tout moment, nous envoyer un email qui entraînera la\r\n              suppression du\r\n              compte du Membre. Les Membres sont également en mesure de supprimer leur compte My-Alfred\r\n              depuis le menu «\r\n              paramètres du compte ».</p>\r\n            <p>3.5 Le Membre qui a la qualité de consommateur dispose, en application des articles L. 222-7\r\n              et suivants\r\n              du Code de la consommation, d’un délai de rétractation de quatorze (14) jours calendaires\r\n              révolus à\r\n              compter de la date de conclusion des CGUS ou de souscription aux Services My-Alfred.\r\n              Le Membre peut exercer son droit de rétractation en utilisant le formulaire en ligne\r\n              accessible depuis le\r\n              bas de page, en cliquant sur nous contacter ou sur simple email adressé à <a\r\n                className={classes.a}\r\n                href=\"mailto:hello@my-alfred.io\">hello@my-alfred.io</a> ou\r\n              par toute autre déclaration de son choix. Dans ce dernier cas, sa déclaration doit être\r\n              dénuée d’ambiguïté\r\n              et exprimer clairement sa volonté de se rétracter. L’exercice du droit de rétractation dans\r\n              le délai visé\r\n              ci-dessus, emporte résolution des CGUS et/ou de la souscription aux Services My-Alfred de\r\n              plein droit.\r\n              L’espace personnel et toutes les informations afférentes au Membre sont alors anonymisés,\r\n              sous réserve des\r\n              stipulations de la politique de protection des données à caractère personnel accessible <a\r\n                className={classes.a} href=\"#\">ici</a>.\r\n              Au titre des présentes, le Membre Utilisateur donne son accord exprès à ce que My-Alfred lui\r\n              fournisse les\r\n              Services My-Alfred (à savoir notamment la mise en relation avec un ou des Membre(s) Alfred)\r\n              avant le terme\r\n              du délai de rétractation. Il en résulte que s’il exerce ensuite son droit de rétraction, il\r\n              sera tenu au\r\n              paiement proportionnel des services effectivement fournis, conformément aux dispositions de\r\n              l’article L.\r\n              222-13 du Code de la consommation.</p>\r\n            <p>3.6 My-Alfred se réserve le droit de résilier sans préavis les présentes CGUS et de priver un\r\n              Membre de\r\n              l’accès à la Place de marché My-Alfred en cas de non-respect de ses stipulations ou de\r\n              non-respect des\r\n              règles, lois, obligations fiscales et sociales applicables au Membre.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>4 – Étendue des Services My-Alfred</h3>\r\n            <p>4.1 La Place de marché My-Alfred permet à des Membres Utilisateurs de consommer des services\r\n              proposés par\r\n              des particuliers ou des professionnels et à des Membres Alfred de proposer leurs services au\r\n              travers de la\r\n              création de leur propre Boutique de services.\r\n              Les Prestations de services proposées par les Membres Alfred doivent être licites. Les\r\n              Membres sont seuls\r\n              décisionnaires de la concrétisation des réservations de Services. My-Alfred n’est ni\r\n              mandataire ni\r\n              prestataire de services et agit seulement en qualité de plateforme de mise en relation.</p>\r\n            <p>4.2 Un Membre Alfred peut publier au sein de sa Boutique de services dédiée :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                <br/>- les Services proposés et les types de Prestations réalisées dans ce Service, les\r\n                tarifs associés\r\n                à chacune des Prestations, un panier minimum de réservation, un périmètre d’intervention\r\n                géographique\r\n                associé à chaque Service ;\r\n                <br/>- ses disponibilités, sur lesquelles il exerce seul un contrôle absolu ;\r\n                <br/>- une présentation de ses Services, de lui-même ainsi que de ses diplômes, son\r\n                expérience ou ses\r\n                certifications.\r\n              </div>\r\n              <br/>Le Membre Alfred est seul responsable de sa Boutique de services et de son contenu.\r\n            </p>\r\n            <p>4.3 La Place de marché My-Alfred propose aux Membres Utilisateurs un moteur de recherche leur\r\n              permettant\r\n              de trouver des Membres Alfred capables de répondre à leurs besoins de services. La Place de\r\n              marché\r\n              My-Alfred simplifie la mise en relation en indiquant les disponibilités des Membres Alfred,\r\n              les\r\n              Prestations couvertes dans les Services demandés, le Matériel mis à disposition par le\r\n              Membre Alfred ainsi\r\n              que l’ensemble de ses Conditions de réservation. Les Membres disposent également d’un profil\r\n              sur lequel\r\n              ils exercent un contrôle exclusif. La Place de marché My-Alfred met ainsi à disposition de\r\n              ses Membres un\r\n              outil numérique afin de simplifier la réservation et le paiement des Prestations de service\r\n              des Membres\r\n              Alfred.</p>\r\n            <p>4.4 Pour ce faire, la Place de marché My-Alfred s’appuie sur le tiers de confiance MangoPay\r\n              pour le\r\n              paiement des Prestations de service. En utilisant ce système de paiement, les Membres\r\n              acceptent les\r\n              conditions de MangoPay disponibles <a className={classes.a} target=\"_blank\"\r\n                                                    href=\"/static/assets/PSP_MANGOPAY_FR.pdf\">ici</a>.\r\n              Pour toutes\r\n              questions et conditions relatives au paiement des Prestations de services, les Membres\r\n              devront se référer\r\n              aux conditions d’utilisation du tiers de confiance MangoPay.\r\n              <br/>S’agissant de la rémunération des Membres Alfred, les Membres Utilisateurs confient un\r\n              mandat\r\n              d’encaissement de la rémunération convenue avec le Membre Alfred au profit de la Place de\r\n              marché\r\n              My-Alfred, qui a en confié l’exécution technique à MangoPay. MangoPay dépose les fonds reçus\r\n              du Membre\r\n              Utilisateur sur un compte dédié avant de virer la somme sur le compte bancaire du Membre\r\n              Alfred, après\r\n              déduction des Frais de services revenant à My-Alfred, conformément à l’article 9 ci-dessous.\r\n              <br/>Les Membres Utilisateurs reconnaissent et acceptent qu’aucune des sommes ainsi perçues\r\n              au nom et pour\r\n              le compte des Membres Alfred n’emporte droit à intérêts. Les Membres acceptent de répondre\r\n              avec diligence\r\n              à toute demande de My-Alfred et, plus particulièrement, de toute autorité administrative ou\r\n              judiciaire\r\n              compétente en particulier en matière de prévention ou de lutte contre le blanchiment.\r\n              Notamment, les\r\n              Membres acceptent de fournir, sur simple demande, tous justificatifs d’adresse ou d’identité\r\n              utile. En\r\n              l’absence de réponse du Membre à ces demandes, My-Alfred pourra prendre toute mesure qui lui\r\n              semblera\r\n              appropriée notamment le gel des sommes versées, la suspension du compte du Membre ou la\r\n              résiliation des\r\n              CGU.\r\n              <br/>My Alfred garantit aux Membres que :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                <br/>- les fonds destinés aux Membres Alfred ne sont détenus à aucun moment par\r\n                My-Alfred,\r\n                <br/>- My Alfred n’a pas accès aux données bancaires des Membres, lesquels restent\r\n                entièrement\r\n                sécurisées chez MangoPay qui n’y a accès que pour les besoins de la demande de règlement\r\n                concernée,\r\n                <br/>- aucune donnée autre que celles nécessaires à l’exécution de la demande de\r\n                règlement n’est\r\n                demandée aux Membres,\r\n                <br/>- les données ne sont ni utilisées ni consultées ni stockées à des fins autres que\r\n                l’opération\r\n                demandée par le Membre Utilisateur.\r\n              </div>\r\n            </p>\r\n            <p>4.5 Critères de classement des Alfred :\r\n              Les 20 premiers Alfred sont présentés au Membre Utilisateur, ce nombre pouvant être\r\n              supérieur si plusieurs\r\n              Alfred proposent le même Service et inférieur si moins de 20 Alfred proposent une prestation\r\n              en rapport\r\n              avec les critères de recherche renseignés.\r\n              Parmi les Alfred, sont présentés en priorité les Alfred répondant aux critères de la\r\n              recherche en termes\r\n              de mot(s) clé, disponibilité(s) et périmètre d’intervention. Parmi les Afred répondant à ces\r\n              critères de\r\n              recherche, seront présentés en priorité, les Alfred les mieux notés, suivis des Alfred ayant\r\n              le plus de\r\n              réservations, puis les Alfred qui acceptent la réservation instantanée, puis les Alfred avec\r\n              le plus\r\n              d'expérience, puis ceux ayant le plus de certifications, puis les Alfred ayant le délai de\r\n              réponse le plus\r\n              rapide et enfin, les Alfred les plus récemment inscrits.</p>\r\n            <p>4.6 My-Alfred n’exerce aucun contrôle sur les Boutiques, Services et Prestations dont seuls\r\n              les Membres\r\n              Alfred sont responsables ; My-Alfred n’en garantit donc pas la qualité, la sécurité et la\r\n              légalité.</p>\r\n            <p>4.7 Dans le cadre de la promotion de la Place de marché My-Alfred et afin de donner plus de\r\n              visibilité\r\n              aux Boutiques et aux Services des Membres Alfred, les Services ainsi que les Boutiques, leur\r\n              contenu et\r\n              tout autre contenu de Membre, rendu public sur la Place de marché My-Alfred, sont\r\n              susceptibles d’être\r\n              publiés sur d’autres sites, d’autres applications, partagés par email ou encore utilisés\r\n              dans le cadre de\r\n              campagnes publicitaires médias ou hors médias.</p>\r\n            <p>4.8 My-Alfred peut procéder à la vérification de l’identité de ses Membres, notamment pour se\r\n              conformer à\r\n              la réglementation fiscale. Vérifier l’identité des Membres sur internet est complexe, c’est\r\n              pourquoi\r\n              My-Alfred décline toute responsabilité au regard de la confirmation de l’identité des\r\n              Membres de la Place\r\n              de marché My-Alfred.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>5 - Obligations, responsabilité et engagements de My-Alfred</h3>\r\n            <p>5.1 My-Alfred met à disposition la Place de marché My-Alfred. A ce titre, My-Alfred ne vend,\r\n              revend,\r\n              fournit ou contrôle ni les Boutiques de services, ni les Services proposés sur la Place de\r\n              marché\r\n              My-Alfred. Les Alfred sont seuls responsables de leur Boutique, des contenus, des Services\r\n              et Prestations\r\n              associés et de leur exécution. Les Membres Alfred s’engagent à réaliser les Services en\r\n              personne, n’étant\r\n              en aucun cas autorisés à sous-traiter la réalisation de leurs Services.\r\n              Ainsi, lorsqu’un Membre Utilisateur et un Membre Alfred procèdent à une réservation, un\r\n              contrat les lie\r\n              sans que My-Alfred n’y soit lié de quelconque manière.</p>\r\n            <p>5.2 Obligation d’information des Membres Alfred professionnels envers les Membres\r\n              Utilisateurs :\r\n              Le Membre Alfred sera tenu de fournir au Membre Utilisateur, à première demande, tout\r\n              élément permettant\r\n              de justifier de sa qualité de professionnel (extrait Kbis, numéro d’immatriculation au\r\n              Registre du\r\n              Commerce et des Sociétés, fiche INSEE, etc.), que le Membre Utilisateur vérifiera.\r\n              Le Membre Alfred garantit en outre être qualifié, compétent et disposer de tous les diplômes\r\n              et/ou titres\r\n              éventuellement requis pour proposer ses Services.\r\n              Le Membre Alfred agissant à titre professionnel doit respecter l'ensemble des règles et\r\n              obligations lui\r\n              incombant à ce titre et plus particulièrement le droit de la consommation (clarté de l'offre\r\n              faite au\r\n              consommateur, information du consommateur, conditions d’annulation, disponibilité des\r\n              Services, droit de\r\n              rétractation du consommateur, facturation et vente à distance, garanties, etc.), du droit\r\n              des sociétés, du\r\n              droit social, du droit fiscal, de la législation relative aux pratiques commerciales\r\n              déloyales, trompeuses\r\n              ou agressives, qu'il affirme parfaitement connaître.</p>\r\n            <p>\r\n              5.3 Obligations d’information des Membres Alfred consommateurs et non professionnels envers\r\n              les Membres\r\n              Utilisateurs :\r\n              Le Membre devra fournir les informations suivantes :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                <br/>- le prix total du Service proposé, y compris le cas échéant, tous les frais\r\n                supplémentaires\r\n                exigibles, sur la base du prix proposé pour les Services dans sa Boutique ;\r\n                <br/>- la possibilité pour le Membre Utilisateur de se rétracter ou non ;\r\n                <br/>- les dispositions du code civil relatives au droit des obligations et de la\r\n                responsabilité civile\r\n                applicables à la relation contractuelle, par l'affichage d'un lien hypertexte.\r\n              </div>\r\n            </p>\r\n            <p>5.4 My-Alfred n’est en aucun cas responsable des contenus, de leur véracité, leur légalité ou\r\n              encore de\r\n              la qualité des Boutiques (et de leurs contenus) proposées par les Membres Alfred. My-Alfred\r\n              décline toute\r\n              responsabilité au regard de l’exactitude de la description des Services, des Membres, des\r\n              notations, des\r\n              commentaires ou, plus largement, au regard de tout contenu publié par les Membres. My-Alfred\r\n              n’approuve\r\n              aucun membre, la mention “Membre vérifé” indiquant que My-Alfred a procédé à une simple\r\n              vérification des\r\n              documents déposés par le Membre et ne constituant en aucun cas une garantie de l’identité\r\n              des Membres ou\r\n              de leur capacité à contracter.</p>\r\n            <p>5.5 My-Alfred n’est aucunement responsable des pannes (internet, télécommunication) dont il\r\n              n’a pas le\r\n              contrôle, conduisant à une accessibilité nulle ou limitée à la Place de marché My-Alfred.\r\n              Dans le cadre de\r\n              la maintenance de ses serveurs ou en cas de capacité limitée de ses serveurs, My-Alfred se\r\n              réserve le\r\n              droit de restreindre l’accessibilité à la Plateforme de façon temporaire afin de garantir la\r\n              sécurité et\r\n              la continuité de ses serveurs ou d’améliorer le fonctionnement de la Place de marché.</p>\r\n            <p>5.6 My-Alfred informera ses Membres des modifications majeures intervenues sur la Place de\r\n              marché.</p>\r\n            <p>5.7 My-Alfred ne pourra être considérée comme dirigeant ou contrôlant aucun Membre Alfred,\r\n              les Alfred\r\n              agissant pour leur propre compte et leur propre profit. En acceptant les présentes CGUS, les\r\n              Membres\r\n              reconnaissent leur totale liberté et capacité de se livrer à d’autres activités et d’exercer\r\n              d’autres\r\n              emplois en dehors de la Place de marché.</p>\r\n            <p>5.8 My-Alfred n’entretient aucune relation contractuelle ni aucun lien capitalistique avec\r\n              aucun des\r\n              Membres et ne perçoit aucune rémunération autre que celles stipulées aux présentes à raison\r\n              de la mise en\r\n              relation entre les Membres.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>6 – Obligation, responsabilité et engagements communs à tous les\r\n              Membres</h3>\r\n            <p>6.1 Les Membres ont le devoir de se conformer à l’ensemble des lois, règlements, obligations\r\n              fiscales et\r\n              sociales et règles en vigueur dans le pays où ils résident ainsi qu’aux présentes CGUS.\r\n              Ainsi, les Membres\r\n              s’interdisent formellement :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                <br/>- de reproduire, utiliser ou stocker les informations et contenus présents sur la\r\n                Place de marché,\r\n                y compris l’ensemble des informations nominatives qui concernent les Membres ou en\r\n                portant atteinte à la\r\n                vie privée des Membres,\r\n                <br/>- d’adopter un comportement discriminant envers un Membre, au regard de son\r\n                origine, son âge, son\r\n                sexe, son état physique ou mental, son orientation sexuelle, etc.\r\n                <br/>- d’utiliser la Place de marché My-Alfred afin de trouver un prestataire sans\r\n                utiliser la Place de\r\n                marché My-Alfred pour procéder à la réservation du service et ce dans le but d’éviter de\r\n                payer les Frais\r\n                de services dus My-Alfred ou pour toute autre raison.\r\n                <br/>- de ternir la réputation de la marque My-Alfred ou de nuire à My-Alfred de quelque\r\n                façon que ce\r\n                soit.\r\n                <br/>- d’utiliser des processus informatiques permettant de récupérer, d’aspirer, de\r\n                collecter,\r\n                d’utiliser et de stocker des informations (y compris l’ensemble des contenus des\r\n                Membres, de My-Alfred,\r\n                les données personnelles, etc.).\r\n                <br/>- d’utiliser les contenus publiés sur My-Alfred à des fins commerciales ou de\r\n                diffuser des messages\r\n                à caractère commercial en dehors de l’objet de la Place de marché My-Alfred. Les Membres\r\n                s’interdisent\r\n                également d’utiliser la Place de marché My-Alfred afin de recruter ou solliciter des\r\n                Membres Alfred dans\r\n                un but autre que la réservation de ses Services au travers de la Place de marché\r\n                y-Alfred (services\r\n                tiers, recrutement, partenariat, etc.)\r\n                <br/>- de détourner, copier, endommager, décoder ou contourner par quelque moyen que ce\r\n                soit la Place de\r\n                marché My-Alfred ou de tenter de nuire à la Place de marché My-Alfred, d’en perturber\r\n                les performances\r\n                et le bon fonctionnement.\r\n                <br/>- de tenter de déchiffrer, décompiler, désassembler la Place de marché My-Alfred\r\n                ainsi que toute\r\n                rétro-ingénierie .\r\n                <br/>- plus généralement, de violer ou porter atteinte aux droits de My-Alfred et à ceux\r\n                des tiers .\r\n              </div>\r\n              <br/>Tout manquement à ces règles est susceptible d'entraîner la fermeture provisoire ou\r\n              définitive du\r\n              compte et de l’accès à tout ou partie de la Place de marché My-Alfred. De plus, dans\r\n              l’objectif de se\r\n              conformer aux lois, règlements, décisions des autorités judiciaires ou administratives ou si\r\n              un Membre\r\n              renseigne son compte, son profil, sa Boutique, ses Services avec des informations erronées,\r\n              frauduleuses,\r\n              inexactes lors de la création de son compte ou ultérieurement, My-Alfred se réserve le droit\r\n              de ne pas\r\n              afficher, de supprimer ou de signaler à un tiers les contenus émanant du Membre concerné, y\r\n              compris ses\r\n              notations, commentaires, recommandations, d’annuler ses prochaines réservations confirmées,\r\n              de supprimer\r\n              temporairement ou définitivement le compte du Membre concerné et, en cas d’infraction grave\r\n              ou répétée, de\r\n              supprimer définitivement son accès à la Place de marché et aux Services My-Alfred.\r\n            </p>\r\n            <p>6.2 My-Alfred n’exerce aucun contrôle et n’est pas partie prenante aux contrats passés sur la\r\n              Place de\r\n              marché My-Alfred. Les Membres s’engagent à respecter les obligations fiscales liées à leur\r\n              statut et sont\r\n              seuls redevables des impôts et taxes liés à leur activité sur la Place de marché My-Alfred.\r\n              Conformément aux dispositions de l’article 242 bis du Code général des impôts, les Membres\r\n              reçoivent lors\r\n              de chacune de leurs transactions sur la Place de marché My-Alfred, une information claire et\r\n              loyale sur\r\n              les obligations sociales et fiscales auxquelles ils doivent se conformer.\r\n              Les Membres sont d’ores et déjà invités à se référer aux informations figurant :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                <br/>- sur <a className={classes.a} target=\"_blank\"\r\n                              href=\"https://www.impots.gouv.fr\">www.impots.gouv.fr</a> concernant leurs\r\n                obligations\r\n                fiscales et plus particulièrement la page <a className={classes.a} target=\"_blank\"\r\n                                                             href=\"https://www.impots.gouv.fr/portail/node/10841\">https://www.impots.gouv.fr/portail/node/10841</a>.\r\n                <br/>- sur <a className={classes.a} target=\"_blank\"\r\n                              href=\"https://www.urssaf.fr\">www.urssaf.fr</a> concernant leurs\r\n                obligations sociales et\r\n                plus particulièrement la page <a className={classes.a} target=\"_blank\"\r\n                                                 href=\"https://www.urssaf.fr/portail/home/espaces-dedies/activites-relevant-de-leconomie.htm\">https://www.urssaf.fr/portail/home/espaces-dedies/activites-relevant-de-leconomie.htm</a>.\r\n              </div>\r\n              <br/>My-Alfred attire l’attention des Membres sur le fait que se présenter comme un\r\n              consommateur ou un\r\n              non-professionnel alors qu’ils agiraient dans le cadre d’une activité professionnelle\r\n              habituelle ou\r\n              régulière est susceptible de constituer une pratique commerciale trompeuse, punissable par\r\n              un\r\n              emprisonnement de 2 ans et une amende de 300.000 euros, le montant de l’amende pouvant être\r\n              porté, de\r\n              manière proportionnée aux avantages tirés du délit, à 10 % du chiffre d’affaires moyen\r\n              annuel ou à 50 %\r\n              des dépenses engagées pour la réalisation de la publicité ou de la pratique constituant ce\r\n              délit, en\r\n              application de l’article L.132-2 du Code de la consommation.\r\n              <br/>Les Membres Alfred pourront retrouver dans la rubrique « performances » les sommes\r\n              perçues à\r\n              l’occasion des activités réalisées au travers de la Place de marché My-Alfred. Les Membres\r\n              s’engagent à\r\n              déclarer loyalement aux services des impôts et aux organismes sociaux les sommes perçues au\r\n              titre des\r\n              activités réalisées sur la Place de marché My-Alfred.\r\n              <br/>Les Membres dégagent en conséquence My-Alfred de toute responsabilité et garantissent\r\n              My-Alfred de\r\n              toutes les conséquences découlant directement ou indirectement du non-respect de leurs\r\n              obligations\r\n              fiscales et sociales.\r\n              <br/>En cas de doute, il est recommandé aux Membres de prendre conseil auprès d’un tiers sur\r\n              les\r\n              obligations sociales et fiscales découlant de leur statut.\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>7 – Obligation, responsabilité et engagements particuliers des\r\n              Membres\r\n              Alfred</h3>\r\n            <p>\r\n              7.1 La Boutique et les Services\r\n              Chaque Membre Alfred qui décide de créer une Boutique de services et des Services associés\r\n              doit fournir\r\n              des informations exactes sur les Services proposés et les conditions de réalisation de ces\r\n              derniers.\r\n              My-Alfred met à la disposition de ses Membres Alfred de nombreuses options de paramétrage\r\n              que le Membre\r\n              Alfred doit compléter pour fournir des informations au plus juste. La description du\r\n              Service, des\r\n              Prestations réalisées au sein de ce service, le Matériel fourni, le panier minimum de\r\n              réservation, le\r\n              délai de prévenance, le périmètre d’intervention, les conditions d’annulation ainsi que les\r\n              disponibilités\r\n              du Membre Alfred sont autant de paramètres de réservation qui permettent aux Membres\r\n              Utilisateurs de\r\n              réserver avec un maximum de transparence. Il appartient aux Membres Alfred de maintenir à\r\n              jour leur\r\n              Boutique, les Services ainsi que leur contenu et leurs disponibilités.\r\n              Dès lors qu’un Service est publié dans la Boutique de services du Membre Alfred, ce dernier\r\n              s’engage à\r\n              concéder de manière non exclusive mais à titre gratuit, au profit de My-Alfred, les droits\r\n              de propriété\r\n              intellectuelle permettant la publication des Services et de la Boutique de l’Alfred.\r\n              Plus précisément, les droits de propriété intellectuelle concernés sont les suivants :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                <br/>• droit de reproduire, faire reproduire ou d’autoriser un tiers à reproduire tout\r\n                ou partie des\r\n                contenus / contributions des Membres Alfred ;\r\n                <br/>• droit de diffuser, représenter, faire représenter ou diffuser ou encore autoriser\r\n                un tiers à\r\n                diffuser ou représenter les contenus et contributions des Membres Alfred ;\r\n                <br/>• droit de diffuser à des fins publicitaires et commerciales les contenus et\r\n                contributions des\r\n                Membres Alfred.\r\n              </div>\r\n              <br/>Ces droits concernent notamment l’ensemble des moyens de communication sur tout support\r\n              (en ligne,\r\n              hors ligne) sous toutes formes.\r\n            </p>\r\n            <p>7.2 Les Membres Alfred fixent le prix de leurs Prestations de services et sont seuls\r\n              responsables des\r\n              tarifs appliqués. Une fois la réservation validée par le Membre Alfred, ce dernier ne pourra\r\n              réclamer un\r\n              prix différent au Membre Utilisateur qui a choisi de réserver son Service.</p>\r\n            <p>7.3 Les Membres Alfred ont la possibilité de publier des photos afin de renforcer\r\n              l’attractivité de leur\r\n              Boutique ou de leurs Services. Les photos publiées par les Membres Alfred doivent refléter\r\n              fidèlement la\r\n              réalité et ne pas avoir pour objectif de duper les Membres Utilisateurs. My-Alfred pourra à\r\n              tout moment\r\n              imposer le nombre d’images, les images, le format, la résolution, etc.</p>\r\n            <p>7.4 Lorsqu’un Membre Alfred décide d’accepter une demande de réservation de l’un ou de\r\n              plusieurs de ses\r\n              Services par un Membre Utilisateur, ces Membres concluent un accord juridiquement\r\n              contraignant. De ce\r\n              fait, le Membre Alfred est tenu d’honorer le(s) Service(s) réservé(s) conformément aux\r\n              conditions et\r\n              caractéristiques du Service tel que décrit dans sa Boutique.\r\n              En acceptant la demande de réservation, les Membres Alfred acceptent de payer les Frais de\r\n              services\r\n              réclamés par My-Alfred ainsi que les éventuelles taxes applicables.\r\n              Les Membres Alfred ont la possibilité d’opter pour l’acceptation automatique des\r\n              réservations des Membres\r\n              Utilisateurs. Dans cette hypothèse, le contrat entre le Membre Alfred et le Membre\r\n              Utilisateur sera formé\r\n              définitivement dès l’étape réservation. »</p>\r\n            <p>7.5 My-Alfred recommande aux Membres Alfred de souscrire une assurance dédiée ou incluant\r\n              leur activité\r\n              résultant de l’utilisation de la Place de marché My-Alfred. En aucun cas, My-Alfred ne\r\n              pourra l’imposer\r\n              aux Membres dans la mesure où My-Alfred ne dirige ni ne contrôle en aucune manière\r\n              l’activité des Membres\r\n              de la Place de marché My-Alfred.</p>\r\n            <p>\r\n              7.6 Les Membres Alfred ont le devoir de se conformer à l’ensemble des lois, règlements,\r\n              obligations\r\n              fiscales et sociales en vigueur dans le pays où ils résident ainsi qu’aux présentes CGUS.\r\n              Ainsi, les\r\n              Membres Alfred s’interdisent formellement :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                <br/>• d’enfreindre l’ensemble de la réglementation, des lois et obligations fiscales et\r\n                sociales en\r\n                vigueur dans leur pays de résidence,\r\n                <br/>• de proposer des services illégaux, contraires aux normes, aux règles, aux bonnes\r\n                mœurs,\r\n                <br/>• d’orienter des contenus de sorte à entraîner la confusion des Membres\r\n                Utilisateurs tant sur le\r\n                contenu de la Prestation que sur la Boutique de services.\r\n              </div>\r\n            </p>\r\n            <p>7.7 Si un Membre Alfred constate qu’un Membre adopte un comportement inapproprié, en ligne ou\r\n              hors ligne,\r\n              ce Membre doit en avertir les autorités compétentes ainsi que My-Alfred afin que les mesures\r\n              appropriées\r\n              puissent être prises.</p>\r\n            <p>7.8 Tout manquement à ces règles est susceptible d'entraîner la suppression de la Boutique,\r\n              la fermeture\r\n              provisoire ou définitive du compte et de l’accès à tout ou partie de la Place de marché\r\n              My-Alfred.\r\n              Outre les manquements aux obligations rappelées à l’article 6.1 ci-dessus, si un Membre\r\n              Alfred ne remplit\r\n              pas les critères de qualité - en étant sujet à des plaintes de la part des Membres\r\n              Utilisateurs au regard\r\n              de ses Prestations ou de son comportement, en recevant des notations et commentaires\r\n              médiocres ou des\r\n              réclamations suite à des annulations de réservations confirmées des Membres Utilisateurs ou\r\n              en ne\r\n              répondant pas aux demandes de réservation, My-Alfred se réserve le droit de ne pas afficher,\r\n              de supprimer\r\n              ou de signaler à un tiers les contenus du Membre concerné, y compris ses notations,\r\n              commentaires,\r\n              recommandations, d’annuler ses prochaines réservations confirmées, de supprimer\r\n              temporairement ou\r\n              définitivement le compte du Membre concerné et, en cas d’infraction grave ou répétée, de\r\n              supprimer\r\n              définitivement son accès à la Place de marché et aux Services My-Alfred. Si My-Alfred\r\n              considère qu’une\r\n              action de blocage temporaire ou définitif à la Place de marché My-Alfred pour l’un de ses\r\n              Membres est\r\n              nécessaire pour assurer la sécurité, la propriété de My-Alfred et de ses Membres ou pour\r\n              prévenir une\r\n              fraude ou une activité illégale, My-Alfred pourra, sans préavis, prendre les mesures\r\n              nécessaires contre ce\r\n              Membre.\r\n              <br/>En cas de suppression définitive du compte de l’un des Membres pour les raisons\r\n              ci-dessus exposées,\r\n              le Membre s’interdit de créer un autre compte ou d’utiliser le compte d’un tiers pour\r\n              accéder à la Place\r\n              de marché.\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>8 – Création d’un compte My-Alfred : accès, usage & sécurité</h3>\r\n            <p>8.1 Pour avoir pleine jouissance des fonctionnalités My-Alfred, les visiteurs doivent créer\r\n              un compte sur\r\n              la Place de marché My-Alfred pour devenir Membre. En devenant Membre, les visiteurs peuvent\r\n              consulter les\r\n              Boutiques de services, réserver des Services, gérer leur réservation, leur compte et leur\r\n              profil. Si vous\r\n              créez un compte Membre pour le compte d’une entité, vous devez certifier que vous être en\r\n              capacité\r\n              d’engager juridiquement ladite entité et d’accepter les CGUS au nom de cette personne\r\n              morale.</p>\r\n            <p>8.2 La création du compte My-Alfred nécessite un email, un prénom, un nom, une adresse\r\n              postale,\r\n              l’indication d’un statut (professionnel ou particulier), un numéro de téléphone et un mot de\r\n              passe.\r\n              L’utilisation de réseaux sociaux tiers est possible pour procéder à l’inscription. Vous\r\n              pouvez dissocier\r\n              votre compte My-Alfred de vos réseaux sociaux à tout moment dans la rubrique « applications\r\n              connectées »\r\n              de votre compte.</p>\r\n            <p>8.3 Les informations saisies lors de la création d’un compte My-Alfred doivent être exactes.\r\n              Elles\r\n              doivent être maintenues à jour par les Membres dans les rubriques « Mon Compte » et « Mon\r\n              profil » de la\r\n              Place de marché My-Alfred.</p>\r\n            <p>8.4 Les Membres sont en mesure de s’assurer de la confidentialité et la sécurité de leur\r\n              compte et des\r\n              identifiants d’accès à ce dernier. Les Membres s’engagent à ne pas divulguer leurs\r\n              informations de\r\n              connexion à des tiers, à s’assurer qu’ils se déconnectent de leur session à chaque\r\n              utilisation de la Place\r\n              de marché My-Alfred et à ne pas créer plusieurs comptes sauf si le Membre y est expressément\r\n              autorisé par\r\n              My-Alfred. Si un Membre apprend que ses identifiants sont perdus, volés ou détournés, il\r\n              doit prévenir\r\n              My-Alfred qui prendra toutes les mesures nécessaires pour sécuriser son compte, étant\r\n              entendu que\r\n              My-Alfred ne pourra être tenu responsable des négligences de ses Membres à l’égard de la\r\n              sécurité de leur\r\n              compte.\r\n              Il est rappelé que les Membres sont seuls responsables de l’activité de leur compte.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>9 – Conditions financières des transactions My-Alfred</h3>\r\n            <p>9.1 My-Alfred facture des Frais de service aux Membres Utilisateurs (appelés « Frais\r\n              d’Utilisateur ») à\r\n              hauteur de 18% du panier total de la transaction chacun, en contrepartie de l’utilisation de\r\n              la Place de\r\n              marché My-Alfred. Les Frais de service applicables (y compris les éventuelles taxes\r\n              applicables) sont\r\n              communiqués au Membre Utilisateur avant qu’il ne réserve un Service. My-Alfred se réserve le\r\n              droit de\r\n              modifier à tout moment les Frais de service et en informera les Membres dans un délai\r\n              raisonnable avant\r\n              l’entrée en vigueur des nouveaux tarifs. Ces modifications de frais n'auront pas d'effet sur\r\n              les\r\n              réservations effectuées avant leur date d’entrée en vigueur.</p>\r\n            <p>9.2 Dès lors qu’une réservation est confirmée, l’intégralité du prix doit être payée par le\r\n              Membre\r\n              Utilisateur au travers de la Place de marché My-Alfred et de son tiers de confiance\r\n              MangoPay. Le prix payé\r\n              est ensuite retenu sur un compte tiers, et ce jusqu’à la bonne exécution de la ou des\r\n              Prestation(s) de\r\n              service réservée (s) par le Membre Utilisateur. Le paiement est libéré dès lors que le\r\n              Membre Utilisateur\r\n              a confirmé la bonne exécution de la Prestation, conformément à la description du Service.\r\n              Dès lors que le\r\n              Service est réalisé et conforme à la description faite par le Membre Alfred dans sa\r\n              Boutique, le Membre\r\n              Utilisateur communiquera un code au Membre Alfred, déclenchant la libération du paiement sur\r\n              son compte\r\n              bancaire dans un délai de 72 heures.\r\n              Les Membres renoncent expressément et irrévocablement à prétendre à un quelconque bénéfice\r\n              lié à\r\n              l’immobilisation des paiements reçus à l’occasion des transactions.</p>\r\n            <p>9.3 Dans le but de protéger les transactions effectuées sur la Place de marché My-Alfred,\r\n              My-Alfred a mis\r\n              en place un système de paiement sécurisé fiable au travers des protocoles SSL et SET. Les\r\n              données\r\n              bancaires sont protégées par cryptage et sont gérées par un tiers de confiance,\r\n              MangoPay.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>10 – Notations et commentaires</h3>\r\n            <p>10.1 Chaque Service réalisé par un Membre Alfred au profit d’un Membre Utilisateur pourra\r\n              donner lieu à\r\n              une notation réciproque publique et un commentaire public. Les Membres sont libres\r\n              d’effectuer une\r\n              notation ou non. La notation (à l’aide d’étoiles) reflète l’opinion des Membres Utilisateurs\r\n              par rapport\r\n              au Service réalisé par le Membre Alfred, son comportement, la qualité de son travail et le\r\n              rapport\r\n              qualité/prix, de même qu’elle reflète l’opinion des Membres Alfred sur le comportement et\r\n              l’accueil du\r\n              Membre Utilisateur. En aucun cas, les notations ne proviendront de My-Alfred et ne reflètent\r\n              en rien\r\n              l’opinion de My-Alfred au sujet de ses Membres.\r\n              Les Membres s’engagent à rédiger des commentaires fondés et justes, reflétant la réalité. En\r\n              aucun cas,\r\n              les commentaires laissés ne peuvent être injurieux, discriminants ou diffamatoires.\r\n              Les commentaires n’étant pas soumis à une vérification, ces derniers peuvent s’avérer\r\n              infondés, injustes\r\n              ou faux. Les Membres peuvent faire une demande de modération auprès de l’équipe My-Alfred\r\n              s’ils ont la\r\n              preuve du caractère infondé de la notation ou du commentaire. La responsabilité de My-Alfred\r\n              ne peut être\r\n              recherchée que dans l’hypothèse où nous avons connaissance du caractère illicite d’un\r\n              commentaire et\r\n              n’avons pas promptement réagi.</p>\r\n            <p>10.2 Les commentaires et notations sont publics sur la Place de marché My-Alfred. Ces\r\n              commentaires et\r\n              notations permettent aux Membres Utilisateurs et aux Membres Alfred d'accroître la confiance\r\n              dans l’accord\r\n              qu’ils concrétisent par une réservation.</p>\r\n            <p>10.3 La note associée au profil d’un Membre correspond à la moyenne de l’ensemble des\r\n              évaluations du\r\n              Membre concerné depuis son inscription sur la Place de marché.</p>\r\n            <p>10.4 Les commentaires sont classés par ordre chronologique du plus récent au plus ancien. Le\r\n              délai de\r\n              publication d’un commentaire est immédiat, il sera accessible tant que le Membre aura un\r\n              compte ouvert sur\r\n              la Place de marché. S’il se désinscrit ou si son compte est résilié, ses commentaires seront\r\n              supprimés.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>11 – Gestion des réservations, annulation et remboursement</h3>\r\n            <p>11.1 Les Membres sont seuls responsables des modifications qui sont susceptibles d’intervenir\r\n              dans la\r\n              réservation en cours ou confirmée sur la Place de marché My-Alfred.\r\n              Les Membres peuvent s’accorder sur un nouveau prix et modifier leur réservation sur la\r\n              Prestation à venir\r\n              à la seule condition que les deux parties - Membre Alfred et Membre Utilisateur - soient\r\n              d’accord sur ces\r\n              modifications de la réservation.</p>\r\n            <p>11.2 Les Membres Utilisateurs sont susceptibles de procéder à l’annulation de leur\r\n              réservation à tout\r\n              moment en prenant garde aux conditions d’annulation définies par le Membre Alfred auprès de\r\n              qui ils ont\r\n              effectué leur réservation. My-Alfred n’offre aucune garantie de quelque nature que ce soit\r\n              en cas\r\n              d’annulation pour quelque raison que ce soit.</p>\r\n            <p>11.3 Dans l’hypothèse où, un Membre Alfred serait amené à annuler une réservation confirmée\r\n              auprès d’un\r\n              Membre Utilisateur, ce dernier serait remboursé de la totalité des frais engagés sur la\r\n              Place de marché\r\n              My-Alfred dans le cadre de la réservation concernée, en ce compris les Frais de services. Si\r\n              le Membre\r\n              Utilisateur le souhaite, My-Alfred pourra créditer la somme des frais engagés sur son compte\r\n              afin de\r\n              pouvoir procéder à une nouvelle réservation.\r\n              Le Membre Alfred n’ayant pas choisi la réservation automatique, qui annule une réservation\r\n              plus de 7 jours\r\n              avant la date d’exécution convenue avec le Membre Utilisateur supportera une pénalité\r\n              forfaitaire de 10€,\r\n              portée à 20€ si l’annulation intervient 7 jours ou moins avant la date d’exécution du\r\n              Service convenue\r\n              dans la réservation.\r\n              Dans cette hypothèse, le Membre Utilisateur sera en mesure de publier un commentaire sur la\r\n              Boutique du\r\n              Membre Alfred indiquant que ce dernier a annulé sa réservation.</p>\r\n            <p>11.4 My-Alfred se réserve le droit d’annuler une réservation confirmée pour le compte d’un\r\n              Membre et\r\n              d’effectuer les remboursements adéquats en cas de force majeure d’un des Membres. My-Alfred\r\n              informera les\r\n              Membres de l’annulation de la réservation et des raisons de l’annulation sauf si elles\r\n              doivent rester\r\n              confidentielles.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>12 – Dommages</h3>\r\n            <p>12.1 Dans le cadre de la réalisation d’un Service auprès d’un Membre Utilisateur, le Membre\r\n              Alfred est\r\n              tenu de ne pas causer de dommages à la personne du Membre Utilisateur ni à l’ensemble de ses\r\n              effets et\r\n              biens personnels. Les Membres Alfred sont responsables de l’ensemble de leurs actions et\r\n              omissions dans le\r\n              cadre de l’exécution du Service.</p>\r\n            <p>12.2 Si un Membre Utilisateur apporte la preuve que l’intervention d’un Membre Alfred a causé\r\n              des\r\n              dommages à sa personne, à ses effets ou biens personnels, le Membre Utilisateur pourra\r\n              demander la\r\n              réparation du préjudice subi auprès du Membre Alfred.\r\n              My-Alfred peut agir en tant que médiateur mais ne pourra en aucun cas être tenu responsable\r\n              de quelconques\r\n              dommages causés à un Membre dans le cadre d’une Prestation.\r\n              My-Alfred se réserve le droit de rembourser le Membre Utilisateur en cas de dommages subis\r\n              ou de mauvaise\r\n              exécution du Service.\r\n              En cas de dommages, le Membre Utilisateur s’engage à contacter le service client My-Alfred\r\n              afin d’exposer\r\n              la situation.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>13 – Obligations fiscales</h3>\r\n            <p>13.1 Les Membres sont tenus de remplir leurs obligations en termes de déclaration, de\r\n              collecte, de\r\n              versement ou d’inclusion de toute TVA ou autre taxe applicable.</p>\r\n            <p>13.2 Des réglementations fiscales peuvent imposer à My-Alfred un recueil des données\r\n              complémentaires ou\r\n              une vérification des données concernant ses Membres ou appliquer un certain nombre de taxes\r\n              sur les\r\n              versements opérés par la Place de marché My-Alfred ou son tiers de confiance.\r\n              <br/>C’est notamment le cas pour les Membres Alfred lorsque certains seuils sont dépassés\r\n              cf. <a\r\n                className={classes.a} target=\"_blank\"\r\n                href=\"https://bofip.impots.gouv.fr/bofip/11791-PGP.html?identifiant=BOI-BIC-DECLA-30-70-40-20-20190315\">https://bofip.impots.gouv.fr/bofip/11791-PGP.html?identifiant=BOI-BIC-DECLA-30-70-40-20-20190315</a>\r\n              <br/>Les Membres Alfred s’engagent à nous communiquer à première demande et sans délai les\r\n              éléments\r\n              demandées.\r\n              <br/>Si un Membre refuse de fournir ses informations / documents fiscaux visant à nous\r\n              acquitter de nos\r\n              obligations, My-Alfred se réserve le droit de suspendre ou de clôturer le compte du Membre\r\n              concerné et/ ou\r\n              retenir les versements conformément à la législation jusqu’à résolution du litige.\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>14. Limitation de responsabilité – Absence de garantie de\r\n              My-Alfred</h3>\r\n            <p>\r\n              My-Alfred s’engage à mettre en œuvre tous les moyens nécessaires afin d’assurer au mieux\r\n              l’accès aux\r\n              Services My-Alfred et plus particulièrement à la Place de marché.\r\n              <br/>De manière générale, le Membre accepte et reconnaît que son utilisation de la Place de\r\n              Marché, y\r\n              compris les informations qu’il diffuse, est faite sous son unique et entière responsabilité.\r\n              <br/>En utilisant la Place de marché, le Membre s’engage à ne pas agir de manière\r\n              dommageable ou ayant\r\n              pour effet de causer un préjudice à l’image, aux intérêts ou aux droits de My-Alfred,\r\n              d’endommager ou de\r\n              rendre inopérante la Place de marché.\r\n              <br/>My-Alfred ne saurait être tenue pour responsable et ne saurait être tenue d’indemniser\r\n              un Membre du\r\n              préjudice direct ou indirect qui résulterait de l’indisponibilité de la Place de marché.\r\n              My-Alfred ne\r\n              saurait à cet égard être tenue pour responsable de tout dommage résultant de la perte, de\r\n              l’altération ou\r\n              de toute utilisation frauduleuse de données, de la transmission accidentelle de virus ou\r\n              autres éléments\r\n              nuisibles, de l’attitude ou comportement d’un tiers. Elle n’encourt aucune responsabilité du\r\n              fait (i) de\r\n              l’impossibilité d’accéder à la Place de marché, (ii) d’un mauvais usage de la Place de\r\n              marché (iii) de la\r\n              saturation du réseau internet, (iv) d’éventuels dysfonctionnements sur les terminaux mobiles\r\n              utilisés par\r\n              les Membres, (v) en cas de force majeure ou de fait indépendant de sa volonté.\r\n              <br/>My-Alfred est responsable de la fourniture des Services My-Alfred, laquelle constitue\r\n              une obligation\r\n              de moyens. La responsabilité de My-Alfred se limite en ce sens aux seuls dommages directs\r\n              subis par le\r\n              Membre à raison de l’utilisation des Services My-Alfred, à l’exclusion de tout autre.\r\n              My-Alfred ne peut en\r\n              aucun cas être tenue responsable des dommages indirects causés à un Membre et notamment de\r\n              toute perte de\r\n              clientèle, perte de profit, manque à gagner, atteinte à l’image.\r\n              <br/>La charge de la preuve du dommage revient au Membre et toute demande de\r\n              dommage-intérêts du Membre\r\n              doit être initiée auprès de My-Alfred dans un délai de douze (12) mois à compter du fait\r\n              générateur à\r\n              l’origine du dommage, sous réserve des dispositions d’ordre public édictées par le Code de\r\n              la\r\n              consommation.\r\n              <br/>Le Membre est informé qu’en cas de panne, de maintenance, ou de mise à jour des\r\n              systèmes, l’accès à\r\n              son compte personnel pourra être suspendu temporairement. My-Alfred s’efforce de prévenir\r\n              les Membres et\r\n              fait ses meilleurs efforts en vue de rétablir l’accès aux Services My-Alfred dès que\r\n              possible.\r\n              <br/>La responsabilisé de My-Alfred n’est pas engagée lorsque l’impossibilité de fournir\r\n              correctement les\r\n              Services My-Alfred est due à un cas de force majeure (telle que définie par l’article 1218\r\n              du Code civil).\r\n              My-Alfred décline toute responsabilité dans le cas où les Services My-Alfred ne répondraient\r\n              pas aux\r\n              exigences et besoins spécifiques des Membres.\r\n              <br/>Ni My-Alfred, ni, le cas échéant, ses hébergeurs et fournisseurs de technologies, ne\r\n              pourront être\r\n              tenus responsables en cas de dommage subi par le Membre et résultant de :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                – une faute du Membre ;\r\n                – un non-respect par le Membre des CGUS ;\r\n                – l’accès par un tiers à ses données d’identification, sur autorisation du Membre ;\r\n                – l’usage frauduleux ou abusif des Services My-Alfred par le Membre ;\r\n                – une compromission par le Membre de la confidentialité de ses données d’identification\r\n                ;\r\n                – l’interruption ou la défaillance des Services My-Alfred suite à des dysfonctionnements\r\n                du réseau\r\n                Internet, du réseau des télécommunications ou du réseau informatique ;\r\n                – toute inexactitude ou non-conformité des informations, produits, et autres contenus,\r\n                incluant\r\n                notamment les propres données renseignées par le Membre, concernant son profil, ses\r\n                Services,\r\n                n’incombant pas à My-Alfred ; et/ou\r\n                – tout usage que le Membre ferait des informations mises à sa disposition par My-Alfred\r\n                relatives aux\r\n                Services, le Membre restant seul responsable de ses décisions et de ses obligations\r\n                sociales et fiscales\r\n                (notamment les dispositions du Code de travail, du Code de la sécurité sociale, du Code\r\n                général des\r\n                impôts et des conventions collectives applicables).\r\n              </div>\r\n              <br/>L’assurance de responsabilité civile professionnelle de My-Alfred est souscrite auprès\r\n              de Générali, 2\r\n              Rue Pillet-Will, 75009 Paris.\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>15 – Suppression du compte</h3>\r\n            <p>Les Membres sont libres à tout moment de demander la suppression de leur compte depuis leur\r\n              espace Mon\r\n              compte.\r\n              La suppression du compte est définitive.\r\n              Si le Membre est un Membre Alfred, la suppression du compte implique l’annulation de\r\n              l’ensemble des\r\n              réservations acceptées à venir et un remboursement sur le compte du Membre Utilisateur.\r\n              Si le Membre est un Membre Utilisateur, la suppression du compte implique l’annulation de\r\n              l’ensemble des\r\n              réservations acceptées à venir, moyennant - en fonction des conditions d’annulation du ou\r\n              des Membres\r\n              Alfred impacté(s) par cette annulation - des frais d’annulation. </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>16 – Données personnelles et respect de la vie privée</h3>\r\n            <p>16.1 Tous les Membres peuvent choisir ce qu’ils souhaitent rendre public sur la Place de\r\n              marché\r\n              My-Alfred, à l’exception du mot de passe qui restera confidentiel en toutes circonstances et\r\n              de son prénom\r\n              qui sera public en toutes circonstances. En revanche, dès lors qu’une réservation a été\r\n              confirmée par un\r\n              Membre Alfred et un Membre Utilisateur, les coordonnées des Membres sont réciproquement\r\n              communiquées à\r\n              l’un et à l’autre (nom, prénom, adresse postale, adresse email et numéro de téléphone).</p>\r\n            <p>16.2 Les mentions légales ainsi que la <Link href=\"/footer/privacypolicy\"><a\r\n              className={classes.a}>“Politique\r\n              de Respect de la Vie Privée”</a></Link> font partie intégrante des obligations et conditions\r\n              répertoriées\r\n              dans les présentes CGUS. La Place de marché My-Alfred ayant recours à l’utilisation des\r\n              cookies, vous\r\n              pouvez à tout moment consulter la « Politique de Gestion des Cookies » et vous y opposer.\r\n              Attention,\r\n              l’opposition à l’utilisation des cookies est susceptible d’entraîner le dysfonctionnement de\r\n              certaines\r\n              fonctionnalités de la Place de marché My-Alfred.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>17 – Indépendance des parties</h3>\r\n            <p>My-Alfred et ses Membres sont des parties totalement indépendantes, agissant chacun en leur\r\n              nom et pour\r\n              leur propre compte. Ni l’utilisation de la Place de marché My-Alfred, ni les présentes CGUS\r\n              ne peuvent\r\n              impliquer un quelconque lien de subordination, de mandat, de représentation, d’entreprise\r\n              commune ou de\r\n              relation employeur/salarié ou franchiseur/franchisé.</p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>18 – Convention de preuve</h3>\r\n            <p>\r\n              Les données enregistrées numériquement sur les systèmes d’information que My-Alfred met en\r\n              œuvre dans le\r\n              cadre de la Place de marché feront foi entre les Parties, notamment quant à l’existence, au\r\n              contenu, à\r\n              l’imputabilité ou à la date d’un téléversement ou d’un téléchargement.\r\n              <br/>Ces mêmes données enregistrées numériquement l’emporteront également sur toutes autres\r\n              données\r\n              numériques ou tirages papier du Membre ou de ses propres systèmes d’information ainsi que\r\n              sur tout autre\r\n              mode de preuve indirecte, tel que le témoignage.\r\n              <br/>En conséquence, et sauf à pouvoir rapporter en justice la preuve que les systèmes\r\n              d’information et\r\n              les données enregistrées numériquement concernées ont pu être altérées ou faussées de sorte\r\n              à retirer\r\n              toute foi aux éléments de preuve fournis, le Membre ne peut pas contester les éléments de\r\n              preuve numérique\r\n              communiqués par My-Alfred.\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>19 – Droit applicable et juridiction compétente</h3>\r\n            <p>19.1 Les présentes CGUS sont soumises au droit français. En fonction de leur lieu de\r\n              résidence, des\r\n              règlementations, normes, lois peuvent s’imposer aux Membres. Les Membres sont tenus de\r\n              respecter la\r\n              législation en vigueur dans leur pays de résidence.</p>\r\n            <p>\r\n              19.2 Sous réserve du paragraphe ci-dessous, toutes contestations qui pourraient s’élever\r\n              entre les Membres\r\n              et My-Alfred dans le cadre de l’exécution ou l'interprétation des présentes CGUS seront\r\n              soumises au\r\n              tribunal dans le ressort duquel le siège social de My-Alfred est établi.\r\n              <br/>S’agissant des Membres ayant la qualité de consommateurs, ceux-ci doivent s’adresser en\r\n              priorité au\r\n              service clientèle de My-Alfred par courrier électronique hello@my-alfred.io ou postal à MY\r\n              ALFRED 42 Rampe\r\n              Bouvreuil – 76000 Rouen.\r\n              <br/>Afin de faciliter le traitement rapide et efficace de votre réclamation écrite, nous\r\n              vous\r\n              recommandons d’intituler votre courriel ou courrier postal « Réclamation préalable à toute\r\n              saisine du\r\n              médiateur » et de communiquer à notre service clientèle les informations suivantes :\r\n              <div style={{paddingLeft: '15px'}}>\r\n                <br/>- vos coordonnées : civilité, prénom, nom, n° et nom de rue, code postal, ville,\r\n                département,\r\n                adresse électronique, le numéro de téléphone auquel vous êtes joignable et vos horaires\r\n                de\r\n                disponibilité,\r\n                <br/>- le motif de la réclamation,\r\n                <br/>- accompagné de tous les documents utiles à la compréhension de votre réclamation.\r\n              </div>\r\n              <br/>En cas d’échec de la demande de réclamation auprès du service clientèle ou en l’absence\r\n              de réponse de\r\n              ce service dans un délai de 30 jours, le client peut soumettre gratuitement le différend\r\n              l’opposant à\r\n              My-Alfred à un médiateur.\r\n              <br/>Il contactera alors l’Association Nationale des Médiateurs (ANM) soit par courrier en\r\n              écrivant au 62\r\n              rue Tiquetonne 75002 PARIS soit par e-mail en remplissant le formulaire de saisine en ligne\r\n              à l’adresse\r\n              suivante www.anm-conso.com.\r\n              <br/>Les parties au litige restent libres d’accepter ou de refuser le recours à la médiation\r\n              ainsi que, en\r\n              cas de recours à la médiation, d’accepter ou de refuser la solution proposée par le\r\n              médiateur.\r\n              <br/>My-Alfred informe également le client consommateur de l’existence d’une plateforme de\r\n              Règlement en\r\n              Ligne des Litiges (« RLL ») à laquelle il peut recourir ; elle est accessible depuis le lien\r\n              suivant <a\r\n              className={classes.a} target=\"_blank\"\r\n              href=\"http://ec.europa.eu/consumers/odr/\">http://ec.europa.eu/consumers/odr/</a>. Le site\r\n              internet\r\n              suivant <a className={classes.a} target=\"_blank\"\r\n                         href=\"www.economie.gouv.fr/mediation-conso\">www.economie.gouv.fr/mediation-conso</a> comporte\r\n              également toutes informations utiles en cas de litige transfrontalier.\r\n            </p>\r\n            <p>19.3 Toute contestation entre Membres à l’occasion de l’exécution ou l’interprétation des\r\n              CGUS ou dans le\r\n              cadre de l’exécution d’une réservation confirmée sera soumise à la compétence exclusive des\r\n              juridictions\r\n              selon la loi applicable. </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3 style={{color: '#84A5E0'}}>20 – Stipulations générales</h3>\r\n            <p>20.1 Dans l’hypothèse où une ou plusieurs des stipulations des présentes serai(en)t\r\n              invalidée(s) ou\r\n              déclarée(s) inapplicable(s) ou nulle(s), seule(s) la ou lesdites condition(s) serai(en)t\r\n              annulée(s) sans\r\n              que cette annulation ne puisse affecter la validité et l’applicabilité des conditions\r\n              restantes. Les\r\n              Parties s’efforceront de remédier aux clauses inapplicables dans le même esprit que celui\r\n              qui a présidé à\r\n              la conclusion de leurs accords.</p>\r\n            <p>20.4 Les présentes CGUS, les droits et obligations des Membres ne pourront être cédés,\r\n              délégués ou\r\n              transférés sans l’accord préalable de My-Alfred.</p>\r\n            <p>20.5 L’ensemble des notifications et communications autorisées ou requises dans les présentes\r\n              CGUS à\r\n              destination des Membres de la Place de marché My-Alfred, seront effectuées électroniquement\r\n              au travers\r\n              d’emails, de notifications ou de services de messagerie. </p>\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Footer/>*/}\r\n\r\n      </Layout>\r\n    );\r\n\r\n  };\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CguPage);\r\n","const isEmpty = value =>\r\n\r\n  value === undefined ||\r\n  value === null ||\r\n  value === '' ||\r\n  value.length === 0 ||\r\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n  (typeof value === 'string' && value.trim().length === 0);\r\n\r\nmodule.exports = isEmpty;\r\n\r\n\r\n","export default theme => ({\r\n  footerMainStyle:{\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  footerMainContainer:{\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    [theme.breakpoints.down('xs')]:{\r\n      justifyContent: 'start'\r\n    }\r\n  },\r\n  footerSection:{\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  footerSocialSection:{\r\n    display:'flex',\r\n    flexDirection: 'column',\r\n    width: '90%',\r\n    marginTop: '3%',\r\n    alignItems: 'end',\r\n    [theme.breakpoints.down('xs')]:{\r\n      alignItems: 'start'\r\n    }\r\n\r\n  },\r\n  footerDividerContainer:{\r\n    display: 'flex',\r\n    marginTop:'3vh',\r\n    marginBottom: '3vh',\r\n    justifyContent: 'center'\r\n  },\r\n  footerDivider:{\r\n    height: 1,\r\n    width: '80%'\r\n  },\r\n  footerTitileSection:{\r\n    fontFamily: theme.typography.sectionTitle.fontFamily\r\n  },\r\n  footerLink:{\r\n    fontFamily: theme.typography.text.fontFamily\r\n  },\r\n  footerBrandContainer:{\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]:{\r\n      marginBottom: '12vh',\r\n      marginTop: '5vh',\r\n    }\r\n  },\r\n  footerBrandStyle:{\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '80%',\r\n    [theme.breakpoints.down('xs')]:{\r\n      width: 'inherit',\r\n      flexDirection: 'row',\r\n    },\r\n    [theme.breakpoints.down('lg')]:{\r\n      width: '100%'\r\n    }\r\n  },\r\n  footerRgpdButtons:{\r\n    display:'flex',\r\n    flexDirection: 'row',\r\n    width: '30%',\r\n    justifyContent : 'space-between',\r\n    [theme.breakpoints.down('xs')]:{\r\n      width: '100%',\r\n      flexDirection: 'column',\r\n      marginBottom: '15vh',\r\n      alignItems: 'end',\r\n      textAlign: 'end'\r\n    },\r\n    [theme.breakpoints.down('lg')]:{\r\n      width: '50%'\r\n    }\r\n  },\r\n  footerLawContainer:{\r\n    [theme.breakpoints.down('lg')]:{\r\n      width: '50%'\r\n    }\r\n  },\r\n  footerSocialContainer:{\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  footerLinkInfoContainer:{\r\n    [theme.breakpoints.down('xs')]:{\r\n      marginTop: '2vh',\r\n      marginBottom: '2vh'\r\n    }\r\n  }\r\n})\r\n","export default theme => ({\r\n  infoBarMainStyle:{\r\n    backgroundColor: theme.palette.backgroundGrey.main,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  infoBarLinkContainer:{\r\n    paddingTop: theme.padding.infoBar.paddingTop,\r\n    paddingBottom: theme.padding.infoBar.paddingBottom,\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    [theme.breakpoints.down('xs')]:{\r\n      flexDirection: 'column',\r\n      textAlign: 'center'\r\n    }\r\n  },\r\n  infoBarColorText:{\r\n    color: theme.palette.lightBlack.main,\r\n    fontSize: theme.typography.infoBar.fontSize,\r\n    lineHeight: theme.typography.infoBar.lineHeight,\r\n    fontFamily: theme.typography.infoBar.fontFamily,\r\n    margin: 0\r\n  },\r\n  infoBarPicsContainer:{\r\n    width: 15,\r\n    height: 15,\r\n    marginRight: 5\r\n  },\r\n  showmoreContainer:{\r\n    marginLeft: 5,\r\n  },\r\n  shomoreLink:{\r\n    color: theme.palette.link.main,\r\n    fontSize: theme.typography.infoBar.fontSize,\r\n    lineHeight: theme.typography.infoBar.lineHeight,\r\n    fontFamily: theme.typography.infoBar.fontFamily,\r\n    fontWeight: theme.typography.infoBar.fontWeight\r\n  },\r\n})\r\n","export default theme => ({\r\n  navbarSearchContainer:{\r\n    width: '50%',\r\n    marginTop: '5vh',\r\n    [theme.breakpoints.down('md')]:{\r\n      width: '70%',\r\n    },\r\n    [theme.breakpoints.down('sm')]:{\r\n      width: '90%',\r\n    },\r\n    [theme.breakpoints.down('xs')]:{\r\n      cursor: 'pointer',\r\n      width: '100%',\r\n    },\r\n  },\r\n  fitlerMenuLogged:{\r\n    overflow: 'inherit',\r\n    textOverflow: 'inherit',\r\n    whiteSpace: 'inherit'\r\n  },\r\n  navbarSearch: {\r\n    padding: 14,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    borderRadius: theme.border.button.borderRadius,\r\n    boxShadow: 'rgba(0, 0, 0, 0.15) 0px 16px 32px, rgba(0, 0, 0, 0.1) 0px 3px 8px'\r\n  },\r\n  navbarTextFieldService:{\r\n    flex: 1,\r\n  },\r\n  navbarRootTextField: {\r\n    width: '100%',\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n    \"& .MuiFormLabel-root\": {\r\n      fontWeight: 'bold',\r\n      '&:focus':{\r\n        color: theme.palette.primary.main\r\n      }\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color: theme.palette.primary.main\r\n    },\r\n    '& .MuiInputBase-input::placeholder':{\r\n      opacity: '0.5'\r\n    },\r\n    '& div':{\r\n      width:'100%'\r\n    }\r\n  },\r\n  iconButton: {\r\n    padding: 12,\r\n    backgroundColor: theme.palette.yellow.main,\r\n    color: theme.palette.white.main,\r\n  },\r\n  navbarCloseButton:{\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n  },\r\n  navbarAddressContainer: {\r\n    marginLeft: 20,\r\n    width: '50%'\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n  navbarFormControlAddress: {\r\n    width: '100%'\r\n  },\r\n  navbarAlgoliaContent:{\r\n    flex:1,\r\n    marginLeft: 20,\r\n    '& .ap-input-icon':{\r\n      display: 'none',\r\n    }\r\n  },\r\n  navbarRootTextFieldWhere:{\r\n    width: '100%',\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]:{\r\n      width: '90%',\r\n      borderRadius: 4\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      '&:focus':{\r\n        color: theme.palette.primary.main\r\n      }\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color: theme.palette.primary.main\r\n    },\r\n    '& .MuiInputBase-input::placeholder':{\r\n      opacity: '0.5'\r\n    },\r\n    '& div':{\r\n      width:'100%'\r\n    }\r\n  },\r\n  buttonIgnore:{\r\n    textTransform: 'initial',\r\n    color: 'rgba(39,37,37,35%)'\r\n  },\r\n  navbarAlgoliaPlace:{\r\n    border: 'inherit',\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    color: theme.palette.placeHolder.main,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n    padding: '6px 0 7px',\r\n    height: 'auto',\r\n    [theme.breakpoints.down('xs')]:{\r\n      padding: '18.5px 14px',\r\n    }\r\n  },\r\n  navbarDatePickerMain:{\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  navbarDatePickerContainer:{\r\n    flex: 1,\r\n    marginLeft: 20\r\n  },\r\n  navbarRootTextFieldWhen:{\r\n    width: '100%',\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n    \"& .MuiFormLabel-root\": {\r\n      fontWeight: 'bold',\r\n      '&:focus':{\r\n        color: theme.palette.primary.main\r\n      }\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color: theme.palette.primary.main\r\n    },\r\n    '& .MuiInputBase-input::placeholder':{\r\n      opacity: '0.5'\r\n    }\r\n  },\r\n  navbarMainSytle:{\r\n    alignItems: 'center',\r\n    width: '80%',\r\n    display: 'flex',\r\n    [theme.breakpoints.down('md')]:{\r\n      width: '95%'\r\n    },\r\n  },\r\n  navbarAppBar:{\r\n    backgroundColor:'transparent',\r\n    boxShadow: 'inherit'\r\n  },\r\n\r\n  navBartoolbar:{\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: 0\r\n  },\r\n  navbarTopContainer:{\r\n    width: '90%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]:{\r\n      width: '100%'\r\n    }\r\n  },\r\n\r\n  navbarLogoContainer:{\r\n    width: '20%',\r\n    cursor: 'pointer',\r\n    [theme.breakpoints.down('md')]:{\r\n      width: '10%'\r\n    }\r\n  },\r\n  navbarLogoContainerP:{\r\n    width: '100%',\r\n    cursor: 'pointer',\r\n    [theme.breakpoints.down('md')]:{\r\n      width: '40%'\r\n    }\r\n  },\r\n  navabarHomepageMenu:{\r\n    width: '70%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('sm')]:{\r\n      display: 'none'\r\n    }\r\n  },\r\n  navabarHomepageMenuP:{\r\n    width: '100%',\r\n\r\n  },\r\n  navbarMenuBurgerContainer:{\r\n    width: '20%',\r\n    display: 'flex',\r\n    flexDirection: 'row-reverse',\r\n    [theme.breakpoints.down('md')]:{\r\n      width: '10%'\r\n    }\r\n  },\r\n\r\n  navbarMenuBurgerContainerP:{\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row-reverse',\r\n    [theme.breakpoints.down('md')]:{\r\n      width: '40%'\r\n    }\r\n  },\r\n\r\n  navbarTabRoot:{\r\n    textTransform: 'inherit',\r\n    opacity: 'inherit',\r\n    color: theme.palette.white.main,\r\n    fontWeight: theme.typography.buttonLink.fontWeight,\r\n    fontSize: theme.typography.buttonLink.fontSize,\r\n    '&:hover':{\r\n      borderBottom: '2px solid rgba(255,255,255,1)'\r\n    }\r\n  },\r\n  inputDatePicker:{\r\n    border: 'inherit',\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    color: theme.palette.placeHolder.main,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n    padding: '6px 0 7px',\r\n  },\r\n  logoMyAlfred:{\r\n    height: 64,\r\n\r\n  },\r\n\r\n\r\n  navbarButtonContainer:{\r\n    display: 'flex',\r\n    flexDirection: 'row-reverse',\r\n    width: '20%',\r\n    alignItems: 'center',\r\n  },\r\n  navbarButtonContainerP:{\r\n    display: 'flex',\r\n    flexDirection: 'row-reverse',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]:{\r\n      flexDirection: 'inherit',\r\n      width: '40%'\r\n    }\r\n  },\r\n  navBarlogIn:{\r\n    textTransform: theme.typography.textTransform,\r\n    borderRadius: theme.border.button.borderRadius,\r\n    color: theme.palette.white.main,\r\n    fontWeight: theme.typography.fontWeight\r\n  },\r\n  navbarModal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '& .MuiDialog-paper': {\r\n      margin: '0px !important',\r\n    },\r\n  },\r\n\r\n  navbarMuidialogContent: {\r\n    padding: 0,\r\n  },\r\n\r\n  navbarWidthLoginContent:{\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  navbarPaper: {\r\n    backgroundColor: theme.palette.white.main,\r\n    borderRadius: 10,\r\n    margin: '0px !important',\r\n    padding: 0,\r\n    width: '100%',\r\n  },\r\n  navbarSignIn:{\r\n    borderRadius: theme.border.button.borderRadius,\r\n    textTransform: theme.typography.textTransform,\r\n    fontWeight: theme.typography.fontWeight,\r\n    border: '3px solid rgba(255, 255, 255, 1)',\r\n    color: theme.palette.white.main,\r\n  },\r\n  textFieldMobilSearchInput:{\r\n    width: '90%'\r\n  },\r\n  buttonNextRoot:{\r\n    textTransform: 'initial',\r\n    fontWeight:'bold',\r\n    width: '100%',\r\n    color:'white'\r\n  },\r\n  drawerStyle:{\r\n    '& .MuiDrawer-paperAnchorBottom':{\r\n      height: '50%'\r\n    }\r\n  },\r\n  navbarRegisterContainer:{\r\n    marginRight: 5\r\n  },\r\n\r\n  navbarSearchContainerSearchPage:{\r\n    width: '100%',\r\n    marginTop: '2vh',\r\n    marginBottom: '2vh',\r\n\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n\r\n  /**Ifsearchpage**/\r\n  navbarSearchContainerSearchP:{\r\n    width: '100%',\r\n  },\r\n  navbarSearchP: {\r\n    padding: '1%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    borderRadius: theme.border.button.borderRadius,\r\n  },\r\n  navbarRootTextFieldP: {\r\n    marginLeft: 20,\r\n    flex: 1,\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n    \"& .MuiFormLabel-root\": {\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .MuiInputBase-input::placeholder':{\r\n      opacity: '0.5'\r\n    },\r\n    '& div':{\r\n      width:'100%'\r\n    }\r\n  },\r\n  navbarRootTextFieldWhereP:{\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n    \"& .MuiFormLabel-root\": {\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .MuiInputBase-input::placeholder':{\r\n      opacity: '0.5'\r\n    },\r\n    '& div':{\r\n      width:'100%'\r\n    }\r\n  },\r\n  navbarRootTextFieldWhenP:{\r\n    width: '100%',\r\n    marginLeft: 20,\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n    \"& .MuiFormLabel-root\": {\r\n      fontWeight: 'bold',\r\n      '&:focus':{\r\n        color: theme.palette.primary.main\r\n      }\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color: theme.palette.primary.main\r\n    },\r\n    '& .MuiInputBase-input::placeholder':{\r\n      opacity: '0.5'\r\n    }\r\n  },\r\n  navbarAlgoliaContentP:{\r\n    flex:1,\r\n    '& .ap-input-icon':{\r\n      display: 'none',\r\n    }\r\n  },\r\n  navbarDatePickerContainerP:{\r\n    flex: 1,\r\n  },\r\n  navbarMainSytleP:{\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  navbarAppBarP:{\r\n    boxShadow: 'inherit'\r\n  },\r\n  navBartoolbarP:{\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: '1%',\r\n    marginBottom: '1%'\r\n  },\r\n  navbarTopContainerP:{\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '90%',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]:{\r\n      width: '100%'\r\n    }\r\n\r\n  },\r\n  inputDatePickerP:{\r\n    border: 'inherit',\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    color: theme.palette.placeHolder.main,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n  },\r\n  modalMobileSearchBarInputTextField:{\r\n    width: '100%'\r\n  },\r\n  modalMobileSearchBartTextFieldWhereP:{\r\n    flex: 1,\r\n    fontFamily: theme.typography.text.fontFamily,\r\n    fontSize: theme.typography.placeHolder.fontSize,\r\n    fontWeight:  theme.typography.placeHolder.fontWeight,\r\n    lineHeight:  theme.typography.placeHolder.lineHeight,\r\n    \"& .MuiFormLabel-root\": {\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .MuiInputBase-input::placeholder':{\r\n      opacity: '0.5'\r\n    },\r\n    '& div':{\r\n      width:'100%'\r\n    }\r\n  },\r\n  dialogNavbarMobileFilter:{\r\n    minWidth: '100%'\r\n  }\r\n})\r\n","export default theme => ({\r\n  scrollMenuIndicator:{\r\n    backgroundColor: theme.palette.yellow.main\r\n  },\r\n  scrollMenuTab:{\r\n    textTransform: 'initial'\r\n  },\r\n})\r\n","export default theme => ({\r\n  trustAndSecurityMainContainer:{\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    [theme.breakpoints.down('sm')]:{\r\n      flexWrap: 'wrap'\r\n    },\r\n    [theme.breakpoints.down('xs')]:{\r\n      alignItems: 'start'\r\n    }\r\n  },\r\n  trustAndSecurityContent:{\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('sm')]:{\r\n      marginTop: '3vh',\r\n      width: '50%',\r\n      justifyContent: 'start',\r\n      paddingLeft: '7%'\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]:{\r\n      padding: 0\r\n    }\r\n\r\n  }\r\n})\r\n","export default theme => ({\r\n  layoutScrollMenu:{\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    height : '10%',\r\n    alignItems: 'flex-end'\r\n\r\n  },\r\n  filterMenuDivierContainer:{\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  filterMenuDividerStyle:{\r\n    height: 1,\r\n    width: '100%'\r\n  },\r\n  mainContainerStyleFooter:{\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    display: 'flex',\r\n    width: '100%',\r\n    alignItems: 'center'\r\n  },\r\n  generalWidthFooter:{\r\n    backgroundColor: 'rgba(228, 228, 228, 8)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    marginTop: '2vh'\r\n\r\n  },\r\n})\r\n","import axios from 'axios';\r\nimport cookie from 'react-cookies'\r\n\r\nconst setAuthToken = () => {\r\n  if (typeof localStorage=='undefined') {\r\n    console.error('Can not set auth token, undefined localStorage')\r\n    return null\r\n  }\r\n  const token=cookie.load('token')\r\n  localStorage.setItem('token', token)\r\n}\r\n\r\nconst setAxiosAuthentication = () => {\r\n  if (typeof localStorage=='undefined') {\r\n    console.log(`Can not set axios authentication, undefined localStorage`)\r\n    return null\r\n  }\r\n  const token = localStorage.getItem('token')\r\n  if (token) {\r\n    // Apply to every request\r\n    axios.defaults.headers.common['Authorization'] = token\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common['Authorization']\r\n  }\r\n};\r\n\r\nconst clearAuthenticationToken = () => {\r\n  if (typeof localStorage=='undefined') {\r\n    console.log(`Can not clear authentication token, undefined localStorage`)\r\n    return null\r\n  }\r\n  localStorage.removeItem('token')\r\n}\r\n\r\nmodule.exports={setAxiosAuthentication, clearAuthenticationToken, setAuthToken}\r\n","const crypto = require('crypto');\r\nconst ALL_SERVICES = ['Tous les services', null];\r\n\r\nconst MODES={\r\n  PRODUCTION:'production',\r\n  VALIDATION:'validation',\r\n  DEVELOPMENT:'development',\r\n  DEVELOPMENT_NOSSL:'development_nossl',\r\n}\r\n\r\nconst ALF_CONDS = { // my alfred condiitons\r\n  BASIC: '0',\r\n  PICTURE: '1',\r\n  ID_CARD: '2',\r\n  RECOMMEND: '3',\r\n};\r\n\r\nconst CANCEL_MODE = {\r\n  FLEXIBLE: '0',\r\n  MODERATE: '1',\r\n  STRICT: '2',\r\n};\r\n\r\nconst CUSTOM_PRESTATIONS_FLTR = 'Prestations personnalisées';\r\n\r\nconst generate_id = () => {\r\n  return crypto.randomBytes(20).toString('hex');\r\n};\r\n\r\nconst GID_LEN = 40;\r\n\r\nconst COMM_ALFRED = 0.0;\r\nconst COMM_CLIENT = 0.18;\r\n\r\nconst SIRET = {\r\n  token: 'ca27811b-126c-35db-aaf0-49aea431706e',\r\n  siretUrl: 'https://api.insee.fr/entreprises/sirene/V3/siret',\r\n  sirenUrl: 'https://api.insee.fr/entreprises/sirene/V3/siren',\r\n};\r\n\r\nconst ENTITES = {\r\n  '1000': 'Entrepreneur individuel',\r\n  '2110': 'Indivision entre personnes physiques',\r\n  '2120': 'Indivision avec personne morale',\r\n  '2210': 'Société créée de fait entre personnes physiques',\r\n  '2220': 'Société créée de fait avec personne morale',\r\n  '2310': 'Société en participation entre personnes physiques',\r\n  '2320': 'Société en participation avec personne morale',\r\n  '2385': 'Société en participation de professions libérales',\r\n  '2400': 'Fiducie',\r\n  '2700': 'Paroisse hors zone concordataire',\r\n  '2900': 'Autre groupement de droit privé non doté de la personnalité morale',\r\n  '3110': 'Représentation ou agence commerciale d\\'état ou organisme public étranger immatriculé au RCS',\r\n  '3120': 'Société commerciale étrangère immatriculée au RCS',\r\n  '3205': 'Organisation internationale',\r\n  '3210': 'État, collectivité ou établissement public étranger',\r\n  '3220': 'Société étrangère non immatriculée au RCS',\r\n  '3290': 'Autre personne morale de droit étranger',\r\n  '4110': 'Établissement public national à caractère industriel ou commercial doté d\\'un comptable public',\r\n  '4120': 'Établissement public national à caractère industriel ou commercial non doté d\\'un comptable public',\r\n  '4130': 'Exploitant public',\r\n  '4140': 'Établissement public local à caractère industriel ou commercial',\r\n  '4150': 'Régie d\\'une collectivité locale à caractère industriel ou commercial',\r\n  '4160': 'Institution Banque de France',\r\n  '5191': 'Société de caution mutuelle',\r\n  '5192': 'Société coopérative de banque populaire',\r\n  '5193': 'Caisse de crédit maritime mutuel',\r\n  '5194': 'Caisse (fédérale) de crédit mutuel',\r\n  '5195': 'Association coopérative inscrite (droit local Alsace Moselle)',\r\n  '5196': 'Caisse d\\'épargne et de prévoyance à forme coopérative',\r\n  '5202': 'Société en nom collectif',\r\n  '5203': 'Société en nom collectif coopérative',\r\n  '5306': 'Société en commandite simple',\r\n  '5307': 'Société en commandite simple coopérative',\r\n  '5308': 'Société en commandite par actions',\r\n  '5309': 'Société en commandite par actions coopérative',\r\n  '5370': 'Société de Participations Financières de Profession Libérale Société en commandite par actions (SPFPL SCA)',\r\n  '5385': 'Société d\\'exercice libéral en commandite par actions',\r\n  '5410': 'SARL nationale',\r\n  '5415': 'SARL d\\'économie mixte',\r\n  '5422': 'SARL immobilière pour le commerce et l\\'industrie (SICOMI)',\r\n  '5426': 'SARL immobilière de gestion',\r\n  '5430': 'SARL d\\'aménagement foncier et d\\'équipement rural (SAFER)',\r\n  '5431': 'SARL mixte d\\'intérêt agricole (SMIA)',\r\n  '5432': 'SARL d\\'intérêt collectif agricole (SICA)',\r\n  '5442': 'SARL d\\'attribution',\r\n  '5443': 'SARL coopérative de construction',\r\n  '5451': 'SARL coopérative de consommation',\r\n  '5453': 'SARL coopérative artisanale',\r\n  '5454': 'SARL coopérative d\\'intérêt maritime',\r\n  '5455': 'SARL coopérative de transport',\r\n  '5458': 'SARL coopérative ouvrière de production (SCOP)',\r\n  '5459': 'SARL union de sociétés coopératives',\r\n  '5460': 'Autre SARL coopérative',\r\n  '5470': 'Société de Participations Financières de Profession Libérale Société à responsabilité limitée (SPFPL SARL)',\r\n  '5485': 'Société d\\'exercice libéral à responsabilité limitée',\r\n  '5498': 'SARL unipersonnelle',\r\n  '5499': 'Société à responsabilité limitée (sans autre indication)',\r\n  '5505': 'SA à participation ouvrière à conseil d\\'administration',\r\n  '5510': 'SA nationale à conseil d\\'administration',\r\n  '5515': 'SA d\\'économie mixte à conseil d\\'administration',\r\n  '5520': 'Fonds à forme sociétale à conseil d\\'administration',\r\n  '5522': 'SA immobilière pour le commerce et l\\'industrie (SICOMI) à conseil d\\'administration',\r\n  '5525': 'SA immobilière d\\'investissement à conseil d\\'administration',\r\n  '5530': 'SA d\\'aménagement foncier et d\\'équipement rural (SAFER) à conseil d\\'administration',\r\n  '5531': 'Société anonyme mixte d\\'intérêt agricole (SMIA) à conseil d\\'administration',\r\n  '5532': 'SA d\\'intérêt collectif agricole (SICA) à conseil d\\'administration',\r\n  '5542': 'SA d\\'attribution à conseil d\\'administration',\r\n  '5543': 'SA coopérative de construction à conseil d\\'administration',\r\n  '5546': 'SA de HLM à conseil d\\'administration',\r\n  '5547': 'SA coopérative de production de HLM à conseil d\\'administration',\r\n  '5548': 'SA de crédit immobilier à conseil d\\'administration',\r\n  '5551': 'SA coopérative de consommation à conseil d\\'administration',\r\n  '5552': 'SA coopérative de commerçants-détaillants à conseil d\\'administration',\r\n  '5553': 'SA coopérative artisanale à conseil d\\'administration',\r\n  '5554': 'SA coopérative (d\\'intérêt) maritime à conseil d\\'administration',\r\n  '5555': 'SA coopérative de transport à conseil d\\'administration',\r\n  '5558': 'SA coopérative ouvrière de production (SCOP) à conseil d\\'administration',\r\n  '5559': 'SA union de sociétés coopératives à conseil d\\'administration',\r\n  '5560': 'Autre SA coopérative à conseil d\\'administration',\r\n  '5570': 'Société de Participations Financières de Profession Libérale Société anonyme à conseil d\\'administration (SPFPL SA à conseil d\\'administration)',\r\n  '5585': 'Société d\\'exercice libéral à forme anonyme à conseil d\\'administration',\r\n  '5599': 'SA à conseil d\\'administration (s.a.i.)',\r\n  '5605': 'SA à participation ouvrière à directoire',\r\n  '5610': 'SA nationale à directoire',\r\n  '5615': 'SA d\\'économie mixte à directoire',\r\n  '5620': 'Fonds à forme sociétale à directoire',\r\n  '5622': 'SA immobilière pour le commerce et l\\'industrie (SICOMI) à directoire',\r\n  '5625': 'SA immobilière d\\'investissement à directoire',\r\n  '5630': 'Safer anonyme à directoire',\r\n  '5631': 'SA mixte d\\'intérêt agricole (SMIA)',\r\n  '5632': 'SA d\\'intérêt collectif agricole (SICA)',\r\n  '5642': 'SA d\\'attribution à directoire',\r\n  '5643': 'SA coopérative de construction à directoire',\r\n  '5646': 'SA de HLM à directoire',\r\n  '5647': 'Société coopérative de production de HLM anonyme à directoire',\r\n  '5648': 'SA de crédit immobilier à directoire',\r\n  '5651': 'SA coopérative de consommation à directoire',\r\n  '5652': 'SA coopérative de commerçants-détaillants à directoire',\r\n  '5653': 'SA coopérative artisanale à directoire',\r\n  '5654': 'SA coopérative d\\'intérêt maritime à directoire',\r\n  '5655': 'SA coopérative de transport à directoire',\r\n  '5658': 'SA coopérative ouvrière de production (SCOP) à directoire',\r\n  '5659': 'SA union de sociétés coopératives à directoire',\r\n  '5660': 'Autre SA coopérative à directoire',\r\n  '5670': 'Société de Participations Financières de Profession Libérale Société anonyme à Directoire (SPFPL SA à directoire)',\r\n  '5685': 'Société d\\'exercice libéral à forme anonyme à directoire',\r\n  '5699': 'SA à directoire (s.a.i.)',\r\n  '5710': 'SAS, société par actions simplifiée',\r\n  '5720': 'Société par actions simplifiée à associé unique ou société par actions simplifiée unipersonnelle',\r\n  '5770': 'Société de Participations Financières de Profession Libérale Société par actions simplifiée (SPFPL SAS)',\r\n  '5785': 'Société d\\'exercice libéral par action simplifiée',\r\n  '5800': 'Société européenne',\r\n  '6100': 'Caisse d\\'Épargne et de Prévoyance',\r\n  '6210': 'Groupement européen d\\'intérêt économique (GEIE)',\r\n  '6220': 'Groupement d\\'intérêt économique (GIE)',\r\n  '6316': 'Coopérative d\\'utilisation de matériel agricole en commun (CUMA)',\r\n  '6317': 'Société coopérative agricole',\r\n  '6318': 'Union de sociétés coopératives agricoles',\r\n  '6411': 'Société d\\'assurance à forme mutuelle',\r\n  '6511': 'Sociétés Interprofessionnelles de Soins Ambulatoires ',\r\n  '6521': 'Société civile de placement collectif immobilier (SCPI)',\r\n  '6532': 'Société civile d\\'intérêt collectif agricole (SICA)',\r\n  '6533': 'Groupement agricole d\\'exploitation en commun (GAEC)',\r\n  '6534': 'Groupement foncier agricole',\r\n  '6535': 'Groupement agricole foncier',\r\n  '6536': 'Groupement forestier',\r\n  '6537': 'Groupement pastoral',\r\n  '6538': 'Groupement foncier et rural',\r\n  '6539': 'Société civile foncière',\r\n  '6540': 'Société civile immobilière',\r\n  '6541': 'Société civile immobilière de construction-vente',\r\n  '6542': 'Société civile d\\'attribution',\r\n  '6543': 'Société civile coopérative de construction',\r\n  '6544': 'Société civile immobilière d\\' accession progressive à la propriété',\r\n  '6551': 'Société civile coopérative de consommation',\r\n  '6554': 'Société civile coopérative d\\'intérêt maritime',\r\n  '6558': 'Société civile coopérative entre médecins',\r\n  '6560': 'Autre société civile coopérative',\r\n  '6561': 'SCP d\\'avocats',\r\n  '6562': 'SCP d\\'avocats aux conseils',\r\n  '6563': 'SCP d\\'avoués d\\'appel',\r\n  '6564': 'SCP d\\'huissiers',\r\n  '6565': 'SCP de notaires',\r\n  '6566': 'SCP de commissaires-priseurs',\r\n  '6567': 'SCP de greffiers de tribunal de commerce',\r\n  '6568': 'SCP de conseils juridiques',\r\n  '6569': 'SCP de commissaires aux comptes',\r\n  '6571': 'SCP de médecins',\r\n  '6572': 'SCP de dentistes',\r\n  '6573': 'SCP d\\'infirmiers',\r\n  '6574': 'SCP de masseurs-kinésithérapeutes',\r\n  '6575': 'SCP de directeurs de laboratoire d\\'analyse médicale',\r\n  '6576': 'SCP de vétérinaires',\r\n  '6577': 'SCP de géomètres experts',\r\n  '6578': 'SCP d\\'architectes',\r\n  '6585': 'Autre société civile professionnelle',\r\n  '6588': 'Société civile laitière',\r\n  '6589': 'Société civile de moyens',\r\n  '6595': 'Caisse locale de crédit mutuel',\r\n  '6596': 'Caisse de crédit agricole mutuel',\r\n  '6597': 'Société civile d\\'exploitation agricole',\r\n  '6598': 'Exploitation agricole à responsabilité limitée',\r\n  '6599': 'Autre société civile',\r\n  '6901': 'Autre personne de droit privé inscrite au registre du commerce et des sociétés',\r\n  '7111': 'Autorité constitutionnelle',\r\n  '7112': 'Autorité administrative ou publique indépendante',\r\n  '7113': 'Ministère',\r\n  '7120': 'Service central d\\'un ministère',\r\n  '7150': 'Service du ministère de la Défense',\r\n  '7160': 'Service déconcentré à compétence nationale d\\'un ministère (hors Défense)',\r\n  '7171': 'Service déconcentré de l\\'État à compétence (inter) régionale',\r\n  '7172': 'Service déconcentré de l\\'État à compétence (inter) départementale',\r\n  '7179': '(Autre) Service déconcentré de l\\'État à compétence territoriale',\r\n  '7190': 'Ecole nationale non dotée de la personnalité morale',\r\n  '7210': 'Commune et commune nouvelle',\r\n  '7220': 'Département',\r\n  '7225': 'Collectivité et territoire d\\'Outre Mer',\r\n  '7229': '(Autre) Collectivité territoriale',\r\n  '7230': 'Région',\r\n  '7312': 'Commune associée et commune déléguée',\r\n  '7313': 'Section de commune',\r\n  '7314': 'Ensemble urbain',\r\n  '7321': 'Association syndicale autorisée',\r\n  '7322': 'Association foncière urbaine',\r\n  '7323': 'Association foncière de remembrement',\r\n  '7331': 'Établissement public local d\\'enseignement',\r\n  '7340': 'Pôle métropolitain',\r\n  '7341': 'Secteur de commune',\r\n  '7342': 'District urbain',\r\n  '7343': 'Communauté urbaine',\r\n  '7344': 'Métropole',\r\n  '7345': 'Syndicat intercommunal à vocation multiple (SIVOM)',\r\n  '7346': 'Communauté de communes',\r\n  '7347': 'Communauté de villes',\r\n  '7348': 'Communauté d\\'agglomération',\r\n  '7349': 'Autre établissement public local de coopération non spécialisé ou entente',\r\n  '7351': 'Institution interdépartementale ou entente',\r\n  '7352': 'Institution interrégionale ou entente',\r\n  '7353': 'Syndicat intercommunal à vocation unique (SIVU)',\r\n  '7354': 'Syndicat mixte fermé',\r\n  '7355': 'Syndicat mixte ouvert',\r\n  '7356': 'Commission syndicale pour la gestion des biens indivis des communes',\r\n  '7357': 'Pôle d\\'équilibre territorial et rural (PETR)',\r\n  '7361': 'Centre communal d\\'action sociale',\r\n  '7362': 'Caisse des écoles',\r\n  '7363': 'Caisse de crédit municipal',\r\n  '7364': 'Établissement d\\'hospitalisation',\r\n  '7365': 'Syndicat inter hospitalier',\r\n  '7366': 'Établissement public local social et médico-social',\r\n  '7367': 'Centre Intercommunal d\\'action sociale (CIAS)',\r\n  '7371': 'Office public d\\'habitation à loyer modéré (OPHLM)',\r\n  '7372': 'Service départemental d\\'incendie et de secours (SDIS)',\r\n  '7373': 'Établissement public local culturel',\r\n  '7378': 'Régie d\\'une collectivité locale à caractère administratif',\r\n  '7379': '(Autre) Établissement public administratif local',\r\n  '7381': 'Organisme consulaire',\r\n  '7382': 'Établissement public national ayant fonction d\\'administration centrale',\r\n  '7383': 'Établissement public national à caractère scientifique culturel et professionnel',\r\n  '7384': 'Autre établissement public national d\\'enseignement',\r\n  '7385': 'Autre établissement public national administratif à compétence territoriale limitée',\r\n  '7389': 'Établissement public national à caractère administratif',\r\n  '7410': 'Groupement d\\'intérêt public (GIP)',\r\n  '7430': 'Établissement public des cultes d\\'Alsace-Lorraine',\r\n  '7450': 'Etablissement public administratif, cercle et foyer dans les armées',\r\n  '7470': 'Groupement de coopération sanitaire à gestion publique',\r\n  '7490': 'Autre personne morale de droit administratif',\r\n  '8110': 'Régime général de la Sécurité Sociale',\r\n  '8120': 'Régime spécial de Sécurité Sociale',\r\n  '8130': 'Institution de retraite complémentaire',\r\n  '8140': 'Mutualité sociale agricole',\r\n  '8150': 'Régime maladie des non-salariés non agricoles',\r\n  '8160': 'Régime vieillesse ne dépendant pas du régime général de la Sécurité Sociale',\r\n  '8170': 'Régime d\\'assurance chômage',\r\n  '8190': 'Autre régime de prévoyance sociale',\r\n  '8210': 'Mutuelle',\r\n  '8250': 'Assurance mutuelle agricole',\r\n  '8290': 'Autre organisme mutualiste',\r\n  '8310': 'Comité central d\\'entreprise',\r\n  '8311': 'Comité d\\'établissement',\r\n  '8410': 'Syndicat de salariés',\r\n  '8420': 'Syndicat patronal',\r\n  '8450': 'Ordre professionnel ou assimilé',\r\n  '8470': 'Centre technique industriel ou comité professionnel du développement économique',\r\n  '8490': 'Autre organisme professionnel',\r\n  '8510': 'Institution de prévoyance',\r\n  '8520': 'Institution de retraite supplémentaire',\r\n  '9110': 'Syndicat de copropriété',\r\n  '9150': 'Association syndicale libre',\r\n  '9210': 'Association non déclarée',\r\n  '9220': 'Association déclarée',\r\n  '9221': 'Association déclarée d\\'insertion par l\\'économique',\r\n  '9222': 'Association intermédiaire',\r\n  '9223': 'Groupement d\\'employeurs',\r\n  '9224': 'Association d\\'avocats à responsabilité professionnelle individuelle',\r\n  '9230': 'Association déclarée, reconnue d\\'utilité publique',\r\n  '9240': 'Congrégation',\r\n  '9260': 'Association de droit local (Bas-Rhin, Haut-Rhin et Moselle)',\r\n  '9300': 'Fondation',\r\n  '9900': 'Autre personne morale de droit privé',\r\n  '9970': 'Groupement de coopération sanitaire à gestion privée',\r\n};\r\n\r\nconst CESU = ['Mandatory', 'Optional', 'Disabled'];\r\n\r\nconst GOOGLE_PROVIDER = 'google';\r\nconst FACEBOOK_PROVIDER = 'facebook';\r\n\r\nconst AMAZON_HOST='my-alfred.io'\r\nconst LOCAL_HOST='lvh.me'\r\n\r\nconst SKILLS={\r\n  careful: {\r\n    label: 'Travail soigneux',\r\n    picture: 'careful_work',\r\n    entrieName: 'careful'\r\n  },\r\n  punctual: {\r\n    label: 'Ponctualité',\r\n    picture: 'punctuality',\r\n    entrieName: 'punctual'\r\n  },\r\n  flexible: {\r\n    label: 'Flexibilité',\r\n    picture: 'flexibility',\r\n    entrieName: 'flexible'\r\n  },\r\n  reactive: {\r\n    label: 'Réactivité',\r\n    picture: 'reactivity',\r\n    entrieName: 'reactive'\r\n  },\r\n};\r\n\r\nconst LANGUAGES= [\r\n  {value: 'Français', label: 'Français'},\r\n  {value: 'Anglais', label: 'Anglais'},\r\n  {value: 'Allemand', label: 'Allemand'},\r\n  {value: 'Espagnol', label: 'Espagnol'},\r\n  {value: 'Chinois', label: 'Chinois'},\r\n  {value: 'Arabe', label: 'Arabe'},\r\n  {value: 'Portugais', label: 'Portugais'},\r\n  {value: 'Russe', label: 'Russe'},\r\n  {value: 'Japonais', label: 'Japonais'},\r\n];\r\n\r\nconst MAX_TEXT_SIZE=300\r\n\r\nmodule.exports = {\r\n  ALL_SERVICES, ALF_CONDS, CANCEL_MODE, CUSTOM_PRESTATIONS_FLTR,\r\n  generate_id, COMM_ALFRED, COMM_CLIENT, GID_LEN, ENTITES, CESU,\r\n  MODES, GOOGLE_PROVIDER, FACEBOOK_PROVIDER, AMAZON_HOST, LOCAL_HOST,\r\n  SKILLS, LANGUAGES, MAX_TEXT_SIZE\r\n};\r\n","import getDistance from 'geolib/es/getDistance';\r\nimport convertDistance from 'geolib/es/convertDistance';\r\nconst jwt = require('jsonwebtoken')\r\nconst isEmpty = require('../server/validation/is-empty');\r\nconst moment = require('moment');\r\n\r\nconst computeDistanceKm = (latlon1, latlon2) => {\r\n  if (isEmpty(latlon1) || isEmpty(latlon2)) {\r\n    return null;\r\n  }\r\n  if (isEmpty(latlon1.lat) || isEmpty(latlon1.lng)) {\r\n    return null;\r\n  }\r\n  if (isEmpty(latlon2.lat) || isEmpty(latlon2.lng)) {\r\n    return null;\r\n  }\r\n  try {\r\n    return convertDistance(\r\n      getDistance(\r\n        {latitude: latlon1.lat, longitude: latlon1.lng},\r\n        {latitude: latlon2.lat, longitude: latlon2.lng},\r\n      ),\r\n      'km',\r\n    );\r\n  } catch (error) {\r\n    console.log('Error:' + error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst computeBookingReference = (user, alfred) => {\r\n  var reference = user.avatar_letters + alfred.avatar_letters + '_' + moment().format('DDMMYYYY');\r\n  return reference;\r\n};\r\n\r\nconst computeAverageNotes = notes => {\r\n  var res = {};\r\n  if (isEmpty(notes)) {\r\n    return res;\r\n  }\r\n  Object.keys(notes[0]).forEach(k => {\r\n    const value = notes.reduce((prev, next) => prev + next[k], 0) / notes.length;\r\n    res[k] = value;\r\n  });\r\n  return res;\r\n};\r\n\r\nconst computeSumSkills = skills => {\r\n  var res = {};\r\n  if (isEmpty(skills)) {\r\n    return res;\r\n  }\r\n  Object.keys(skills[0]).forEach(k => {\r\n    const value = skills.reduce((prev, next) => prev + next[k], 0);\r\n    res[k] = value;\r\n  });\r\n  return res;\r\n};\r\n\r\nconst circular_get = (array, start, length) => {\r\n  var index = start%array.length\r\n  var res=[]\r\n  while (res.length<length) {\r\n    res.push(index)\r\n    index = (index+1)%array.length\r\n  }\r\n  return res\r\n}\r\n\r\nconst getLoggedUser = () => {\r\n  if (typeof localStorage=='undefined') {\r\n    console.log(`Token inconnnu, localStorage non défini`)\r\n    return null\r\n  }\r\n  const token = localStorage.getItem('token')\r\n  if (!token) {\r\n    console.debug('Pas de token')\r\n    return null\r\n  }\r\n  const data=token.split(' ')[1]\r\n  const decoded = jwt.decode(data);\r\n  return decoded\r\n}\r\n\r\nconst getLoggedUserId = () => {\r\n  const logged=getLoggedUser()\r\n  return logged && logged.id\r\n}\r\n\r\nconst isLoggedUserAdmin = () => {\r\n  const logged=getLoggedUser()\r\n  return logged && logged.is_admin\r\n}\r\n\r\nconst isLoggedUserAlfred = () => {\r\n  const logged=getLoggedUser()\r\n  return logged && logged.is_alfred\r\n}\r\n\r\n// Returns true if user is the currently logged user\r\nconst isEditableUser = user => {\r\n  if (!user || !getLoggedUserId()) {\r\n    return false\r\n  }\r\n  const isEditable=getLoggedUserId()==user || getLoggedUserId()==user._id\r\n  return isEditable\r\n}\r\n\r\nmodule.exports = {\r\n  computeDistanceKm, computeBookingReference, computeAverageNotes,\r\n  computeSumSkills, circular_get, getLoggedUserId,\r\n  isLoggedUserAdmin, isEditableUser, isLoggedUserAlfred\r\n};\r\n","const KycDocumentStatus = require('mangopay2-nodejs-sdk/lib/models/KycDocumentStatus');\r\n\r\nconst CESU_NOTICE = 'Quel que soit votre statut, My Alfred est tenu de déclarer aux \\\r\nfinances publiques vos revenus générés <b>si les deux conditions suivantes sont \\\r\nréunies dans l\\'année civile :</b><ul><li>vos revenus dépassent 3000 euros</li>\\\r\n<li>vous avez réalisé vingt prestations ou plus</li></ul>';\r\n\r\nconst OUTSIDE_PERIMETER = 'Ce service est hors de votre périmètre.';\r\n\r\nconst SCHEDULE_TITLE = 'Précisez vos disponibilités si vous le souhaitez !';\r\n\r\nconst SCHEDULE_SUBTITLE = \"Votre calendrier vous permet d'ajouter vos disponibilités.\\\r\n Lorsque vous ajoutez ou modifiez vos disponibilités, seules les plages horaires indiquées pourront être réservées.\\\r\n Vous pouvez très facilement ajouter une période de disponibilité en indiquant les dates de début et fin, les jours correspondants et des tranches horaires.\\\r\n Vous pouvez également sélectionner une date ou plusieurs, indiquer si vous êtes disponible et sélectionner les tranches horaires.\"\r\n\r\n\r\nconst SHOP_CREATION_SUCCESSFUL = 'Vos services sont maintenant disponibles dans my Alfred';\r\n\r\nconst ID_CARD_CONFIRM_DELETION = 'Supprimer votre pièce d\\'identité ?';\r\nconst REGISTRATION_PROOF_CONFIRM_DELETION = 'Supprimer votre document d\\'immatriculation ?';\r\n\r\nconst MANGOPAY_MESSAGES = {\r\n    'DOCUMENT_UNREADABLE': 'Pièce d\\'identité illisible',\r\n    'DOCUMENT_NOT_ACCEPTED': 'Pièce d\\'identité invalide : carte d\\'identité, passeport, permis de conduire ou titre de séjour attendu',\r\n    'DOCUMENT_HAS_EXPIRED': 'Pièce d\\'identité expirée',\r\n    'DOCUMENT_INCOMPLETE': 'Pièce d\\'identité incomplète ou illisible',\r\n    'DOCUMENT_DO_NOT_MATCH_USER_DATA': 'Pièce d\\'identité ne correspond pas à l\\'identité que vous avez indiquée',\r\n    'DOCUMENT_DO_NOT_MATCH_ACCOUNT_DATA': 'Pièce d\\'identité ne correspond pas à vops coordonnées bancaires',\r\n    'DOCUMENT_FALSIFIED': 'Pièce d\\'identité falsifié',\r\n    'DOCUMENT_MISSING': 'Pièce d\\'identité vide',\r\n    'UNDERAGE_PERSON': 'Vous devez avoir au minimum 18 ans',\r\n    [KycDocumentStatus.Created]: 'Pièce d\\'identité enregistrée, en attente de validation',\r\n    [KycDocumentStatus.ValidationAsked]: 'Pièce d\\'identité en cours de validation',\r\n    [KycDocumentStatus.Validated]: 'Pièce d\\'identité valide',\r\n    [KycDocumentStatus.Refused]: 'Pièce d\\'identité refusée, merci d\\'en fournir une valide',\r\n};\r\n\r\nconst INFOBAR_MESSAGE = {\r\n    message: 'Renseignez-vous sur les restrictions COVID 19 avant de réserver.',\r\n    showMore: 'En savoir plus'\r\n};\r\n\r\nconst SHOWMORE = 'En savoir plus';\r\n\r\nconst SEARCHBAR = {\r\n    what: 'Quel service ?',\r\n    where: 'Où ?',\r\n    when: 'Quand ?',\r\n    labelWhere: 'L\\'adresse',\r\n    labelWhat: 'Le service',\r\n    labelWhen: 'Les dates'\r\n};\r\n\r\nconst NAVBAR_MENU = {\r\n    ourServices: 'Nos services',\r\n    myServices: 'Mes services',\r\n    registerServices: 'Proposer mes services',\r\n    ourTeam: 'Notre équipe',\r\n    contactUs: 'Nous contacter',\r\n    aboutUs: 'À propos',\r\n    ourCom: 'Notre communauté',\r\n    signIn: 'Inscription',\r\n    logIn: 'Connexion'\r\n};\r\n\r\nconst BANNER_PRESENTATION = {\r\n    title: 'Et si vous pouviez réserver n\\'importe quel service ?',\r\n    text: 'Stressez moins. En quelques clics, trouver la personne et le service dont vous avez besoin.',\r\n    button: 'Découvrir'\r\n};\r\n\r\nconst CATEGORY = {\r\n    title: 'Catégories',\r\n    text: 'Des milliers de services à découvrir',\r\n    button: 'Tout découvrir'\r\n};\r\n\r\nconst BECOME_ALFRED = {\r\n    title: 'Devenir Alfred',\r\n    text: 'Créez votre compte et proposez vos services',\r\n    button: 'En savoir plus'\r\n};\r\n\r\nconst RESA_SERVICE = {\r\n    title: 'Proposez un service',\r\n    text: 'Créez votre compte et proposez un service',\r\n    button: 'C\\'est parti !'\r\n};\r\n\r\nconst HOW_IT_WORKS = {\r\n    leftText: 'En quelques clics,\\n' +\r\n        'réserver le service et la\\n' +\r\n        'personne dont vous avez besoin.\\n' +\r\n        '#MyAlfred.',\r\n    rightText: 'Vous pouvez consulter des centaines de profils, choisir votre Alfred, réservez et payez en ligne votre service. Notre équipe vous accompagne à chaque étape !'\r\n};\r\n\r\nconst NEWS_LETTER = {\r\n    title: 'Profitez des bon plans de la communauté avec la Newsletter des Alfred',\r\n    text: 'Inscrivez-vous gratuitement à notre super Newsletter pour recevoir les informations et les bons plans de la communauté.',\r\n    google: 'S\\'inscrire avec Google',\r\n    where: 'ou',\r\n    email: 'Email',\r\n    button: 'Je m\\'inscris !'\r\n};\r\n\r\nconst CMP_PRESENTATION = {\r\n    placeholder: 'Ici, parlez-nous de vous, de votre personnalité, de vos passions ou encore de votre parcours. Soyez vous-même et montrez-nous votre personnalité !'\r\n}\r\nconst getMangopayMessage = msg_id => {\r\n    if (!msg_id) {\r\n        return null;\r\n    }\r\n    return MANGOPAY_MESSAGES[msg_id] || `Erreur inconnue:${msg_id}`;\r\n};\r\n\r\nconst SHOP = {\r\n    addService: 'Ajoutez des services',\r\n    createShop: 'Proposez votre premier service'\r\n}\r\n\r\nconst BOOKING = {\r\n    MSG_EVALUATE: 'Vous avez 15 jours pour évaluer votre client. Une fois que votre client aura rédigé son commentaire, il pourra consulter votre évaluation et vous pourrez consulter la sienne !'\r\n}\r\n\r\nconst FAQ_ALFRED = {\r\n  \"Devenir Alfred\": [\r\n    {\r\n      title: 'Qui peut devenir Alfred ?',\r\n      contents: '<p>Nous sommes tous des Alfred ! Dès l’âge de 16 ans, vous pouvez devenir Alfred en créant votre propre boutique de service(s) sur My Alfred.\\\r\n      Votre inscription et la mise en ligne de votre boutique sont entièrement gratuites et ne demandent aucun frais au préalable ou abonnement vous engageant sur la durée.Vous pouvez proposer immédiatement vos talents, vos compétences sur My Alfred en choisissant la liste des services que vous souhaitez proposer. Nous avons répertorié pour vous plus de 2000 prestations classées dans des services et des catégories. Alors, prêt à rejoindre l’aventure ? Je deviens alfred maintenant !</p>'\r\n    },\r\n    {\r\n      title: 'Comment créer sa boutique de service ?',\r\n      contents: '<p>My Alfred vous permet de créer votre propre boutique de service(s) et de définir les services et prestations que vous souhaitez réaliser tout en vous offrant pleine liberté sur vos conditions !Nos Alfred fixent leur(s) prix ainsi que leur(s) méthode(s) de facturation librement, et peuvent ajuster leur(s) prix à tout moment. Afin de proposer une visibilité et une confiance accrue entre les utilisateurs et les Alfred, la boutique de service(s) offre un niveau de personnalisation élevé permettant à tout à chacun de décrire son expertise, ses diplômes et certifications, des options liées à ses services, le matériel fourni dans le cadre de son service ou encore ses disponibilités.Les Alfred sont également libres de choisir leurs propres conditions de réservation et d’annulation !</p><p>Prêt à vous lancer ? Pour démarrer la création de votre boutique, l’inscription est obligatoire. Une fois identifé(e)sur My Alfred, il suffit de cliquer sur le bouton “Devenir Alfred’’.</p><p>Simple et rapide, la création de votre boutique se déroule en 3 étapes et ne vous prendra quelques minutes :</p><p>Etape 1 : Sélection des services<br/>A travers cette étape, vous pouvez sélectionner les services que vous souhaitez réaliser. Nous avons classé ces services dans des catégories pour vous permettre de trouver plus rapidement les services concernés. Un service n\\'apparaît pas ?Contacter l’équipe My Alfred à l’adresse <a href={\\'mailto:unservicedeplus@my-alfred.io\\'}>unservicedeplus@my-alfred.io</a> !</p><p>Etape 2 : Indiquez vos prix, vos disponibilités et conditions<br/>Pour chaque service sélectionné, vous devez renseigner un prix par prestation, vos disponibilités et vos conditions de réservation pour permettre à vos clients de réserver vos services avec un maximum d’informations.</p><p>Etape 3 : Indiquez vos prix, vos disponibilités et conditions<br/>Cette dernière étape vous permet d’ajouter une photo de profil, de vérifier votre téléphone portable, votre identité et d’indiquer si vous souhaitez réaliser vos services en tant que particulier ou auto-entrepreneur.</p><p>C’est fini ! Vous avez maintenant votre propre boutique de services sur My Alfred. A tout moment, vous pouvez ajouter, modifier, supprimer un ou plusieurs services dans la rubrique ma boutique !Pensez à maintenir votre calendrier à jour afin d\\'apparaître dans les résultats de recherche des utilisateurs :) !</p>'\r\n    },\r\n    {\r\n      title: 'Que dois-je déclarer dans mes revenus ?',\r\n      contents: '<p>My Alfred est une plateforme appartenant à l’économie collaborative permettant à tout un chacun de consommer et/ou de proposer des services contre une rémunération. L’économie collaborative est tout à fait légale à condition de déclarer ses revenus et d’adopter le statut correspondant en fonction de la nature occasionnelle ou non de vos services.En tant que particulier, vous devez vous devez déclarer le montant de vos prestations dans vos revenus dès lors que vous avez perçu plus de 3 000 € ou effectué plus de 20 transactions au cours de l’année précédente, mais vous n’avez pas de déclaration sociale ou deTVA à réaliser.Si votre activité n’est pas occasionnelle mais régulière, vous devez déclarer vos revenus et payer des cotisations sociales. Dans ce cas, le statut d’auto-entrepreneur est alors parfaitement adapté pour vous.</p>'\r\n    },\r\n  ],\r\n  'Créer votre boutique de service': [\r\n    {\r\n      title: 'Comment ajouter un nouveau service dans ma boutique ?',\r\n      contents: '<p>Vous pouvez à tout moment ajouter de nouveaux services dans votre boutique.Pour cela, rendez-vous dans votre boutique et cliquez sur <span style=\\{\\{color: \\'#2FBCD3\\'\\}\\}>ajouter un nouveau service.</span><br/>Vous devez ensuite suivre les différentes étapes d’ajout d’un nouveau service comme lors de la création de votre boutique.</p>'\r\n    }, {\r\n      title: 'Comment fixer le prix de mes prestations ?',\r\n      contents: '<p>Pour chaque service sélectionné, il vous est proposé une ou plusieurs prestations. Vous devez sélectionner les prestations que vous souhaitez effectuer et pour lesquelles un prix doit être renseigné. Le prix de votre prestation doit être indiqué en tenant compte du mode de facturation. Un mode de facturation vous est proposé par défaut mais vous pouvez le modifier si ce dernier ne vous convient pas.</p><p>Vous pouvez à tout moment visualiser ou modifier le prix et le mode de facturation de vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier le prix de vos prestations :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez votre Boutique sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes services</strong></li><li>Cliquez sur <strong>Modifier</strong> dans un service</li><li>Modifier les prix de vos prestations puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'A quoi servent les options dans ma boutique de service ?',\r\n      contents: '<p>Pour chaque service, vous avez la possibilité d’ajouter une option de facturation. Cette option vous permet de compléter le prix de votre prestation en ajoutant un supplément de prix que le client pourra sélectionner. Par exemple, vous pouvez ajouter une option“retrait et livraison” et indiquer le prix de cette option.</p><p>Vous pouvez à tout moment visualiser ou modifier les options de vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier les options d\\'un service :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes services</strong></li><li>Cliquez sur <strong>Modifier</strong> dans un service</li><li>Modifier les options de vos prestations puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'A quoi correspond le matériel fourni dans ma boutique de service ?',\r\n      contents: '<p>Pour chaque service, vous pouvez sélectionner le matériel et les consommables qui seront utilisés lors de votre prestation. Lorsqu’un client parcourra votre boutique ou sélectionnera vos services,il pourra alors connaître les équipements dont vous disposez pour la prestation et les consommablesque vous fournissez. Certains services nécessitent du matériels pécifique. Indiquez que vous disposez de ce matériel offre à vos clients un gage de qualité et de professionnalisme au regard des services que vous pouvez réaliser !</p><p>Vous pouvez à tout moment visualiser ou modifier le matériel et consommables fournis dans vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier le matériel fourni dans votre service :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes services</strong></li><li>Cliquez sur <strong>Modifier</strong> dans un service</li><li>Sélectionnez le matériel et consommables puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'Comment définir un montant minimum pour mon service ?',\r\n      contents: '<p>Le montant minimum de réservation correspond au panier minimum requis pour réserver ce service.Si vous indiquez un montant de 10€, les clients ne pourront pas réserver vos services si la somme des prestations n’atteint pas ce montant.</p><p>Vous pouvez à tout moment visualiser ou modifier le montant minimum de vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier le montant minimum d\\'un service :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes services</strong></li><li>Cliquez sur <strong>Modifier</strong> dans un service</li><li>Modifiez le montant minimum puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'Comment définir mon périmètre d\\'intervention ?',\r\n      contents: '<p>Votre périmètre d’intervention correspond à la zone dans laquelle vous souhaitez réaliser votre service.Par défaut, nous utilisons la ville de votre profil comme référence.Cette adresse ne vous convient pas ? Vous pouvez changer votre ville de référence à tout moment!Le périmètre que vous indiquez va permettre à la plateforme My Alfred de proposer votre service si le périmètre d’intervention correspond à l’adresse du client. Si le client se trouve à 5km de votre adresse et que vous avez indiquez un périmètre de 10km votre service sera proposé !</p><p>Vous pouvez à tout moment visualiser ou modifier le périmètre d’intervention de vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier le périmètre d\\'intervention d\\'un service :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes services</strong></li><li>Cliquez sur <strong>Modifier</strong> dans un service</li><li>Modifiez le périmètre d\\'intervention puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'A quoi correspond le délai de prévenance ?',\r\n      contents: '<p>Le délai de prévenance correspond au délai nécessaire entre la réservation et la réalisation du service. Par exemple, si vous indiquez un délai de 24 heures, un client devra réserver votre service au moins 24heures avant votre intervention.Le délai de prévenance peut se définir en heure, jour ou mois en indiquant le chiffre correspondant avec les boutons + et - dans votre boutique.</p><p>Vous pouvez à tout moment visualiser ou modifier le délai de prévenance de vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier le délai de prévenance d\\'un service :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes services</strong></li><li>Cliquez sur <strong>Modifier</strong> dans un service</li><li>Modifiez le délai de prévenance puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'Pourquoi décrire brièvement mon expertise ?',\r\n      contents: '<p>Pour chaque service sélectionné, vous pouvez brièvement décrire votre expertise.N’hésitez pas à mettre en évidence vos compétences et votre expertise pour un service.Les utilisateurs auront accès à ces informations, n’hésitez pas à valoriser vos réalisations et vos atouts pour ce service !</p><p>Vous pouvez à tout moment visualiser ou modifier le contenu de votre expertise de vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier la description de votre expertise d\\'un service :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes services</strong></li><li>Cliquez sur <strong>Modifier</strong> dans un service</li><li>Modifiez le contenu de votre expertise puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'Pourquoi dois-je ajouter mes années d’expérience, mes diplômes et certifications ?',\r\n      contents: '<p>Pour chaque service sélectionné, vous pouvez indiquer une nombre d\\'années d\\'expérience pour ce service et télécharger un diplôme et/ou une certification reçu pour ce service. Concernant le diplôme,vous pouvez indiquez le nom de votre diplôme et son année d’obtention.En téléchargeant votre diplôme,votre diplôme aura le statut de diplôme vérifié auprès des utilisateurs mais il ne sera jamais visible par ces derniers! C’est exactement le même principe pour votre certification.</p><p>Vous pouvez à tout moment visualiser ou modifier le nombre d\\'années d\\'expérience et les diplômes et certifications téléchargés de vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier vos années d’expérience, vos diplômes et certifications d\\'un service :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes services</strong></li><li>Cliquez sur <strong>Modifier</strong> dans un service</li><li>Modifiez votre nombre d’années d’expérience, supprimer ou ajouter un diplôme ou une certification puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'Comment indiquer mes disponibilités dans mon calendrier ?',\r\n      contents: '<p>Il est indispensable d’indiquer vos disponibilités lors de la création de votre boutique afin d\\'apparaître dans les résultats de recherche des utilisateurs.Lorsqu’un client recherchera un service sur la plateforme, il indiquera le service recherché, et très souvent indiquera une date et/ou un heure à laquelle il souhaite obtenir ce service.Si vos disponibilités indiquées dans votre calendrier correspondent à la demande du client, vos services seront proposés dans les résultats de la recherche !Afin de renseigner convenablement votre calendrier, My Alfred vous permet d’indiquer, jour par jour vos périodes de disponibilité. Plusieurs périodes peuvent être indiquées pour un même jour ou pour une période récurrente. Par exemple, vous pouvez être disponible le mercredi de 10h à 12h puis de 14h à 18h.Vous pouvez ensuite étendre vos heures de disponibilités de vos journées sur une période de dates.Par exemple, les périodes horaires renseignées s’appliquent pour la période du 1er octobre 2019 au 20 décembre 2019.Si vous proposez plusieurs services, les disponibilités indiquées peuvent être définies par service ou pour l’ensemble de vos services.</p><p>Vous pouvez à tout moment visualiser ou modifier le calendrier de vos disponibilités de vos service dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier votre calendrier de disponibilités :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mon calendrier</strong></li><li>Cliquez sur <strong>Ajouter ou modifier dans la page calendrier</strong></li><li>Modifiez les jours, heures et périodes de vos disponibilités puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'Comment les utilisateurs peuvent réserver ?',\r\n      contents: \"<p>Pour l’ensemble de vos services, vous devez préciser la façon dont vous souhaitez que vos clients réservent vos services. Soit vous permettez à vos clients de réserver vos services automatiquement,soit vous souhaitez recevoir une notification pour laquelle vous avez 24h pour répondre. Lors d'une réservation automatique, le service est réservé et payé par le client.Si vous avez opté pour une validation de la réservation, le service ne sera réservé et payé qu’après votre acceptation.</p><p>Vous pouvez à tout moment visualiser ou modifier la façon dont vous souhaitez que vos clients réservent vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier la façon dont vos clients peuvent réserver vos services :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes paramètres de réservation</strong></li><li>Cliquez sur <strong>Modifier</strong>dans un service</li><li>Sélectionnez la façon dont vous souhaitez que vos clients réservent vos services puis cliquez sur <strong>Enregistrer</strong></li></ol>\"\r\n    }, {\r\n      title: 'A quoi correspondent mes conditions de réservation ?',\r\n      contents: '<p>Les conditions de réservation définissent les éléments que vous souhaitez vérifier à propos de vos clients. Vous pouvez exiger différentes options. Ces options sont cumulatives.</p><p>Conditions My Alfred<br/>Adresse email et numéro de téléphone confirmés</p><p>Photo de profil<br/>Ces utilisateurs ont fourni une photo de profile.</p><p>Pièce d\\'identité officielle<br/>Ces utilisateurs ont vérifié leur identité.</p><p>Recommandations d\\'autres Alfred<br/>Ces utilisateurs ont déjà utilisé des services avec My Alfred, sont recommandés par d\\'autresAlfred et n\\'ont pas reçu de commentaires négatifs.</p><p>Il se peut que vous ayez moins de réservation si vous ajoutez des conditions. Les personnes quine répondent pas à vos critères peuvent quand même vous envoyer une demande.</p><p>Vous pouvez à tout moment visualiser ou modifier les conditions de réservation de vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier vos conditions de réservation de vos services :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes paramètres de réservation</strong></li><li>Cliquez sur <strong>Modifier</strong>dans un service</li><li>Sélectionnez ou désélectionnez les options de vos conditions de réservation puis cliquez sur <strong>Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'Comment gérer ma photo de profil ?',\r\n      contents: '<p>La photo de votre profil sera visible des utilisateurs du site et leur permettra de déjà vous connaître! Téléchargez une photo claire et lumineuse, de bonne qualité. Pour un rendu optimal, la photo doit être cadrée, sans lunette de soleil, en regardant l’objectif, avec seulement vous sur la photo.</p><p>Vous pouvez à tout moment visualiser, ajouter ou supprimer votre photo dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour ajouter ou supprimer votre photo de profil :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Profil</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Ma photo</strong></li><li>Cliquez sur <strong>Télécharger une photo depuis votre ordinateur </strong></li><li>Cliquez sur <strong>Valider</strong></li></ol>'\r\n    }, {\r\n      title: 'Comment définir mes conditions d\\'annulations ?',\r\n      contents: '<p>Les conditions d’annulation définissent sous quelle condition vous acceptez l’annulation d’une réservation par un client. Nous avons définis 3 niveaux de conditions d’annulation :</p><p>Flexibles<br/>Remboursement intégral lorsque l’annulation d’un client intervient jusqu\\'à 1 jour avant la prestation.</p><p>Modérées<br/>Remboursement intégral lorsque l’annulation d’un client intervient jusqu\\'à 5 jours avant la prestation.</p><p>Strictes<br/>Remboursement intégral lorsque l’annulation d’un client intervient jusqu\\'à 10 jours avant la prestation.</p><p>Vous pouvez à tout moment visualiser ou modifier vos conditions d’annulation de vos services dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier vos conditions d’annulation de vos services dans votre boutique :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes paramètres de réservation</strong></li><li>Sélectionnez le type de condition d’annulation de réservation de vos services puis cliquez sur<strong> Enregistrer</strong></li></ol>'\r\n    }, {\r\n      title: 'Comment gérer ma photo de couverture ?',\r\n      contents: '<p>Votre photo de couverture est la photo positionnée en en-tête de votre boutique. Elle sera visible des utilisateurs du site.La photo de couverture peut refléter vos goûts, vous permettre de mettre votre travail en avant etc.Par défaut, My Alfred attribue une photo de couverture à votre boutique.</p><p>Vous pouvez à tout moment visualiser, ajouter ou supprimer votre photo dans votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour ajouter ou supprimer votre photo de couverture :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Boutique</strong> sur my-alfred.io</li><li>Cliquez sur le crayon pour modifier, en haut à droite de votre photo de couverture</li><li>Sélectionnez votre photo de couverture</li><li>Cliquez sur <strong>Valider</strong></li></ol>'\r\n    },\r\n  ],\r\n  \"Mes versements\": [\r\n    {\r\n      title: 'Comment toucher mon versement ?',\r\n      contents: '<p>Une fois la réservation confirmée, l’utilisateur à l’origine de la réservation reçoit un code unique et dédié à votre réservation.Lorsque le service est réalisé, votre client doit vous communiquer ce code afin que vous puissiez toucher votre versement.</p><p>Une fois que vous avez votre code, rendez-vous sur votre fiche réservation depuis votre smartphone ou depuis votre ordinateur et cliquez sur “Indiquer mon code”. Saisissez les chiffres de votre code et validez.Une fois le code validé, vous recevrez votre versement sur le compte bancaire renseigné dans “Préférence de versement” dans un délai de 4 jours maximum.Si vous n’avez pas renseigné d’IBAN, vous devrez l’ajouter avant votre première prestation, dans la rubrique “Préférence de versement” de votre compte.</p>'\r\n    }, {\r\n      title: 'Pourquoi dois-je communiquer un IBAN ?',\r\n      contents: '<p>Pour devenir Alfred, il est impératif qu’un mode de versement soit renseigné dans votre compte utilisateur. En effet, après chaque service réalisé, My Alfred procède au versement du montant indiqué sur la réservation sur votre compte bancaire.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour ajouter ou supprimer votre IBAN :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Compte</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Mes préférences de versement</strong></li><li>Cliquez sur <strong>Ajouter un RIB</strong></li></ol>'\r\n    }, {\r\n      title: 'Quels sont les documents à fournir pour les versements ?',\r\n      contents: '<p>Pour que nous puissions effectuer le versement de votre prestations,vous devez nous fournir les éléments suivants en fonction de votre statut de particulier ou d’auto-entrepreneur.Ces éléments vous sont demandés lors de votre inscription et lors de la création de votre boutique.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Vous êtes un particulier :</p><br/><ul style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Votre nom et prénom</li><li>Votre date de naissance</li><li>Votre pays de résidence</li><li>Votre nationalité</li><li>Votre pièce d\\'identité</li><li>Votre compte bancaire (IBAN)</li></ul><p style=\\{\\{width: \\'100%\\'\\}\\}>Vous êtes un auto-entrepreneur, en complément des éléments ci-dessus,les éléments suivants vous sont également demandés :</p><ul style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Votre email</li><li>Nom de votre entreprise</li></ul>'\r\n    }, {\r\n      title: 'Comment puis-je retrouver mes informations de versements ?',\r\n      contents: '<p>En tant qu’Alfred, vous pouvez suivre l’ensemble de vos versements dans la rubrique performance de votre boutique.A l’aide de votre tableau de bord, suivez l’évolution de vos versements passés et à venir, et retrouvez toutes les informations sur vos versements.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour consulter vos informations de versements :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Je suisAlfred</strong></li><li>Cliquez sur l’onglet <strong>Performance</strong></li><li>Cliquez sur <strong>revenus</strong></li></ol>'\r\n    }\r\n  ],\r\n  \"Mes réservations\": [\r\n    {\r\n      title: 'Comment modifier une réservation confirmée en tant qu’Alfred ?',\r\n      contents: '<p>En tant qu’Alfred, vous pouvez modifier une réservation à la seule condition que votre utilisateur l’accepte. Si votre utilisateur l’accepte, vous pouvez modifier la date et l’horaire de votre service,son prix, le prix de votre option ou compléter le service par une prestation présente dans votre service.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier votre réservation :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Je suisAlfred</strong></li><li>Cliquez sur <strong>Mes réservations</strong></li><li>Parcourez votre fiche réservation et cliquez sur modifier en bas de votre fiche de réservation</li><li>Cliquez sur <strong>Modifier la réservation</strong></li><li>Indiquez le champs que vous souhaitez modifier(prix/prestations/option/date etc.)</li><li>Cliquez sur <strong>Envoyer une demande de modification</strong></li></ol><p>Une fois la demande de modification envoyée, vous devrez attendre la validation de votre client pour qu’elle soit modifiée. Votre fiche de réservation se mettra automatiquement à jour.</p>'\r\n    }, {\r\n      title: 'Comment annuler une réservation en tant qu’Alfred ?',\r\n      contents: \"<p>L’annulation d’une réservation entraîne du stress et est susceptible d'impacter votre client utilisateur. En tant qu’Alfred, vous pouvez annuler une réservation mais vous vous exposez à une pénalité de la part de votre client utilisateur. Si vous avez activé la réservation automatique sans demande de confirmation, vous pouvez annuler vos réservations sans pénalités mais un commentaire mentionnant que vous avez annulé la réservation sera automatiquement publié sur votre boutique.</p><p>Si vous n’avez pas activé la réservation automatique et décidez d’annuler une réservation plus de 7 jours avant la date d’exécution définie, une pénalité forfaitaire de 10€ vous sera demandée,et 20€ si l’annulation intervient 7 jours ou moins avant la date d’exécution du service définie dans la réservation. Par ailleurs, si vous annulez des réservations de trop nombreuses fois, vous ne respectez plus les CGU de My Alfred et votre boutique ne sera plus visible.</p><p>En cas d’annulation d’une réservation par un Alfred, le client utilisateur sera remboursé de la totalité des frais engagés sur la plateforme My Alfred dans le cadre de la réservation concernée.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour annuler votre réservation :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Je suisAlfred</strong></li><li>Cliquez sur <strong>Mes réservations</strong></li><li>Parcourez votre fiche réservation et cliquez sur modifier en bas de votre fiche de réservation</li><li>Cliquez sur <strong>Annuler ma réservation</strong></li><li>Choisissez le motif de l’annulation</li><li>Rédigez un message à votre client utilisateur lui expliquant que son service est annulé</li><li>Cliquez sur <strong>Enregistrer</strong></li></ol><p>A noter qu’en cas d’imprévu, vous avez la possibilité de modifier la date de la réservation avec l’accord de votre client utilisateur My Alfred.</p>\"\r\n    }, {\r\n      title: 'Quelles sont les pénalités si j’annule une réservation en tant qu’Alfred ?',\r\n      contents: '<p>En tant qu’Alfred, vous pouvez annuler une réservation mais vous vous exposez à une pénalité de la part de votre client utilisateur. Si vous avez activé la réservation automatique sans demande de confirmation, vous pouvez annuler vos réservations sans pénalités mais un commentaire mentionnant que vous avez annulé la réservation sera automatiquement publié sur votre boutique.</p><p>Si vous n’avez pas activé la réservation automatique et décidez d’annuler une réservation plusde7 jours avant la date d’exécution définie, une pénalité forfaitaire de 10€ vous sera demandée, et 20€ si l’annulation intervient 7 jours ou moins avant la date d’exécution du service définie dans la réservation. Par ailleurs, si vous annulez des réservations de trop nombreuses fois, vous ne respectez plus les CGU de My Alfred et votre boutique ne sera plus visible.</p>'\r\n    }, {\r\n      title: 'Comment rembourser mon utilisateur ?',\r\n      contents: '<p>En cas d’annulation d’une réservation par un Alfred, le client utilisateur. sera remboursé de la totalité des frais engagés sur la plateforme My Alfred dans le cadre de la réservation concernée.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour annuler votre réservation :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Je suisAlfred</strong></li><li>Cliquez sur <strong>Mes réservations</strong></li><li>Parcourez votre fiche réservation et cliquez sur modifier en bas de votre fiche de réservation</li><li>Cliquez sur <strong>Annuler ma réservation</strong></li><li>Choisissez le motif de l’annulation</li><li>Rédigez un message à votre client utilisateur lui expliquant que son service est annulé</li><li>Cliquez sur <strong>Enregistrer</strong></li></ol><p>A noter qu’en cas d’imprévu, vous avez la possibilité de modifier la date de la réservation avec l’accord de votre client utilisateur My Alfred.</p>'\r\n    }\r\n  ],\r\n  \"Mon compte\": [\r\n    {\r\n      title: 'Comment supprimer sa boutique ?',\r\n      contents: '<p>A tout moment, vous avez la possibilité de supprimer votre boutique de services My Alfred.La suppression de votre boutique entraîne l’annulation de l’ensemble des réservations acceptées à venir, et leur remboursement.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour supprimer votre boutique :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur <strong>Paramètres</strong></li><li>Cliquez sur <strong>Supprimer</strong> dans la rubrique je souhaite supprimer ma boutique de services</li></ol><p>Saisissez votre mot de passe. Cette étape nous permet de nous assurer que vous êtes bien à l’initiative de la suppression de votre compte. Attention, cette action est irrémédiable.</p>'\r\n    }, {\r\n      title: 'Comment gérer mes modes de versement ?',\r\n      contents: '<p>Après chaque prestation réalisée par un Alfred, un versement du montant indiqué sur la fiche de réservation lui sera adressé sur le mode de versement renseigné dans son compte utilisateur.A tout moment, vous pouvez ajouter ou supprimer un mode de versement.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour ajouter ou modifier votre préférence de versement :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur <strong>Préférences de versement</strong></li><li>Cliquez sur <strong>Ajouter un RIB</strong></li><li>Renseignez votre IBAN</li></ol><p>Vous pourrez ensuite modifier ou supprimer votre RIB.</p>'\r\n    }\r\n  ],\r\n}\r\n\r\nconst FAQ_CLIENT = {\r\n  \"Identification et vérification\": [\r\n    {\r\n      title: 'Fonctionnement ?',\r\n      contents: \"<p>Chez My Alfred nous souhaitons que les membres puissent proposer et consommer des services en toute sécurité. C’est la raison pour laquelle , nous vous laissons la possibilité de nous fournir une pièce d'identité officielle lorsque vous êtes utilisateur et souhaitez simplement consommer des services. Lorsque vous souhaitez proposer vos services et devenir Alfred, nous vous demanderons une pièce d’identité. Certains clients seront sensibles à cette vérification d’identité et feront plus facilement le choix de votre boutique. Cependant, votre pièce d'identité ne sera jamais partagée ni visible par un autre utilisateur de My Alfred.</p>\"\r\n    }, {\r\n      title: 'A quel moment dois-je fournir une pièce d\\'identité ?',\r\n      contents: \"<p>Pour devenir Alfred, vous devez fournir une pièce d’identité en règle qui peut être soit une carte nationale d’identité soit un passeport. Vous pouvez fournir cette pièce d’identité. lors de la création de votre boutique ou plus tard dans le menu Votre profil. La vérification de votre pièce d'identité est indispensable pour Devenir Alfred et pour que votre boutique soit visible des autres membres My Alfred.</p><p>Vous pouvez à tout moment insérer votre pièce d\\'identité .</p><p style=\\{\\{width: \\'100%\\'\\}\\}>c</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Profil</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Confiance & vérification</strong> de votre compte</li><li>Sélectionnez le type de pièce Passeport ou Carte nationale d’identité</li><li>Cliquez sur Recto pour télécharger votre photo de pièce d’identité</li><li>Cliquez sur Verso pour ajouter le verso de votre pièce d’identité.</li></ol>\"\r\n    }, {\r\n      title: 'Quel type de pièce d\\'identité puis-je fournir ?',\r\n      contents: '<p style=\\{\\{width: \\'100%\\'\\}\\}>Vous pouvez ajouter une des pièces d’identité officielle suivante sur la plateforme My Alfred :</p><br/><ul style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Passeport</li><li>Carte Nationale d’Identité</li></ul><p>Si vous ajoutez votre carte Nationale d’identité, vous devrez télécharger 2 photos à savoir,le recto et le verso de votre document. Si vous ajoutez votre passeport,1 seule photo à télécharger est nécessaire mais assurez vous que que les numéros situés en bas de la page du passeport où figure votre photo soient bien visibles.</p>'\r\n    }, {\r\n      title: 'Quelles sont les données partagées avec votre pièce d’identité ?',\r\n      contents: '<p style=\\{\\{width: \\'100%\\'\\}\\}>Si vous acceptez de fournir une pièce d\\'identité officielle, les informations suivantes peuvent être visibles par les autres utilisateurs de la plateforme My Alfred :</p><br/><ul style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>La confirmation que votre pièce d\\'identité a bien été ajoutée</li><li>Votre photo de profil et le prénom et le nom figurant sur votre profil</li></ul><p>La photo de votre carte d’identité ainsi que les informations (à l\\’exception de votre nom et prénom)ne seront jamais visibles par les autres utilisateurs de la plateforme My Alfred.</p>'\r\n    }, {\r\n      title: 'Comment est stockée ou supprimée la photo de ma pièce d\\'identité ?',\r\n      contents: '<p>Le stockage de la photo de votre pièce d\\'identité officielle est régie par notre <Linkhref={\\'/\\'}><a> Politique de confidentialité.</a></Link>Il est préférable de ne pas supprimer votre pièce d’identité. Si vous avez des réservations pour lesquelles les clients ont exigé une pièce d’identité vérifiée, nous annulerons toutes les réservation concernées à venir.Cependant, vous pouvez demander la suppression de la photo de votre pièce d\\'identité 90 jours après la fin de votre dernière réservation.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour supprimer la photo de votre pièce d\\'identité :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Consultez <strong>votre Profil</strong> sur my-alfred.io</li><li>Cliquez sur l’onglet <strong>Confiance & vérification</strong> de votre compte</li><li>Cliquez sur la corbeille à côté de votre pièce d’identité pour la supprimer</li></ol>'\r\n    }],\r\n  \"Mes réservations\": [\r\n    {\r\n      title: 'Puis-je modifier le prix d’une réservation en attente ou confirmée ?',\r\n      contents: '<p>Chaque réservation peut-être modifiée quelque soit son statut. En revanche, votre client utilisateur doit impérativement accepter cette modification pour que la réservation retrouve son statut confirmée.</p><p>Si votre réservation est confirmée mais que vous choisissez de la modifier, son statut passera de réservation confirmée à réservation en attente jusqu’à ce que votre client utilisateur confirme les modifications.</p><p>Si votre utilisateur ne valide pas vos modifications dans un délai 48h,la réservation est expirée. Si votre utilisateur refuse vos modifications, la réservation est annulée et votre client sera remboursé de l’intégralité du montant engagé.</p>'\r\n    }, {\r\n      title: 'Puis-je planifier mon service sur plusieurs jours ?',\r\n      contents: \"<p>Dans le cadre de services susceptibles de se dérouler sur plusieurs journées ou plusieurs créneaux horaires, nous vous recommandons de vous rapprocher de votre client utilisateur. afin d'établir ensemble, un planning d’intervention.Une fois le planning d’intervention établi, vous pourrez renseigner ce dernier dans votre fiche réservation et dans votre calendrier; celui de votre client se mettra automatiquement à jour(périodes renseignées indisponibles).</p><p>A noter que la version publique de votre calendrier ne comporte que des périodes disponibles ou indisponibles, et non le contenu de vos services.</p>\"\r\n    }, {\r\n      title: 'Puis-je échanger avec mon Alfred ou mon client ?',\r\n      contents: '<p>Les utilisateurs sont en mesure de vous contacter afin d’obtenir des renseignements complémentaires sur l’un de vos services. Ils pourront vous contacter mais leurs coordonnées n\\'apparaîtront pas,et vous ne pourrez pas leur communiquer votre numéro de téléphone et email personnel. Dès lors qu’une demande de réservation est envoyée, vous pourrez échanger avec votre utilisateur ou votre alfred depuis la messagerie de My Alfred.En revanche, dès lors qu’une réservation est confirmée, vous pourrez échanger depuis la plateforme My Alfred, et les coordonnées de votre Alfred ou de l’utilisateur seront échangées pour un maximum de fluidité dans la réservation de la prestation.</p><p>Pour retrouver vos messages en tant qu’utilisateur, il vous suffit de vous rendre dans l’onglet<strong> Messages</strong>. Pour retrouver vos messages en tant qu’Alfred, il vous suffit de cliquer sur l’onglet<strong> Je suis Alfred</strong>, et de vous rendre dans la rubrique <strong>Messages</strong>.</p>'\r\n    }\r\n  ],\r\n  \"Mon compte\": [\r\n    {\r\n      title: 'Comment supprimer son compte ?',\r\n      contents: \"<p>A tout moment, vous avez la possibilité de supprimer votre compte My Alfred. La suppression de votre compte est irrémédiable.Si vous êtes Alfred, la suppression du compte implique la suppression de votre boutique, l'annulation de l’ensemble des réservations acceptées à venir, et leur remboursement.Si vous êtes simple utilisateur, la suppression de votre compte implique l’annulation de l'ensemble des réservations acceptées à venir, moyennant - en fonction des conditions d’annulation de(s) Alfred impacté(s) par cette annulation - des frais d’annulation.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour supprimer votre compte :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur <strong>Paramètres</strong></li><li>Cliquez sur <strong>Désactiver</strong> dans la rubrique je souhaite désactiver mon compte</li></ol><p>Saisissez votre mot de passe. Cette étape nous permet de nous assurer que vous êtes bien à l’initiative de la suppression de votre compte.</p>\"\r\n    }, {\r\n      title: 'Comment gérer mes notifications ?',\r\n      contents: \"<p>Vos notifications peuvent être paramétrées depuis votre compte. Cela vous permet de choisir le moyen de communication le plus adapté à vos besoins ou à vos habitudes(SMS, emails, push, appel téléphonique).Les notifications sont classées par rubrique et vous pouvez choisir à tout moment, de les modifier ou de les désactiver.</p><p>Seule la rubrique Assistance du compte doit impérativement avoir l'une des options de notifications activée. En effet, dans le cadre de vos réservations de services, des informations légales,des questions de sécurité et de confidentialité, et pour répondre à vos demandes adressées à notre assistance utilisateur, nous devons être en mesure de vous envoyer des messages. Pour votre sécurité,vous ne pouvez pas désactiver les notifications par email et nous pourrions vous contacter par téléphone ou d’autres moyens si besoin.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier le paramétrage de vos notifications, il vous suffit de :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur la rubrique <strong>Notifications</strong></li><li>Cliquez sur <strong>Enregistrer</strong></li></ol><p>Saisissez votre mot de passe. Cette étape nous permet de nous assurer que vous êtes bien à l’initiative de la suppression de votre compte.</p>\"\r\n    }, {\r\n      title: 'Comment gérer mes modes de paiement ?',\r\n      contents: '  <p>Depuis votre compte, vous pouvez gérer l’ensemble de vos modes de paiement.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Les différents moyens de paiements de My Alfred sont les suivants :</p><br/><ul style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Carte de paiement</li><li>Crédit (remboursement crédité sur votre compte)</li><li>Coupons (programme fidélité, parrainage, code promotionnel etc.)</li></ul><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur la rubrique <strong>Mes moyens de paiement</strong></li></ol>'\r\n    }, {\r\n      title: 'Comment suivre mes transactions ?',\r\n      contents: \"<p>En tant qu’utilisateur de My Alfred, vous pouvez suivre l’ensemble de vos transactions depuis la rubrique “Historique de transactions” de votre compte. Les transactions concernent les paiements et les versements.Vous pourrez ainsi retrouver vos transactions à venir et vos transactions passées.</p><p>En tant qu’Alfred, vous avez aussi la possibilité de suivre vos transactions dans la rubrique performance de votre boutique. Vous trouverez un tableau de bord complet vous permettant de suivre l'évolution des transactions, de suivre vos versements, et d'estimer votre volume de transactions à venir.</p>\"\r\n    }, {\r\n      title: 'Comment changer mon mot de passe ?',\r\n      contents: '<p>A tout moment, vous pouvez changer votre mot de passe sur My Alfred.Pour des raisons de sécurité,nous vous conseillons de changer votre mot de passe 3 fois par an.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour changer votre mot de passe :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur <strong>Sécurité</strong></li></ol><p>Saisissez votre mot de passe actuel, puis saisissez le nouveau mot de passe, puis répétez le mot de passe.Si les mots de passe correspondent, vous pourrez enregistrer et votre mot de passe sera mis à jour.Attention, le mot de passe doit contenir 8 caractères au minimum, et demeure strictement confidentiel,vous ne devez en aucun cas le partager, le divulguer pour quelque raison que ce soit.</p>'\r\n    }, {\r\n      title: 'Vous avez oublié votre mot de passe ?',\r\n      contents: ' <p>Si vous avez oublié votre mot de passe lorsque vous souhaitez vous connecter, cliquez sur “J’ai oublié mon mot de passe” sur la page de connexion de My Alfred. Un lien de récupération de votre compte vous sera envoyé par email afin que vous puissiez créer un nouveau mot de passe et retrouver votre compte.Si vous ne recevez pas d’e-mail, pensez à jeter un coup d’oeil dans vos courriers indésirables;) !</p>'\r\n    }, {\r\n      title: 'Puis-je connecter My Alfred à mon compte Gmail ?',\r\n      contents: '<p>Lors de l’inscription, vous pouvez choisir de vous connecter au travers de Gmail afin de gagner du temps sur votre inscription et synchroniser vos contacts sur My Alfred. A tout moment,vous pouvez supprimer la connexion entre My Alfred et votre Gmail.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour cela:</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur <strong>Applications connectées</strong></li><li>Cliquez sur <strong>Supprimer</strong> dans l’encart de l’application Gmail</li></ol><p style=\\{\\{width: \\'100%\\'\\}\\}>Si vous souhaitez connecter votre Gmail à My Alfred après votre inscription :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur <strong>Applications connectées</strong></li><li>Cliquez sur <strong>Connecter</strong> dans l’encart de l’application Gmail</li><li>Acceptez la connexion My Alfred sur votre Gmail</li></ol><p>A noter que les applications connectées sont soumises à nos conditions générales d’utilisation.</p>'\r\n    }, {\r\n      title: 'Puis-je connecter My Alfred à mon compte Facebook ?',\r\n      contents: '<p>Lors de l’inscription, vous pouvez choisir de vous connecter au travers de Facebook afin de gagner du temps sur votre inscription et synchroniser vos contacts sur My Alfred. A tout moment,vous pouvez supprimer la connexion entre My Alfred et votre Facebook.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour cela:</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur <strong>Applications connectées</strong></li><li>Cliquez sur <strong>Supprimer</strong> dans l’encart de l’application Facebook</li></ol><p style=\\{\\{width: \\'100%\\'\\}\\}>Si vous souhaitez connecter votre Facebook à My Alfred après votre inscription :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur <strong>Applications connectées</strong></li><li>Cliquez sur <strong>Connecter</strong> dans l’encart de l’application Facebook</li><li>Acceptez la connexion My Alfred sur votre Facebook</li></ol><p>A noter que les applications connectées sont soumises à nos conditions générales d’utilisation.</p>'\r\n    }, {\r\n      title: 'Comment empêcher l’indexation de mon profil et ma boutique sur les moteurs de recherche ?',\r\n      contents: \"<p>A tout moment et conformément à notre politique de confidentialité, vous pouvez choisir d'empêcher l'indexation de votre profil, de votre boutique et de vos services parles moteurs de recherche.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour empêcher l’indexation de votre profil et de votre boutique par les moteurs de recherche :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mes paramètres</strong></li><li>Cliquez sur <strong>Paramètres</strong></li><li>Désactiver la ligne ‘’J\\'accepte que mon profil et ma boutique soient indexés par les moteurs de recherche”</li></ol>\"\r\n    }, {\r\n      title: 'Comment gérer mes parrainages ?',\r\n      contents: ''\r\n    }, {\r\n      title: 'A quoi sert le parrainage ?',\r\n      contents: ' <p>Le parrainage vous permet de gagner des crédits sur la plateforme My Alfred en contribuant à l’évolution de la communauté My Alfred. En invitant vos amis, votre famille, vos proches,à devenir Alfred ou à utiliser My Alfred, vous gagnerez 20% du montant de sa première réservation,crédité dans votre compte, rubrique “Mode de paiement”.</p>'\r\n    }\r\n  ],\r\n  \"Mon profil\": [\r\n    {\r\n      title: 'Comment modifier mon profil utilisateur ?',\r\n      contents: '<p>Vous pouvez à tout moment modifier votre profil et mettre à jour vos informations personnelles en vous rendant dans la rubrique Mon profil.Votre profil contient des informations obligatoires comme votre nom,prénom, votre date de naissance ainsi que votre email.Vous pouvez choisir d’indiquer des informations complémentaires pour vos utilisateurs, comme les langues que vous parlez, votre emploi, vos diplômes...Ces informations seront visibles par les autres utilisateurs sur votre profil.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour accéder à votre profil :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mon profil</strong></li><li>Cliquez sur <strong>Modifier le profil</strong></li></ol>'\r\n    }, {\r\n      title: 'A quoi correspondent les adresses de prestations ?',\r\n      contents: '<p style=\\{\\{width: \\'100%\\'\\}\\}>Lorsque vous souhaitez réserver un service, notre plateforme vous propose des Alfred en fonction de leur périmètre d’intervention. Dans ce cadre, nous utiliserons l’adresse de prestation que vous aurez indiquée pour la prestation de service commandée. Vous pouvez à tout moment ajouter ou modifier vos adresses de prestations.</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mon profil</strong></li><li>Cliquez sur <strong>Mes adresses de prestations</strong></li></ol>'\r\n    }, {\r\n      title: 'Puis-je avoir plusieurs adresses de prestation ?',\r\n      contents: '<p>Vous pouvez choisir de renseigner plusieurs adresses de prestations dans le cadre de vos réservations sur My Alfred. Dans votre profil, rubrique “Mes adresses de prestations”, vous pouvez ajouter, supprimer, modifier vos adresses de prestations. La première adresse saisie sera,par défaut, votre adresse principale, ce qui signifie qu’elle sera l’adresse sélectionnée par défaut pour vos réservations. A tout moment vous pouvez changer d’adresse par défaut en modifiant votre adresse principale.</p><p>Soyez rassuré(s) ! Vos adresses ne seront pas visibles des autres utilisateurs, seuls lesAlfred qui auront reçu une réservation et l’auront confirmé, disposeront de votre adresse de prestation pour le service concerné.</p>'\r\n    }, {\r\n      title: 'Comment gérer ma photo de profil ?',\r\n      contents: '<p>La photo de votre profil sera visible des utilisateurs du site et leur permettra de déjà vous connaître ! Pour ajouter, modifier ou supprimer une photo de profil,rendez-vous dans la rubrique“Photo” de votre profil. Si vous souhaitez supprimer votre photo de profil, cliquez sur la corbeille en haut à droit de votre photo. Si vous souhaitez ajouter ou supprimer une photo, cliquez sur “Télécharger une photo depuis votre ordinateur”.</p><p>Conseil : Téléchargez une photo claire et lumineuse, de bonne qualité.Pour un rendu optimal,la photo doit être cadrée, sans lunette de soleil, en regardant l’objectif, avec seulement vous sur la photo.</p>'\r\n    }, {\r\n      title: 'Comment vérifier mon email ?',\r\n      contents: \"<p>Lors de votre inscription, nous vous demanderons de renseigner votre adresse email.Un profil dont l’email est vérifié donne plus confiance aux autres utilisateurs de la plateforme. Pour confirmer votre adresse email, vous devez simplement cliquer sur‘’je confirme mon email’’ dans l'email reçu lors de votre inscription. Si vous n’avez pas reçu d’email,nous vous invitons à vérifier votre email ou à consulter vos spams. A tout moment, vous avez la possibilité de modifier votre email et/ou de demander un nouvelle confirmation de votre email.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier votre adresse email :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mon profil</strong></li><li>Cliquez sur <strong>Confiance et vérification</strong></li><li>Modifiez votre email</li><li>Cliquez sur Enregistrer</li></ol><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour demander une nouvelle vérification de votre adresse email :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mon profil</strong></li><li>Cliquez sur <strong>Confiance et vérification</strong></li><li>Cliquez sur Envoyer email de vérification</li><li>Vérifiez ensuite votre boîte d’emails et cliquez sur ‘’je confirme mon email’’ dans l'email que vous avez reçu.</li></ol>\"\r\n    }, {\r\n      title: 'Comment vérifier mon téléphone ?',\r\n      contents: '<p>Lors de votre inscription, vous êtes invité(s) à renseigner et à vérifier votre numéro de téléphoneportable. L’ajout d’un téléphone vérifié permet aux autres utilisateurs de la plateforme de disposer d’un moyen de vous contacter lors d’une réservation. Une vérification du numéro de téléphone portable est demandée aux Alfreds lors de la création de leur boutique de services et aux utilisateurs lors de la réservation d’un service auprès d’un Alfred. Vous pouvez à tout moment modifier ou demander une nouvelle vérification de votre téléphone portable.</p><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour modifier votre téléphone portable :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mon profil</strong></li><li>Cliquez sur <strong>Confiance et vérification</strong></li><li>Modifiez votre téléphone portable</li><li>Cliquez sur Enregistrer</li></ol><p style=\\{\\{width: \\'100%\\'\\}\\}>Pour demander une nouvelle vérification de votre téléphone portable :</p><br/><ol style=\\{\\{fontFamily: \\'Helvetica\\', fontSize: \\'0.9rem\\'\\}\\}><li>Rendez-vous sur my-alfred.io, cliquez sur <strong>Mon profil</strong></li><li>Cliquez sur <strong>Confiance et vérification</strong></li><li>Cliquez sur Envoyer SMS de vérification</li><li>Saisir le code à 4 chiffres reçu par SMS sur votre téléphone</li></ol>'\r\n    }\r\n  ],\r\n\r\n}\r\n\r\nconst FAQ={\r\n  'alfred': FAQ_ALFRED,\r\n  'client': FAQ_CLIENT,\r\n}\r\nmodule.exports = {\r\n    CESU_NOTICE, OUTSIDE_PERIMETER, SCHEDULE_TITLE, SCHEDULE_SUBTITLE,\r\n    getMangopayMessage, SHOP_CREATION_SUCCESSFUL, ID_CARD_CONFIRM_DELETION,\r\n    REGISTRATION_PROOF_CONFIRM_DELETION, INFOBAR_MESSAGE, SHOWMORE, SEARCHBAR, BANNER_PRESENTATION,\r\n    CATEGORY, BECOME_ALFRED, RESA_SERVICE, HOW_IT_WORKS, NEWS_LETTER, NAVBAR_MENU,\r\n    SHOP, CMP_PRESENTATION, BOOKING, FAQ\r\n};\r\n","const checkPasswordFormat = pass => (pass.match('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})'));\r\nconst arePasswordsEquals = (pass1, pass2) => (pass1 === pass2);\r\n\r\n\r\nconst checkPass1 = pass => {\r\n  if (pass === '') {\r\n    return {check: false};\r\n  } else if (checkPasswordFormat(pass)) {\r\n    return {check: true};\r\n  }\r\n  return {\r\n    error: '8 caractères minimum dont une majuscule, une minuscule et un chiffre',\r\n    check: false,\r\n  };\r\n};\r\n\r\n\r\nconst checkPass2 = (pass1, pass2) => {\r\n  if (pass2 === '') {\r\n    return {check: false};\r\n  } else if (arePasswordsEquals(pass1, pass2)) {\r\n    return {check: true};\r\n  }\r\n\r\n  return {\r\n    error: 'Les mots de passe saisis sont différents',\r\n    check: false,\r\n  };\r\n};\r\n\r\nmodule.exports = {\r\n  checkPass1,\r\n  checkPass2,\r\n};\r\n","class RegExpParam extends RegExp {\r\n\r\n  constructor(reg, repl) {\r\n    super(reg);\r\n    this.repl = repl;\r\n  }\r\n\r\n  [Symbol.replace](str) {\r\n    return RegExp.prototype[Symbol.replace].call(this, str, this.repl);\r\n  }\r\n}\r\n\r\nconst fillSms = (pattern, values) => {\r\n  const r = RegExp('{{\\\\s*params.([^\\\\s]+)\\\\s*}}');\r\n  while (found = r.exec(pattern)) {\r\n    const param = found[1];\r\n    if (values[param] == undefined) {\r\n      console.error(`Missing param ${param}`);\r\n      return null;\r\n    }\r\n    pattern = pattern.replace(new RegExpParam(`{{\\\\s*params.${param}\\\\s*}}`, values[param]));\r\n  }\r\n  return pattern;\r\n};\r\n\r\nconst isPhoneOk = value => {\r\n  if (!value) {\r\n    return false;\r\n  }\r\n  if (value.length == 10 && value.startsWith('0')) {\r\n    return true;\r\n  }\r\n  if (value.length == 11 && value.startsWith('33')) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nmodule.exports = {fillSms, isPhoneOk}\r\n","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/core/Dialog\");","module.exports = require(\"@material-ui/core/DialogActions\");","module.exports = require(\"@material-ui/core/DialogContent\");","module.exports = require(\"@material-ui/core/DialogContentText\");","module.exports = require(\"@material-ui/core/DialogTitle\");","module.exports = require(\"@material-ui/core/Divider\");","module.exports = require(\"@material-ui/core/FormControl\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/Hidden\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/Input\");","module.exports = require(\"@material-ui/core/InputAdornment\");","module.exports = require(\"@material-ui/core/InputLabel\");","module.exports = require(\"@material-ui/core/Menu\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@material-ui/core/MobileStepper\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@material-ui/core/Select\");","module.exports = require(\"@material-ui/core/Slide\");","module.exports = require(\"@material-ui/core/SwipeableDrawer\");","module.exports = require(\"@material-ui/core/Switch\");","module.exports = require(\"@material-ui/core/Tab\");","module.exports = require(\"@material-ui/core/Tabs\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/Toolbar\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/core/styles/withStyles\");","module.exports = require(\"@material-ui/icons/AlarmOn\");","module.exports = require(\"@material-ui/icons/Clear\");","module.exports = require(\"@material-ui/icons/Close\");","module.exports = require(\"@material-ui/icons/Facebook\");","module.exports = require(\"@material-ui/icons/InsertEmoticon\");","module.exports = require(\"@material-ui/icons/Instagram\");","module.exports = require(\"@material-ui/icons/KeyboardArrowLeft\");","module.exports = require(\"@material-ui/icons/KeyboardArrowRight\");","module.exports = require(\"@material-ui/icons/LinkedIn\");","module.exports = require(\"@material-ui/icons/LockOpenOutlined\");","module.exports = require(\"@material-ui/icons/LockOutlined\");","module.exports = require(\"@material-ui/icons/MailOutline\");","module.exports = require(\"@material-ui/icons/Menu\");","module.exports = require(\"@material-ui/icons/PersonOutline\");","module.exports = require(\"@material-ui/icons/PhoneIphoneOutlined\");","module.exports = require(\"@material-ui/icons/PhotoCamera\");","module.exports = require(\"@material-ui/icons/Search\");","module.exports = require(\"@material-ui/icons/Textsms\");","module.exports = require(\"@material-ui/icons/Tune\");","module.exports = require(\"@material-ui/icons/Twitter\");","module.exports = require(\"@material-ui/icons/VerifiedUser\");","module.exports = require(\"@material-ui/icons/Visibility\");","module.exports = require(\"@material-ui/icons/VisibilityOff\");","module.exports = require(\"algolia-places-react\");","module.exports = require(\"axios\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"crypto\");","module.exports = require(\"date-fns/locale/fr\");","module.exports = require(\"geolib/es/convertDistance\");","module.exports = require(\"geolib/es/getDistance\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mangopay2-nodejs-sdk/lib/models/KycDocumentStatus\");","module.exports = require(\"moment\");","module.exports = require(\"next-server/dist/lib/utils\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"prop-types-exact\");","module.exports = require(\"querystring\");","module.exports = require(\"react\");","module.exports = require(\"react-cookies\");","module.exports = require(\"react-datepicker\");","module.exports = require(\"react-dates\");","module.exports = require(\"react-number-format\");","module.exports = require(\"react-social-login-buttons\");","module.exports = require(\"react-toastify\");","module.exports = require(\"url\");","module.exports = require(\"url-parse\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AA1BA;AACA;AA2BA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAMA;AACA;AAhCA;AACA;AAiCA;;;;;;;;;;;;AC5CA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAPA;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAIA;AANA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAYA;AAAA;AAAA;AACA;AACA;AAdA;AAgBA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAzCA;AA2CA;AAAA;AAAA;AACA;AACA;AA7CA;AA+CA;AACA;AACA;AA9CA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAwCA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAcA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAZA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AACA;AAlKA;AACA;AAmKA;;;;;;;;;;;;AC3LA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAVA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AApFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAFA;AACA;AAHA;AAQA;AAAA;AAAA;AACA;AACA;AAVA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAcA;AACA;AA5CA;AACA;AA6CA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;AC9DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AAFA;AAsFA;AAAA;AAAA;AACA;AACA;AAxFA;AAsGA;AAAA;AAAA;AACA;AACA;AAxGA;AAiHA;AACA;AACA;AAFA;AAIA;AACA;AAtHA;AA4IA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAxJA;AA0JA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAtKA;AAyKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA/NA;AAiOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAMA;AAEA;AACA;AACA;AACA;;;;;;;AAMA;AACA;AAzPA;AA6PA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAGA;AACA;AAIA;AACA;AApRA;AAsRA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA1RA;AA4RA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAhSA;AAkSA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAtSA;AAwSA;AAAA;AAAA;AACA;AACA;AA1SA;AA4SA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApTA;AAsTA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA5TA;AA8TA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AApUA;AAkvBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAxvBA;AA2vBA;AAAA;AAAA;AACA;AACA;AA3vBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AADA;AAIA;AACA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA2LA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAgBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAoBA;AACA;AACA;AAAA;AACA;AAAA,+CAqBA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAZA;AAcA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AAXA;AAcA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAVA;AAaA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAVA;AAiBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AATA;AAeeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAbA;AAiBA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AA3ZA;AAwaA;AACA;AAeA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAGA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AADA;AAMA;AACA;AAAA;AAAA;AAAA;AAjBA;AAwBA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AA9zBA;AACA;AAg0BA;;;;;;;;;;;;AC34BA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAHA;AA5JA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAQA;AACA;AACA;AAVA;AAYA;AAAA;AAAA;AACA;AACA;AAZA;AACA;AADA;AAGA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAcA;AAAA;AAAA;AAEA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAOA;AACA;AAvDA;AACA;AAwDA;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAOA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAJA;AAWA;AACA;AADA;AAIA;AACA;AADA;AAjBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAXA;;;;;;;;;;;;AC3HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA,gEAMA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAAA;AAeA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA,2CAGA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAQA;AACA;AAtJA;AACA;AAuJA;;;;;;;;;;;;ACrnDA;AACA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAyDA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAlEA;AAoEA;AAAA;AAAA;AACA;AACA;AAtEA;AAwEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA3EA;AA6EA;AAAA;AAAA;AACA;AACA;AA/EA;AAiFA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApFA;AAsFA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA5FA;AA8FA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAxGA;AA0GA;AAAA;AAAA;AACA;AACA;AA5GA;AA6GA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAhHA;AAkHA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAjIA;AAmIA;AAAA;AAAA;AACA;AACA;AArIA;AAuIA;AAAA;AAAA;AACA;AACA;AAzIA;AA2IA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA7JA;AAmKA;AAAA;AAAA;AAAA;AACA;AACA;AArKA;AAmLA;AAAA;AAAA;AACA;AACA;AArLA;AAuLA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AACA;AAtMA;AAwMA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAXA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AATA;AAcA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AASA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AAAA;AAZA;AAeA;AACA;AAnBA;AAPA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAUA;AACA;AAvUA;AAyUA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AApWA;AAsWA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAZA;AAiBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAZA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AADA;AAEA;AACA;AACA;AAJA;AAKA;AALA;AAMA;AANA;AAOA;AAAA;AAAA;AAAA;AAPA;AAQA;AARA;AASA;AAAA;AAAA;AATA;AAUA;AACA;AAXA;AAmBA;AACA;AAAA;AAAA;AACA;AAHA;AAUA;AACA;AArbA;AAwbA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAdA;AAkBA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAUA;AAAA;AAKA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AAAA;AAZA;AAcA;AACA;AAlBA;AALA;AA8BA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AApBA;AANA;AAkCA;AAAA;AAAA;AACA;AACA;AAHA;AAUA;AACA;AAtkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAsBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAuGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAwZA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAQA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAPA;AAYA;AAAA;AAGA;AAAA;AAIA;AAAA;AAIA;AAAA;AAIA;AAAA;AAGA;AAAA;AAIA;AAAA;AAIA;AAAA;AAQA;AAAA;AAGA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAVA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAaA;AAAA;AAUA;AACA;AAnwBA;AACA;AAowBA;;;;;;;;;;;;ACx0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAjBA;AAwBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAaA;AACA;AAxDA;AACA;AAyDA;;;;;;;;;;;;;;ACrEA;AAEA;AAAA;AAAA;;;;;;;;;;;ACFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpjPA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AASA;AACA;AACA;AAFA;AAVA;AACA;AAeA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAkCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AA0CA;AACA;AAFA;AAYA;AAAA;AADA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAgCA;AAAA;AACA;AADA;AA+BA;AAAA;AAAA;AAAA;AAqDA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAuCA;AAAA;AAAA;AAAA;AA+CA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAuEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AADA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AAuDA;AAAA;AAAA;AAAA;AAoDA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AA0CA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAuCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAyCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AA2CA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAWA;AAAA;AACA;AAFA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AA6DA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA;AAAA;AACA;AADA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AA2BA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AADA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAyBA;AACA;AAnkCA;AACA;AAqkCA;;;;;;;;;;;;;;AC5lCA;AACA;AAQA;;;;;;;;;;;;ACTA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAZA;AAgBA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AADA;AA1FA;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AA/BA;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AATA;AAcA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AADA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAvBA;AA2BA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AATA;AAaA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAfA;AAmBA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AAUA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AASA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AADA;AADA;AAKA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAbA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAbA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAhBA;AAoBA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAZA;AAgBA;AACA;AADA;AA9cA;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAXA;AAXA;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAvBA;;;;;;;;;;;;;;ACAA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACnCA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApQA;AAuQA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAhBA;AAuBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;;;;;;;;;;;;;;AC5VA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;;;;;;;;;;;;;;AC5GA;AACA;AACA;;;AAAA;AAKA;AAEA;AAEA;;;AAAA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAIA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAIA;AACA;AAEA;AACA;;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAlGA;AAyGA;AACA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAlFA;AA0FA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;;;;;;;;;;;;;;ACrUA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;;;AC9BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAWA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACtsourceRoot":""}