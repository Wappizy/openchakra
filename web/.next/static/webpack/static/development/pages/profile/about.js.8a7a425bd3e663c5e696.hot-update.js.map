{"version":3,"file":"static/webpack/static\\development\\pages\\profile\\about.js.8a7a425bd3e663c5e696.hot-update.js","sources":["webpack:///./components/ListAlfredConditions/ListAlfredConditions.js","webpack:///./components/Skills/Skills.js","webpack:///./static/css/components/Layout/LayoutMobileProfile/LayoutMobileProfile.js","webpack:///./static/css/components/ListAlfredConditions/ListAlfredConditions.js"],"sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InfoWithPics from \"../InfoWithPics/InfoWithPics\";\r\nimport styles from '../../static/css/components/ListAlfredConditions/ListAlfredConditions'\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n\r\nclass ListAlfredConditions extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n  render() {\r\n    const{columnsXl, columnsLG, columnsMD, columnsSm, columnsXS, wrapperComponentProps, classes} = this.props;\r\n    return(\r\n      <Grid container className={classes.mainContainerListAlfred}>\r\n        {\r\n          wrapperComponentProps ?\r\n          Object.keys(wrapperComponentProps).map((res, index) => (\r\n            <Grid item xl={columnsXl} lg={columnsLG} md={columnsMD} sm={columnsSm} xs={columnsXS} key={index}>\r\n              <InfoWithPics  {...this.props} data={wrapperComponentProps[res]}/>\r\n            </Grid>\r\n          )) : null\r\n        }\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles (styles) (ListAlfredConditions)\r\n","const {setAxiosAuthentication}=require('../../utils/authentication')\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios'\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport styles from './SkillsStyle';\r\n\r\nconst {SKILLS}=require('../../utils/consts');\r\nimport Topic from \"../../hoc/Topic/Topic\"\r\n\r\nclass Skills extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const skill_values =  Object.keys(SKILLS).reduce( (acc, curr) => ({...acc, [curr]:0}), {});\r\n    this.state = {\r\n      alfred: [],\r\n      dense: false,\r\n      secondary: false,\r\n      valueRating: 3,\r\n      isChecked: false,\r\n      skill_values: skill_values,\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    setAxiosAuthentication()\r\n\r\n    if (this.props.alfred) {\r\n      axios.get(`/myAlfred/api/reviews/${this.props.alfred}`)\r\n        .then( res => {\r\n          var skill_values = this.state.skill_values;\r\n          const skills = res.data;\r\n          Object.keys(skills).forEach( key => {\r\n            if (Object.keys(SKILLS).includes(key)) {\r\n              skill_values[key]+=skills[key]\r\n            }\r\n          });\r\n          this.setState({ skill_values:skill_values})\r\n        }).catch(err => console.error(err))\r\n    }\r\n    if (this.props.review) {\r\n      axios.get(`/myAlfred/api/reviews/review/${this.props.review}`)\r\n        .then( res => {\r\n          var skill_values = this.state.skill_values;\r\n          const skills = res.data.note_alfred;\r\n          Object.keys(skills).forEach( key => {\r\n            if (Object.keys(SKILLS).includes(key)) {\r\n              skill_values[key]+=skills[key]\r\n            }\r\n          });\r\n          this.setState({ skill_values:skill_values})\r\n        }).catch(err => console.error(err))\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {classes, hideCount, onClick, skills} = this.props;\r\n    const {skill_values}=this.state;\r\n\r\n    const skillClicked = (e, name) => {\r\n      e.stopPropagation();\r\n      if (onClick) {\r\n        onClick(name);\r\n      }\r\n    };\r\n\r\n\r\n    return (\r\n      <Topic titleTopic={'Compliments'}>\r\n        <Grid container className={classes.skillsContainer} spacing={3}>\r\n          { Object.keys(SKILLS).map(skill => {\r\n            const name =  SKILLS[skill].entrieName;\r\n            const count= skills ? skills[name] : skill_values[skill];\r\n            const pic=`/static/assets/img/skillsAlfred/${SKILLS[skill].picture}${count?'':'_disabled'}.svg`;\r\n              return (\r\n                <Grid item xs={6} lg={3} xl={3} sm={6} md={6} className={classes.skillCard} onClick={(e) => skillClicked(e, name)}>\r\n                  <Grid>\r\n                    <img title={'pics'} alt={'pics'} src={pic} className={classes.avatarSize}/>\r\n                  </Grid>\r\n                  <Grid className={classes.skillTitle}>{SKILLS[skill].label}</Grid>\r\n                  { hideCount ? null:\r\n                    <Grid className={classes.skillValue}>{`(${skill_values[skill]})`}</Grid>\r\n                  }\r\n                </Grid>\r\n              )\r\n            })\r\n          }\r\n        </Grid>\r\n      </Topic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Skills)\r\n","export default theme => ({\r\n  layoutMobileProfilHeader:{\r\n    backgroundImage: 'url(../../../../assets/img/banner/banneProfil.svg)',\r\n    height: '30vh',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    backgroundRepeat: 'no-repeat'\r\n  },\r\n  layoutMobileLayoutProfileHeader:{\r\n    position: 'absolute',\r\n    left: '10px',\r\n  },\r\n  profilLayoutAvatar:{\r\n    width: 100,\r\n    height:100,\r\n    backgroundColor: 'white',\r\n    borderRadius: '50%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    border: '2px solid rgba(178, 204, 251, 1)',\r\n    position: 'absolute',\r\n    bottom: '-50px',\r\n  },\r\n  cardPreviewLarge: {\r\n    width: '90%',\r\n    height: '90%',\r\n  },\r\n  button:{\r\n    textTransform: 'initial',\r\n    color: 'black'\r\n  },\r\n  profilLayoutScrollMenu:{\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    height : '10%',\r\n    alignItems: 'flex-end'\r\n  },\r\n})\r\n","export default theme => ({\r\n  mainContainerListAlfred:{\r\n    padding: '1%',\r\n    display:'flex',\r\n  }\r\n})\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AApBA;AACA;AAqBA;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAcA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAzCA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAgCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAIA;AAKA;AACA;AAjFA;AACA;AAkFA;;;;;;;;;;;;AC7FA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAjCA;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AAFA;AADA;;;;A","sourceRoot":""}